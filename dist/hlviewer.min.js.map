{"version":3,"sources":["webpack://HLViewer/webpack/universalModuleDefinition","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/mat2.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack://HLViewer/./src/Reader.ts","webpack://HLViewer/webpack/bootstrap","webpack://HLViewer/./node_modules/free-style/dist.es2015/index.js","webpack://HLViewer/./node_modules/typestyle/lib.es2015/internal/formatting.js","webpack://HLViewer/./node_modules/typestyle/lib.es2015/internal/utilities.js","webpack://HLViewer/./node_modules/typestyle/lib.es2015/index.js","webpack://HLViewer/./node_modules/typestyle/lib.es2015/internal/typestyle.js","webpack://HLViewer/./node_modules/preact/dist/preact.mjs","webpack://HLViewer/./src/PlayerInterface/Controls.style.ts","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/mat2d.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/quat2.js","webpack://HLViewer/./node_modules/gl-matrix/lib/gl-matrix/vec2.js","webpack://HLViewer/./node_modules/nanoevents/index.js","webpack://HLViewer/./src/Game.ts","webpack://HLViewer/./src/Util.ts","webpack://HLViewer/./src/Parsers/Util.ts","webpack://HLViewer/./src/Time.ts","webpack://HLViewer/./src/SoundSystem.ts","webpack://HLViewer/./src/Replay/Replay.ts","webpack://HLViewer/./src/Replay/ReplayState.ts","webpack://HLViewer/./src/Replay/readDelta.ts","webpack://HLViewer/./src/Parsers/Sprite.ts","webpack://HLViewer/./src/PlayerInterface/Buttons/SettingsButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/FullscreenButton/index.tsx","webpack://HLViewer/./src/Fullscreen.ts","webpack://HLViewer/./src/index.ts","webpack://HLViewer/./src/Loader.ts","webpack://HLViewer/./src/Sound.ts","webpack://HLViewer/./src/Parsers/Tga.ts","webpack://HLViewer/./src/Parsers/Wad.ts","webpack://HLViewer/./src/Replay/ReplayMap.ts","webpack://HLViewer/./src/Replay/ReplayChunk.ts","webpack://HLViewer/./src/Replay/FrameDataReader.ts","webpack://HLViewer/./src/Replay/readCoord.ts","webpack://HLViewer/./src/Replay/DeltaType.ts","webpack://HLViewer/./src/BitReader.ts","webpack://HLViewer/./src/Xhr.ts","webpack://HLViewer/./src/Parsers/BspParser.ts","webpack://HLViewer/./src/Parsers/Vdf.ts","webpack://HLViewer/./src/Bsp.ts","webpack://HLViewer/./src/Parsers/BspLightmapParser.ts","webpack://HLViewer/./src/Input/Mouse.ts","webpack://HLViewer/./src/Input/Touch.ts","webpack://HLViewer/./src/Graphics/Camera.ts","webpack://HLViewer/./src/Input/Keyboard.ts","webpack://HLViewer/./src/Graphics/Context.ts","webpack://HLViewer/./src/ReplayPlayer.ts","webpack://HLViewer/./src/Graphics/Renderer.ts","webpack://HLViewer/./src/Graphics/SkyScene.ts","webpack://HLViewer/./src/Graphics/SkyShader/SkyShader.ts","webpack://HLViewer/./src/Graphics/WorldScene.ts","webpack://HLViewer/./src/Graphics/WorldShader/WorldShader.ts","webpack://HLViewer/./src/Parsers/BspEntityParser.ts","webpack://HLViewer/./src/Graphics/Util.ts","webpack://HLViewer/./src/Config.ts","webpack://HLViewer/./src/PlayerInterface/index.tsx","webpack://HLViewer/./src/PlayerInterface/Root.tsx","webpack://HLViewer/./src/PlayerInterface/Loading/index.tsx","webpack://HLViewer/./src/PlayerInterface/Loading/style.ts","webpack://HLViewer/./src/PlayerInterface/FreeMode/index.tsx","webpack://HLViewer/./src/PlayerInterface/FreeMode/style.ts","webpack://HLViewer/./src/PlayerInterface/Buttons/SettingsButton/style.ts","webpack://HLViewer/./src/PlayerInterface/Buttons/FullscreenButton/style.ts","webpack://HLViewer/./src/PlayerInterface/ReplayMode/index.tsx","webpack://HLViewer/./src/PlayerInterface/Time/index.tsx","webpack://HLViewer/./src/PlayerInterface/Time/style.ts","webpack://HLViewer/./src/PlayerInterface/TimeLine/index.tsx","webpack://HLViewer/./src/PlayerInterface/TimeLine/style.ts","webpack://HLViewer/./src/PlayerInterface/VolumeControl/index.tsx","webpack://HLViewer/./src/PlayerInterface/VolumeControl/style.ts","webpack://HLViewer/./src/PlayerInterface/Buttons/PlayButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/PauseButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/VolumeButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/VolumeButton/style.ts","webpack://HLViewer/./src/PlayerInterface/Buttons/SpeedUpButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/SpeedDownButton/index.tsx","webpack://HLViewer/./src/PlayerInterface/Buttons/SpeedDownButton/style.ts","webpack://HLViewer/./src/PlayerInterface/Root.style.ts"],"names":["String","fromCharCode","Math","max","s","this","sheet","join","style","rule","e","i","ControlsStyle","stylesheet","controls","zIndex","position","width","bottom","padding","boxSizing","backgroundColor","userSelect","opacity","transition","controlsVisible","buttons","height","display","justifyContent","marginBottom","alignItems","button","cursor","left","$nest","marginRight","right","UByte","Byte","UShort","Short","UInt","Int","Float","Double","NString","ReaderDataType","data","DataView","offset","byteLength","seek","tell","getInt8","skip","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","ub","bind","push","Uint8Array","buffer","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","nstr","str","f","o","events","FREE","REPLAY","PlayerMode","pauseTime","isPaused","lastTime","accumTime","timeStep","title","pointerLocked","touch","Touch","mouse","Mouse","keyboard","Keyboard","entities","onLoadAll","replay","changeReplay","changeMode","map","skies","forEach","isDone","Object","entries","sprites","sounds","length","changeMap","t","emit","draw","requestAnimationFrame","canvas","parentElement","clientWidth","clientHeight","camera","aspect","updateProjectionMatrix","context","gl","viewport","drawingBufferWidth","drawingBufferHeight","now","update","renderer","mapName","skyScene","worldScene","onTouchStart","touches","item","pressed","clientX","clientY","onTouchEnd","delta","onTouchMove","onMouseMove","movementX","movementY","pageX","pageY","keyDown","keys","which","preventDefault","keyUp","onVisibilityChange","document","hidden","soundSystem","SoundSystem","config","loader","Loader","on","addEventListener","window","Camera","init","mode","player","ReplayPlayer","createNanoEvents","Context","checkWebGLSupport","hasSupport","status","message","createElement","r","Renderer","WorldScene","SkyScene","game","load","toLowerCase","name","find","origin","rotation","KEYS","W","S","A","D","C","SPACE","slice","lastIndexOf","replace","performance","mozNow","msNow","oNow","webkitNow","Date","getTime","formatTime","toString","AudioContext","webkitAudioContext","parseFloat","localStorage","getItem","setItem","channels","preMuteVolume","masterGain","createGain","gain","value","connect","destination","source","stop","createBufferSource","start","getVolume","setVolume","demoProtocol","ui","netProtocol","modName","mapCrc","dirOffset","id","flags","cdTrack","time","frames","type","tick","orientation","size","FrameDataReader","read","index","command","sound","channel","sample","attenuation","volume","pitch","error","header","directories","Reader","Error","macros","b","frame","n","getInitialDeltaDecoders","forward","up","RefParams","frametime","intermission","paused","spectator","onground","waterlevel","velocity","viewHeight","idealPitch","viewAngles","health","crosshairAngle","viewSize","punchAngle","maxClients","viewEntity","playerCount","maxEntities","demoPlayback","hardware","smoothing","ptr_cmd","ptr_movevars","nextView","onlyClientDraw","UserCmd","lerp_msec","msec","UNUSED1","forwardMove","sideMove","upMove","lightLevel","UNUSED2","us","impulse","weaponSelect","UNUSED","impactIndex","impactPosition","MoveVars","gravity","stopSpeed","maxSpeed","spectatorMaxSpeed","acceleration","airAcceleration","waterAcceleration","friction","edgeFriction","waterFriction","entityGravity","bounce","stepSize","maxVelocity","zMax","waveHeight","footsteps","skyName","rollAngle","rollSpeed","skyColor","skyVec","view","viewModel","incoming_sequence","incoming_acknowledged","incoming_reliable_acknowledged","incoming_reliable_sequence","outgoing_sequence","reliable_sequence","last_reliable_sequence","frameData","clientData","weaponFlags","fov","event","delay","args","entityIndex","ducking","fparam1","fparam2","iparam1","iparam2","bparam1","bparam2","weaponAnimation","animation","body","c","ReplayState","feedFrame","SVC","SERVERINFO","ReplayMap","mapFileName","RESOURCELIST","setResources","ReplayChunk","addChunk","startTime","timeLength","setData","arrx","l","SOUND","SPAWNSTATICSOUND","resources","soundIndex","used","STUFFTEXT","commands","func","params","maps","deltaDecoders","customMessages","cameraPos","JSON","parse","stringify","cameraRot","readBits","DeltaType","DT_BYTE","DT_SIGNED","bits","divisor","DT_SHORT","DT_INTEGER","DT_FLOAT","DT_TIMEWINDOW_8","DT_TIMEWINDOW_BIG","DT_ANGLE","DT_STRING","readString","delta_description_t","VP_PARALLEL_UPRIGHT","FACING_UPRIGHT","VP_PARALLEL","ORIENTED","VP_PARALLEL_ORIENTED","SpriteType","SPR_NORMAL","SPR_ADDITIVE","SPR_INDEXALPHA","SPR_ALPHTEST","SpriteAlphaType","SYNCHRONIZED","RANDOM","SpriteSyncType","version","alphaType","radius","frameCount","beamLength","syncType","group","paletteWithLastTransToRGBA","paletteToRGBA","Component","onFreeModeClick","props","pause","onReplayModeClick","toggleMenu","setState","isOpen","state","class","settings","classes","onClick","xmlns","viewBox","fill","d","menuOpen","menu","menuItemTitle","menuItemSelected","menuItem","isInFullscreen","Fullscreen","exit","enter","root","onFullscreen","onChange","onChangeRemove","a","enabled","element","request","change","removeEventListener","setTitle","getTitle","VERSION","querySelector","Config","Game","PlayerInterface","Loading","Skipped","Done","progress","wads","console","isLoading","extname","loadReplay","loadMap","getReplaysPath","xhr","method","isBinary","progressCallback","catch","isError","Replay","parseIntoChunks","done","loadSound","checkStatus","getMapsPath","BspParser","model","indexOf","filter","loadSprite","skyname","loadSky","textures","isExternal","wad","loadWad","Promise","all","getBasePath","Sprite","getSkiesPath","Tga","getWadsPath","Wad","getSoundsPath","Sound","create","getContext","decodeAudioData","idLength","colorMapType","imageType","colorMap","firstEntryIndex","image","xOrigin","yOrigin","depth","descriptor","x","y","rowCount","rowHeight","glyphs","p","diskLength","isCompressed","basename","chunks","skins","models","decals","custom","clone","reader","reason","BitStream","packetIndex","readDelta","fireTime","readCoord","xPosition","yPosition","zPosition","split","trim","yaw","roll","protocol","spawnCount","clientDllHash","maxPlayers","playerIndex","isDeathmatch","gameDir","hostName","mapCycle","lightInfo","clientIndex","clientUserId","clientUserInfo","clientCdKeyHash","fields","slot","ping","loss","direction","count","color","modelIndex","sequence","skin","renderMode","renderAmt","renderColor","renderFx","eventIndex","eventData","delayBit","extraData","effect","textColor","effectColor","fadeInTime","fadeOutTime","holdTime","effectTime","sign","text","track","loopTrack","saveName","sequenceNumber","weaponModelBodyGroup","positionIndex","decalName","angleToAdd","entityStates","downloadSize","md5hash","initialPercent","filename","flag","codecName","quality","fallbackDir","canCheat","timeScale","url","requestId","handlers","bad","nop","disconnect","setView","print","stuffText","setAngle","serverInfo","lightStyle","updateUserInfo","deltaDescription","stopSound","pings","particle","damage","spawnStatic","eventReliable","spawnBaseLine","tempEntity","setPause","signOnNum","centerPrint","killedMonster","foundSecret","spawnStaticSound","finale","restore","cutscene","weaponAnim","roomType","addAngle","newUserMsg","packetEntities","deltaPacketEntities","choke","resourceList","newMoveVars","resourceRequest","customization","soundFade","fileTxferFailed","hltv","director","voiceInit","voiceData","sendExtraInfo","resourceLocation","sendCvarValue","sendCvarValue2","BAD","NOP","DISCONNECT","EVENT","SETVIEW","TIME","PRINT","SETANGLE","LIGHTSTYLE","UPDATEUSERINFO","DELTADESCRIPTION","CLIENTDATA","STOPSOUND","PINGS","PARTICLE","DAMAGE","SPAWNSTATIC","EVENT_RELIABLE","SPAWNBASELINE","TEMPENTITY","SETPAUSE","SIGNONNUM","CENTERPRINT","KILLEDMONSTER","FOUNDSECRET","INTERMISSION","FINALE","CDTRACK","RESTORE","CUTSCENE","WEAPONANIM","DECALNAME","ROOMTYPE","ADDANGLE","NEWUSERMSG","PACKETENTITIES","DELTAPACKETENTITIES","CHOKE","NEWMOVEVARS","RESOURCEREQUEST","CUSTOMIZATION","CROSSHAIRANGLE","SOUNDFADE","FILETXFERFAILED","HLTV","DIRECTOR","VOICEINIT","VOICEDATA","SENDEXTRAINFO","TIMESCALE","RESOURCELOCATION","SENDCVARVALUE","SENDCVARVALUE2","getBits","scratch","setUint32","ArrayBuffer","readUint8","apply","decodeURIComponent","XMLHttpRequest","responseType","lengthComputable","loaded","total","getResponseHeader","target","readyState","response","open","send","m","maxs","mins","firstFace","faceCount","edgeCount","textureIndex","textureInfo","firstEdge","sShift","tShift","v","processFace","lightmapOffset","faces","Entities","Planes","Textures","Vertices","Visibility","Nodes","TexInfo","Faces","Lighting","ClipNodes","Leaves","MarkSurfaces","Edges","SurfEdges","Models","BspLumpIndex","loadEntities","loadTextures","loadModels","loadFaces","loadEdges","loadSurfEdges","loadVertices","loadTexInfo","loadLightmap","BspLightmapParser","Bsp","TEXTURE_SIZE","getTexture","plane","planeSide","styles","headNodes","visLeaves","loadTextureData","vdf","classname","Number","renderamt","rendermode","renderfx","rendercolor","test","lightmap","block","texture","getDimensions","readLightmap","minU","minV","findFreeSpace","click","leftClick","rightClick","vec2","projectionMatrix","mat4","glMatrix","toRadian","near","far","viewMatrix","vec3","perspective","identity","rotateX","rotateZ","translate","B","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","T","U","V","X","Y","Z","CTRL","ALT","VERTEX","FRAGMENT","ShaderType","alpha","WebGLRenderingContext","createProgram","createShader","vertexShaderSrc","fragmentShaderSrc","attachShader","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","deleteProgram","deleteShader","getProgramInfoLog","VALIDATE_STATUS","useProgram","attributeNames","getAttribLocation","uniformNames","getUniformLocation","handle","attributes","uniforms","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getExtension","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","currentMap","currentChunk","currentTime","currentTick","isPlaying","speed","reset","readFrame","play","isNaN","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","CULL_FACE","cullFace","FRONT","vertexBuffer","indexBuffer","isReady","shader","SkyShader","createBuffer","createTexture","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","rt","dn","ft","lf","bk","getImageData","putImageData","drawImage","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","texParameterf","TEXTURE_MAG_FILTER","LINEAR","getAnisotropyExtension","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","enableVertexAttribs","setVertexAttribPointers","setDiffuse","updateViewMatrix","setViewMatrix","setProjectionMatrix","drawElements","TRIANGLES","program","aPosition","aTexCoord","uViewMx","uProjectionMx","uDiffuse","uniformMatrix4fv","uniform1i","vertexAttribPointer","FLOAT","atan2","modelMatrix","sceneInfo","bsp","MainShader","fillBuffer","loadSpriteTextures","isTransparent","sort","isPowerOfTwo","nextPowerOfTwo","resizeTexture","setLightmap","activeTexture","TEXTURE1","TEXTURE0","RenderMode","Normal","Solid","Additive","parseInt","substr","setOpacity","renderWorldSpawn","renderOpaqueEntities","depthMask","renderTransparentEntities","setModelMatrix","drawArrays","angles","fromValues","add","scale","rotateY","Color","Texture","Glow","DST_ALPHA","distance","dist","aTexCoord2","uModelMx","uLightmap","uOpacity","uniform1f","No","Yes","WorldSpawnStartDark","WorldSpawnGameTitle","WorldSpawnNewUnit","FewestPlayers","FirstTeam","WorldSpawnDefaultTeam","Walk","Run","Instantaneous","No_TurnToFace","AiScriptedSequenceMoveTo","DefaultAI","Ambush","AiScriptedSequenceFinishSchedule","Repeatable","LeaveCorpse","AiScriptedSequenceSpawnflags","None","HugeMachine","BigMachine","Machine","SlowFadeIn","FadeIn","QuickFadeIn","SlowPulse","Pulse","QuickPulse","SlowOscillator","Oscillator","QuickOscillator","GrungePitch","VeryLowPitch","LowPitch","HighPitch","VeryHighPitch","ScreamingPitch","OscillateSpinUpDown","PulseSpinUpDown","RandomPitch","RandomPitchFast","IncrementalSpinup","Alien","Bizzare","PlanetX","Haunted","AmbientGenericPreset","PlayEverywhere","SmallRadius","MediumRadius","LargeRadius","StartSilent","NotToggled","AmbientGenericSpawnFlags","UseActivates","StartOn","ButtonTargetSpawnFlags","NoTrigger","SeePlayerMadAtPlayer","TakeDamage","HalfHealthRemaining","Death","HearWorld","HearPlayer","HearCombat","SeePlayerUnconditional","SeePlayerNotInCombat","CyclerWeaponTriggerCondition","Toggle","RandomStrike","Ring","StartSparks","EndSparks","DecalEnd","FadeStart","FadeEnd","EnvBeamSpawnFlags","EmbeddedFix","OpaqueBlockLight","OpaqueEmbeddedFix","OpaqueConcaveFix","ZHLTLightFlags","FastPulse","SlowWidePulse","FastWidePulse","SlowFadeAway","FastFadeAway","SlowBecomeSolid","FastBecomeSolid","SlowStrobe","FastStrobe","FasterStrobe","SlowFlicker","FastFlicker","ConstantGlow","DistortModels","HologramDistort","RenderEffect","worldspawn","mapversion","maxRange","MaxRange","light","WaveHeight","startDark","startdark","newUnit","newunit","defaultTeam","defaultteam","gameTitle","gametitle","aiscripted_sequence","spawnflags","m_iszEntity","m_iszPlay","m_flRadius","m_flRepeat","m_fMoveTo","m_iFinishSchedule","ambient_generic","targetName","targetname","preset","startVolume","volstart","fadeIn","fadein","fadeOut","fadeout","pitchStart","pitchstart","spinUp","spinup","spinDown","spindown","lfoType","lfotype","lfoRate","lforate","lfoModPitch","lfomodpitch","lfoModVolume","lfomodvolume","cSpinUp","cspinup","spawnFlags","ammo_357","killTarget","killtarget","ammo_9mmAR","ammo_9mmbox","ammo_9mmclip","ammo_ARgrenades","ammo_buckshot","ammo_crossbow","ammo_gaussclip","ammo_rpgclip","button_target","master","renderEffect","renderAmmount","zhltLightFlags","zhlt_lightflags","lightOrigin","light_origin","cycler","cycler_sprite","framerate","cyclear_weapon","triggerTarget","TriggerTarget","triggerCondition","TriggerCondition","cyclear_wreckage","env_beam","Radius","life","boltWidth","BoltWidth","noiseAmplitude","NoiseAmplitude","textureScroll","TextureScroll","frameRate","frameStart","framestart","strikeTime","StrikeTime","originalClassname","createImageData","paths","base","replays","rootNode","render","Root","super","node","onPointerLockChange","pointerLockElement","onContextMenu","onWindowClick","isActive","onRootClick","stopPropagation","fadeReset","onKeyDown","toggleMute","onModeChange","forceUpdate","onLoadStart","onLoadEnd","onTitleChange","onMouseEnter","isMouseOver","onMouseLeave","isVisible","clearTimeout","setTimeout","onScreenClick","requestPointerLock","onScreenDblClick","appendChild","getCanvas","offLoadStart","offLoad","offModeChange","offTitleChange","rootVisible","titleVisible","visible","screen","ref","onDblClick","FreeMode","ReplayMode","sky","sprite","items","onItemLoad","onItemProgress","offProgress","Array","loading","loadingHidden","spinner","xmlSpace","log","key","logItem","formatItem","reduce","LoadingStyle","top","marginLeft","marginTop","animationName","keyframes","from","transform","to","background","fontFamily","margin","paddingLeft","listStyle","SettingsButton","FullscreenButton","active","FreeModeStyle","SettingsButtonStyle","fontSize","flexFlow","minWidth","borderBottom","fontWeight","FullscreenButtonStyle","onPlayClick","onPauseClick","onSpeedDown","speedDown","onSpeedUp","speedUp","onVolumeClick","onPlayStateChange","offPlay","offPause","offStop","TimeLine","SpeedDownButton","PlayButton","PauseButton","SpeedUpButton","VolumeButton","VolumeControl","Time","onPlay","onPauseOrStop","onPostUpdate","currentTarget","getClientRects","seekByPercent","ghostKnobActive","ghostKnobPos","offPostUpdate","timeline","ghostLine","line","knob","ghostKnob","borderRadius","onVolumeChange","offVolumeChange","control","SpeedDownButtonStyle","RootStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;CAAA,cACA,kDACA,mBACA,sCACA,aACA,yBACA,qBAEA,eARA,CASC,yBCoND,WDpNC,ECuLD,SDvLC,ECwKD,WDxKC,EC0JD,UD1JC,EE4SD,UF5SC,EE4SD,SF5SC,EEqND,SFrNC,EEoND,SFpNC,EG+BD,SH/BC,EGUD,QHVC,EIiFUA,OAAOC,aJjFjB,EIsBiBC,KAAKC,IJrBvB,O,YKNA,cAGA,QACA,oBAGA,YACA,IACA,KACA,YAUA,OANC,EAAD,iCAGA,OAGA,UAvBA,SAiFA,OArDC,EAAD,IAGA,MAGA,oBACA,UACA,2BAA0C,uBAK1C,gBACA,gDACA,4CAAwD,iBAExD,sCAAiD,YAQjD,kBAEA,GADA,cACA,aACA,qDACA,0BAGA,GAFA,OACA,mCAAyC,wBACzC,2DAAgH,aAAqB,UAArI,IACA,UAIA,gBACA,sBACA,WAA2B,kBAC3B,WAAiC,UAEjC,OADC,EAAD,WACA,GAIA,kBAAsD,kDAGtD,OAIA,U,+BCPA,SAAS,EAAT,GACA,SACA,wBAAsC,iBACtC,uBAeA,SAAS,EAAT,YACC,GAAD,0BACA,cAEA,YAKA,SAASC,EAAT,GACA,qCAKA,SAAS,EAAT,WACC,EAAD,GACA,KAEA,qCACC,EAAD,SACA,OACA,gCACA,qCAIA,iBAHA,eAOA,OACA,cACA,gBACA,sBAMA,SAAS,EAAT,GACA,SACA,aACA,iBAEA,2BADA,QAGA,UAKA,SAAS,EAAT,YACA,mBACA,YACA,kBAKA,SAAS,EAAT,WACA,MAAW,6BAA0B,YACrC,QACA,yBACA,SACA,WACA,UACA,SACA,cAEA,UAEA,MACA,eAA+B,gCAE/B,mBACA,mCAGA,CACA,mBADA,GAGA,QAA6B,gCAC7B,mBACA,kBAGA,SAKA,SAAS,EAAT,aACA,UAAgB,iCAAhB,EAA4C,OAC3C,EAAD,WACA,IACA,SAAuB,GAAH,aACpB,gBACA,aACA,gCACA,SAEA,UAAgB,uCAAhB,EAAiD,CACjD,yCACA,eACA,UAMA,SAAS,EAAT,GACA,SACA,YAAmB,WAAgB,IACnC,QACA,SAsIA,SAAS,EAAT,KAGA,MAFA,IApQA,gBACC,EAAD,KACA,WAFA,KAGA,KACA,uBACA,2BA+PoB,ICjVb,SAAS,EAAT,GAEP,SACA,gBAEA,WAEA,eACA,QACA,gBACA,WACA,eAGA,gBACA,iBAGA,OAGA,SCVO,SAAS,IAEhB,QADC,EAAD,GACA,IAAoB,mBAAuB,IAC3C,kBAEA,SACA,iBAA2B,6DAAwE,mBAA0B,OAC7H,sBAAyC,qBAA8B,IACvE,oBAA8B,aAC9B,UAMO,SAAS,IAEhB,QADC,EAAD,GACA,IAAoB,mBAAuB,IAC3C,kBAIA,UADC,EAAD,GACA,QAAyC,WAAuB,IAEhE,YADA,QACA,MAGA,gBAEA,YACA,YAKA,KADA,cACA,yBAGA,8CACA,eAZA,GAmBA,SCGO,SAAS,EAAT,GACP,YAAgC,CAAE,qBAIlC,UAFA,qBAEA,E,kqBHpEA,IAAI,EAAJ,E,MAIA,sBAMA,GACA,4BACA,sBACA,qBACA,qBACA,WACA,iBACA,oBACA,eACA,UACA,oBACA,gBACA,OACA,YACA,gBACA,cACA,gBACA,aACA,cACA,YACA,cACA,kBACA,mBACA,oBACA,WACA,eACA,gBACA,iBACA,aACA,cACA,UACA,QACA,UACA,WACA,SACA,UACA,OAEA,eACA,gBACA,eACA,mBACA,oBACA,oBACA,iBACA,gBAGA,iBACA,mDACA,UAsJA,MAAM,EAAN,CACA,WACA,cACA,eAKO,MAAM,EACb,iBACA,eACA,cACA,gBACA,cACA,mCACA,mCAEA,aACC,EAAD,wBACA,kCAEA,GADA,yBACA,MACA,uBACA,sBACA,+BACA,gBACA,6CAEC,GAAD,sCACC,EAAD,yBACA,aACA,WACA,iBACA,qCACA,gBACA,6BAIA,UACA,6BACA,MACA,yBADA,MAEC,EAAD,qBACA,2BACA,gBACA,4BACA,qBACA,uBACA,uBACA,gBACA,8BAEC,GAAD,gCACA,mBACA,aACA,iBACA,qCACA,gBACA,8BAKA,SACA,4CAEA,SACA,0BACA,YACA,YAEA,WACA,0BACA,eACA,YAEA,QACA,2BAMO,MAAM,EACb,iBACA,gBACA,UAEA,YACA,qBAEA,QACA,aAMO,MAAM,U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,EAAT,KAEP,WAMA,OALC,EAAD,QACA,WACA,WACA,OAEA,EASO,SAAS,EAAT,GACP,2BAWO,SAAS,EAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OAKA,OAJC,EAAD,WACA,aACA,aACA,aACA,EAWO,SAAS,EAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OAKA,OAJC,EAAD,WACA,aACA,cACA,cACA,EAWO,SAAS,EAAT,OAAc,IACpB,EAAD,KACA,OACA,OACA,OACA,OACA,OAKA,OAJC,EAAD,OACA,SACA,SACA,SACA,EAcO,SAAS,EAAT,SACN,EAAD,KACA,OAKA,OAJC,EAAD,KACA,OACA,QACA,OACA,EAcO,SAAS,EAAT,KAKP,OAJC,EAAD,QACA,OACA,OACA,UACA,EASO,SAAS,EAAT,GACP,qDASO,SAAS,EAAT,GACP,kDAWO,SAAS,EAAT,SAKP,OAJC,EAAD,aACA,UACA,UACA,oBACA,QAWO,SAAS,EAAT,OAKP,OAJC,EAAD,aACA,eACA,eACA,eACA,EAWO,SAAS,EAAT,OAKP,OAJC,EAAD,aACA,eACA,eACA,eACA,EAUO,SAAS,EAAT,KACP,0DAUO,SAAS,EAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,eAA8B,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,eAWtS,SAAS,EAAT,OAKP,OAJC,EAAD,UACA,YACA,YACA,YACA,EAYO,SAAS,EAAT,SAKP,OAJC,EAAD,eACA,iBACA,iBACA,iBACA,EW1YO,SAAS,IAChB,aAAmC,GASnC,OARM,IAAmB,eACzB,OACA,OACA,OACA,QAEA,OACA,OACA,EASO,SAAS,EAAT,GACP,aAAmC,GAOnC,OANC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,EAUO,SAAS,EAAT,KAOP,OANC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,EASO,SAAS,EAAT,GAOP,OANC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,EAcO,SAAS,EAAT,aACP,aAAmC,GAOnC,OANC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,EAeO,SAAS,EAAT,eAOP,OANC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,EAUO,SAAS,EAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OAEA,UARsB,UAYtB,MAEA,SACA,UACA,UACA,SACA,iBACA,iBAnBsB,GAUtB,KAmBO,SAAS,EAAT,GACP,2BAWO,SAAS,EAAT,OAAiB,IACvB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAOA,OANC,EAAD,WACA,aACA,aACA,aACA,eACA,eACA,EAWO,SAAS,EAAT,OAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OAOA,OANC,EAAD,WACA,aACA,cACA,cACA,OACA,OACA,EAWO,SAAS,EAAT,OAAc,IACpB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OAOA,OANC,EAAD,OACA,SACA,SACA,SACA,OACA,OACA,EAWO,SAAS,EAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OAOA,OANC,EAAD,KACA,OACA,OACA,OACA,eACA,eACA,EAcO,SAAS,EAAT,KACP,WACA,OAOA,OANC,EAAD,KACA,OACA,QACA,OACA,OACA,OACA,EAcO,SAAS,GAAT,KAOP,OANC,EAAD,QACA,OACA,OACA,UACA,OACA,OACA,EAcO,SAAS,GAAT,KAOP,OANC,EAAD,KACA,OACA,OACA,OACA,UACA,UACA,EASO,SAAS,GAAT,GACP,0EASO,SAAS,GAAT,GACP,wEAWO,SAAS,GAAT,OAOP,OANC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OAOP,OANC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OAOP,OANC,EAAD,UACA,YACA,YACA,YACA,YACA,YACA,EAYO,SAAS,GAAT,SAOP,OANC,EAAD,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,EAUO,SAAS,GAAT,KACP,oFAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,eAA8B,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,eC1chd,SAAS,KAChB,aAAmC,GAYnC,OAXM,IAAmB,eACzB,OACA,OACA,OACA,OACA,OACA,QAEA,OACA,OACA,OACA,EAUO,SAAS,GAAT,KAUP,OATC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,EASO,SAAS,GAAT,GACP,aAAmC,GAUnC,OATC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,EAUO,SAAS,GAAT,KAUP,OATC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,EAiBO,SAAS,GAAT,mBACP,aAAmC,GAUnC,OATC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EAkBO,SAAS,GAAT,qBAUP,OATC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EASO,SAAS,GAAT,GAUP,OATC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EAUO,SAAS,GAAT,KAEP,UACA,WACA,OACA,OACA,UACA,UACA,OACA,UACA,OACA,YAEC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGA,SAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,UACA,WACA,UAGA,cAhBsB,UAqBtB,MAEA,SACA,kBACA,iBACA,SACA,iBACA,kBACA,SACA,kBACA,iBA/BsB,GAmBtB,KAuBO,SAAS,GAAT,KAAgB,IACtB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAWA,OATC,EAAD,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,EASO,SAAS,GAAT,GAAoB,IAC1B,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,4CAWO,SAAS,GAAT,OAAiB,IACvB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAaA,OAXC,EAAD,eACA,iBACA,iBAEA,iBACA,iBACA,iBAEA,iBACA,iBACA,iBACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAaA,OAXC,EAAD,KACA,OACA,OAEA,OACA,OACA,OAEA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAaA,OAXC,EAAD,WACA,aACA,aAEA,aACA,aACA,aAEA,OACA,OACA,OACA,EAWO,SAAS,GAAT,OACP,WACA,OAaA,OAXC,EAAD,UACA,YACA,YAEA,YACA,YACA,YAEA,UACA,UACA,UACA,EAcO,SAAS,GAAT,KAUP,OATC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,UACA,UACA,OACA,EAcO,SAAS,GAAT,KACP,WACA,OAaA,OAXC,EAAD,KACA,OACA,OAEA,QACA,OACA,OAEA,OACA,OACA,OACA,EAcO,SAAS,GAAT,KAYP,OAXC,EAAD,QACA,OACA,OAEA,OACA,UACA,OAEA,OACA,OACA,OACA,EAUO,SAAS,GAAT,KAYP,OAXC,EAAD,QACA,UACA,OAEA,UACA,UACA,OAEA,UACA,UACA,OACA,EAWO,SAAS,GAAT,SACN,EAAD,KACA,OACA,OACA,OACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAcA,OAZC,EAAD,SACA,SACA,SAEA,SACA,WACA,SAEA,SACA,SACA,WAEA,EAWO,SAAS,GAAT,SACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGA,0BAhCO,UAqCP,MAEA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBAjDO,GAmCP,KA2BO,SAAS,GAAT,OAUP,OATC,EAAD,OACA,OACA,OACA,OACA,UACA,OACA,QACA,OACA,OACA,EASO,SAAS,GAAT,GACP,uGASO,SAAS,GAAT,GACP,oGAWO,SAAS,GAAT,OAUP,OATC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OAUP,OATC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OAUP,OATC,EAAD,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,EAYO,SAAS,GAAT,SAUP,OATC,EAAD,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,EAUO,SAAS,GAAT,KACP,2HAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,eAA8B,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,eChxB/sB,SAAS,KAChB,aAAmC,IAmBnC,OAlBM,IAAmB,eACzB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,SAEA,OACA,OACA,QACA,QACA,EASO,SAAS,GAAT,GACP,aAAmC,IAiBnC,OAhBC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,EAUO,SAAS,GAAT,KAiBP,OAhBC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,EAwBO,SAAS,GAAT,4BAAAC,EAAA,GACP,aAAmC,IAiBnC,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EAyBO,SAAS,GAAT,4BAAAA,EAAA,KAiBP,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EASO,SAAS,GAAT,GAiBP,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EAUO,SAAS,GAAT,KAEP,cACC,EAAD,KACA,OACA,OACA,OACA,OACA,QAEA,UACA,UACA,WACA,OACA,UACA,WACA,OACA,OACA,YACA,QACA,QACA,aAEC,EAAD,QACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,YACA,WACA,WACA,YACA,YAGA,SAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGA,0BAhCsB,UAqCtB,MAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAtDsB,GAmCtB,KA+BO,SAAS,GAAT,KAAgB,IACtB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAkBA,OAhBC,EAAD,uCACA,4CACA,yCACA,4CACA,4CACA,yCACA,4CACA,yCACA,yCACA,4CACA,0CACA,6CACA,6CACA,0CACA,6CACA,0CACA,EASO,SAAS,GAAT,GAAoB,IAC1B,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAgBA,OAdA,UAWA,UAVA,UASA,UARA,UAOA,UANA,UAKA,UAJA,UAGA,UAFA,UACA,SAmBO,SAAS,GAAT,OAAiB,IACvB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAGA,OACA,OACA,OACA,OAuBA,OAtBC,EAAD,mBACA,qBACA,qBACA,qBAEA,OAAY,OAAU,OAAU,OAChC,qBACA,qBACA,qBACA,qBAEA,OAAY,OAAU,QAAW,QACjC,qBACA,qBACA,sBACA,sBAEA,QAAa,QAAW,QAAW,QACnC,sBACA,sBACA,sBACA,sBACA,EAWO,SAAS,GAAT,OAAkB,IACxB,EAAD,KACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAsBA,OApBC,IAAD,GACA,iCACA,iCACA,kCACA,oCAEA,OAAe,OAAW,OAAW,OACrC,OAAe,OAAW,OAAW,OACrC,OAAe,OAAW,QAAY,QAEtC,OAAiB,KAAAC,EAAa,OAAa,OAC3C,OAAiB,OAAa,OAAa,OAC3C,OAAiB,OAAa,QAAc,QAE5C,wBACA,wBACA,wBACA,yBAGA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OAkBA,OAhBC,EAAD,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,cACA,cACA,YACA,YACA,YACA,YACA,EAYO,SAAS,GAAT,SAAe,IACrB,EAAD,KACA,OACA,OACA,iBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SA5BsB,OA8BrB,EAAD,GACA,MAIA,GADA,MAEA,KACA,KAEA,OAEA,KADA,QAGA,OAAa,OAAW,OAAW,OACnC,OAAa,OAAW,OAAW,OACnC,OAAa,OAAW,QAAY,QAGpC,UAAsB,YAAwB,YAC9C,YAA0B,UAAoB,YAC9C,YAA0B,YAAwB,UAGlD,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBAEA,QAEA,YACA,YACA,YACA,aAvEsB,GAoFf,SAAS,GAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QAuBA,OArBC,IAAD,IAEA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,aAIA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,EAWO,SAAS,GAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QAuBA,OArBC,IAAD,IAEA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,aAIA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,EAWO,SAAS,GAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAuBA,OArBC,IAAD,IAEA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,aAIA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,EAcO,SAAS,GAAT,KAiBP,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,WACA,WACA,WACA,QACA,EAcO,SAAS,GAAT,KAiBP,OAhBC,EAAD,QACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,OACA,OACA,WACA,QACA,QACA,QACA,QACA,QACA,EAeO,SAAS,GAAT,OAAqB,IAC3B,EAAD,KACA,OACA,OACA,iBACA,SACA,SACA,SAP4B,OAS3B,EAAD,GACA,MAIA,GADA,MAEA,KACA,KAEA,OAEA,KADA,QAIA,aACA,eACA,eACA,OACA,eACA,aACA,eACA,OACA,eACA,eACA,cACA,QACA,QACA,QACA,QACA,QAtC4B,GAqDrB,SAAS,GAAT,SACN,EAAD,KACA,OAmBA,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,EAcO,SAAS,GAAT,SACN,EAAD,KACA,OAmBA,OAhBC,EAAD,KACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EAcO,SAAS,GAAT,SACN,EAAD,KACA,OAmBA,OAhBC,EAAD,KACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EAkBO,SAAS,GAAT,WAEN,EAAD,KACA,OACA,OACA,OACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAmBA,OAjBC,EAAD,WACA,SACA,SACA,OACA,SACA,aACA,SACA,OACA,SACA,SACA,cACA,QACA,WACA,WACA,WACA,QAEA,EAUO,SAAS,GAAT,SACN,EAAD,OAA2C,GAC3C,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OAEA,kBAYA,OAVC,EAAD,GACA,2BACA,2BACA,6BAEA,yBACA,yBACA,0BAEA,UACA,EAYO,SAAS,GAAT,KAKP,OAJC,EAAD,SACA,WACA,WAEA,EAaO,SAAS,GAAT,SACN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAMA,OAJC,EAAD,kBACA,oBACA,oBAEA,EAYO,SAAS,GAAT,SAEN,EAAD,gBACA,IA4BA,OA1BC,EAAD,GACA,WACA,WACA,mBACA,mBACA,oBACG,uBACH,yBACA,mBACA,WACA,mBACA,oBACG,YACH,yBACA,mBACA,mBACA,WACA,qBAEA,yBACA,mBACA,mBACA,mBACA,YAGA,EAoBO,SAAS,GAAT,aAEN,EAAD,KACA,OACA,OACA,OACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OAmBA,OAjBC,EAAD,eACA,aACA,aACA,OACA,aACA,iBACA,aACA,OACA,aACA,aACA,kBACA,QACA,WACA,WACA,WACA,QAEA,EAuBO,SAAS,GAAT,eAEN,EAAD,KACA,OACA,OACA,OACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,OACA,OACA,OAEA,OACA,OACA,OAEA,cACA,UACA,UACA,UACA,cACA,UACA,UACA,UACA,cAmBA,OAjBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,2BACA,2BACA,2BACA,QAEA,EAWO,SAAS,GAAT,KAAiB,IACvB,EAAD,KACA,OACA,OACA,OACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAsBA,OApBC,EAAD,SACA,SACA,SACA,OAEA,SACA,WACA,SACA,OAEA,SACA,SACA,YACA,QAEA,QACA,QACA,QACA,QAEA,EAeO,SAAS,GAAT,mBACN,EAAD,QACA,UACA,UAiBA,OAhBC,EAAD,SACA,OACA,OACA,OACA,OACA,WACA,OACA,OACA,aACA,aACA,cACA,SACA,QACA,QACA,cACA,QACA,EAcO,SAAS,GAAT,WACP,IACA,EADA,YAwBA,OAtBC,EAAD,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,kBACA,UACA,cACA,gBAEA,SACA,YAEA,EAcO,SAAS,GAAT,aACN,EAAD,sBACA,0BACA,0BACA,2BACA,UACA,UAkBA,OAhBC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,iBACA,gBACA,cACA,SACA,QACA,QACA,gBACA,QACA,EAeO,SAAS,GAAT,mBACN,EAAD,QACA,UACA,UAiBA,OAhBC,EAAD,QACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,OACA,OACA,UACA,QACA,cACA,cACA,cACA,QACA,EAaO,SAAS,GAAT,aACN,OAAD,EACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAnBO,OAqBN,EAAD,SAAiD,WAA+C,UACrF,OAOX,OAJA,OAIA,GAHA,OAGA,GAFA,OAEA,IAQA,KAHA,KAFA,MAEA,GAHA,OAMA,GAFA,KALA,MAKA,KAEA,GADA,WACA,KAOA,GADA,MAEA,KACA,OAPA,IACA,IACA,MAYA,KAJA,WAIA,GAHA,WAGA,GAFA,WAEA,KAOA,GADA,MAEA,KACA,OAPA,IACA,IACA,KAQA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,qBACA,qBACA,qBACA,QAhFO,GA8FA,SAAS,GAAT,aACN,EAAD,KACA,OACA,OACA,OACA,OACA,OAEA,SACA,SACA,SAEA,cACA,MAEA,GADA,SAEA,KACA,MAGA,cACA,UACA,UA0BA,OAvBA,GADC,EAAD,eAGA,GADA,SAEA,KACA,MAGA,OACA,OACA,OACA,OACA,aACA,aACA,aACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,EASO,SAAS,GAAT,GACP,mLASO,SAAS,GAAT,GACP,gLAWO,SAAS,GAAT,OAiBP,OAhBC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,EAWO,SAAS,GAAT,OAiBP,OAhBC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,EAWO,SAAS,GAAT,OAiBP,OAhBC,EAAD,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,cACA,cACA,cACA,cACA,cACA,cACA,EAYO,SAAS,GAAT,SAiBP,OAhBC,EAAD,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,EAUO,SAAS,GAAT,KACP,kOAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAEA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QAEA,eAA8B,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,wBAAuE,GAAgB,wBAAyE,GAAgB,wBAAyE,GAAgB,wBAAyE,GAAgB,wBAAyE,GAAgB,wBAAyE,GAAgB,edvxDxzC,SAAS,KAChB,aAAmC,GAMnC,OALM,IAAmB,eACzB,OACA,OACA,QAEA,EASO,SAAS,GAAT,GACP,aAAmC,GAInC,OAHC,EAAD,QACA,UACA,UACA,EASO,SAAS,GAAT,GAAe,IACrB,EAAD,KACA,OACA,OACA,sBAWO,SAAS,GAAT,OACP,aAAmC,GAInC,OAHC,EAAD,KACA,OACA,OACA,EAUO,SAAS,GAAT,KAIP,OAHC,EAAD,QACA,UACA,UACA,EAYO,SAAS,GAAT,SAIP,OAHC,EAAD,KACA,OACA,OACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,aACA,eACA,eACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,aACA,eACA,eACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,aACA,eACA,eACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,aACA,eACA,eACA,EAUO,SAAS,GAAT,KAIP,OAHC,EAAD,WACA,aACA,aACA,EAUO,SAAS,GAAT,KAIP,OAHC,EAAD,WACA,aACA,aACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,gBACA,kBACA,kBACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,gBACA,kBACA,kBACA,EAUO,SAAS,GAAT,KAIP,OAHC,EAAD,WACA,aACA,aACA,EAWO,SAAS,GAAT,OAIP,OAHC,EAAD,UACA,YACA,YACA,EAYO,SAAS,GAAT,SAIP,OAHC,EAAD,eACA,iBACA,iBACA,EAUO,SAAS,GAAT,SACN,EAAD,UACA,YACA,YACA,sBAUO,SAAS,GAAT,SACN,EAAD,UACA,YACA,YACA,mBASO,SAAS,GAAT,OACN,EAAD,KACA,OACA,OACA,mBAUO,SAAS,GAAT,KAIP,OAHC,EAAD,SACA,WACA,WACA,EAUO,SAAS,GAAT,KAIP,OAHC,EAAD,UACA,YACA,YACA,EAUO,SAAS,GAAT,SACN,EAAD,KACA,OACA,OACA,cAQA,OAPC,EAAD,IAEA,SACA,YACA,YACA,aAEA,EAUO,SAAS,GAAT,KACP,qCAWO,SAAS,GAAT,WACN,EAAD,KACA,OACA,OACA,OACA,OACA,OAKA,OAHC,EAAD,WACA,aACA,aACA,EAYO,SAAS,GAAT,aACN,EAAD,KACA,OACA,OAIA,OAHC,EAAD,gBACA,kBACA,kBACA,EAcO,SAAS,GAAT,iBACN,EAAD,IACA,cACA,YACA,UACA,YAMA,OAJC,EAAD,+BACA,iCACA,iCAEA,EAcO,SAAS,GAAT,iBACN,EAAD,IACA,MACA,MACA,MACA,QACA,QACA,MAMA,OAJC,EAAD,+BACA,iCACA,iCAEA,EAUO,SAAS,GAAT,KACP,OADO,IAGN,EAAwB,EAAf,OACV,EAAyB,EAAf,KAAe,EACzB,aAKA,OAHC,EAAD,UACA,YACA,SACA,EAYO,SAAS,GAAT,WACN,EAAD,KACA,OACA,OACA,8BAKA,OAJC,EAAD,KACA,oCACA,oCACA,qCACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OAIA,OAHC,EAAD,wBACA,0BACA,0BACA,EAYO,SAAS,GAAT,WAEN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OAGA,UACA,UACA,UAEA,UACA,UACA,UAEA,MAYA,OAXC,GAAD,EACA,KACA,KAEA,KACA,KACA,KAEA,WACA,WACA,WACA,EAWO,SAAS,GAAT,SACP,SACA,KAgBA,OAdC,EAAD,aACA,eACA,eAGA,UACA,yBACA,yBAGA,eACA,eACA,eAEA,EAWO,SAAS,GAAT,SACP,SACA,KAgBA,OAdC,EAAD,aACA,eACA,eAGA,yBACA,UACA,yBAGA,eACA,eACA,eAEA,EAWO,SAAS,GAAT,SACP,SACA,KAgBA,OAdC,EAAD,aACA,eACA,eAGA,yBACA,yBACA,UAGA,eACA,eACA,eAEA,EASO,SAAS,GAAT,SACN,EAAa,GAAU,gBACxB,EAAc,GAAU,gBAExB,QACA,QAEA,MAAe,QAPR,OASN,EAAD,EACA,GACG,IAXI,EAcP,MAUO,SAAS,GAAT,GACP,2CAUO,SAAS,GAAT,KACP,6CAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,eAA8B,GAAgB,wBAAqE,GAAgB,wBAAqE,GAAgB,eejrBjN,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aACA,EAWO,SAAS,GAAT,OACP,MADuB,IAGtB,EAAD,KACA,OACA,OACA,OACA,OACA,OAMA,OAJC,EAAD,WACA,aACA,aACA,aACA,EAWO,SAAS,GAAT,OACP,MADuB,IAGtB,EAAD,KACA,OACA,OACA,OACA,OACA,OAMA,OAJC,EAAD,WACA,aACA,aACA,aACA,EAYO,SAAS,GAAT,KACP,WACA,OACA,OAMA,OAJC,EAAD,KACA,OACA,OACA,yBACA,EAYO,SAAS,GAAT,aAGN,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,SACA,SACA,SACA,SACA,SA+BA,OA1BA,GAFC,EAAD,mBAGA,KACA,KACA,KACA,KACA,MAGA,QAEA,QACA,OACA,eACA,aAIA,MACA,KAGA,aACA,aACA,aACA,aAEA,EASO,SAAS,GAAT,GAAe,IAGrB,EAAU,KACX,EAAW,KACX,EAAW,KAEX,SACA,OAMA,OAJC,EAAD,cACA,gBACA,gBACA,gBACA,EAUO,SAAS,GAAT,KAAe,IACrB,EAAD,KACA,OACA,OACA,OACA,kBACA,UAQA,OAJC,EAAD,QACA,UACA,UACA,SACA,EAWO,SAAS,GAAT,KAKP,OAJC,EAAD,SACA,WACA,WACA,UACA,EAcO,SAAS,GAAT,SAGN,EAAD,eACA,SAEA,OAEA,SACA,UACA,OACA,mBACA,mBACA,uBACG,CAEH,QACA,iBACA,qBAJG,IAKF,GAAD,OACA,UAEA,kCACA,UACA,OACA,2BACA,2BACA,2BAGA,SAaO,SAAS,GAAT,SACP,eAEA,KACA,KAJO,IAMN,EAAD,EAJA,MAKA,OACA,OACA,OACA,OACA,OAOA,OALC,EAAD,eACA,iBACA,iBACA,iBAEA,EASO,SAAS,GAAT,GACP,qDC5YO,SAAS,KAChB,aAAkC,GAWlC,OAVM,IAAmB,eACzB,OACA,OACA,OACA,OACA,OACA,OACA,QAEA,OACA,EAUO,SAAS,GAAT,GACP,aAAkC,GASlC,OARC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,EAiBO,SAAS,GAAT,iBACP,aAAkC,GASlC,OARC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EAgBO,SAAS,GAAT,eACP,aAAkC,GAClC,OACA,OACA,OACA,OACA,WACA,OACA,OAKA,OAJC,EAAD,eACA,iBACA,iBACA,kBACA,EAYO,SAAS,GAAT,OACP,cACA,UACA,UACA,OACA,OACA,OACA,OASA,OARC,EAAD,KACA,OACA,OACA,OACA,iBACA,iBACA,iBACA,kBACA,EAWO,SAAS,GAAT,KASP,OARC,EAAD,KACA,OACA,OACA,OACA,aACA,aACA,aACA,OACA,EAWO,SAAS,GAAT,KASP,OARC,EAAD,QACA,UACA,UACA,UACA,OACA,OACA,OACA,OACA,EAWO,SAAS,GAAT,KAEP,MAAc,KACZ,QACF,aAAiC,GAGjC,OAFE,QACA,UACF,EAWO,SAAS,GAAT,KASP,OARC,EAAD,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,EASO,SAAS,GAAT,GASP,OARC,EAAD,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EAkBO,SAAS,GAAT,mBAUP,OATC,EAAD,KACA,OACA,OACA,OAEA,OACA,OACA,OACA,OACA,EAiBO,SAAS,GAAT,KAKP,OAJC,EAAD,QACA,UACA,UACA,UACA,EAqBO,SAAS,GAAT,KAKP,OAJC,EAAD,QACA,UACA,UACA,UACA,EASO,SAAS,GAAT,KACP,WACA,OACA,OACA,OACA,QACA,QACA,QACA,OAIA,OAHC,EAAD,uBACA,yBACA,yBACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,UACA,UACA,UACA,OACA,OACA,OACA,OASA,OARC,EAAD,KACA,OACA,OACA,OACA,mBACA,mBACA,mBACA,oBACA,EAWO,SAAS,GAAT,OACP,YACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,kBACA,kBACA,kBACA,kBAUA,OATE,UACF,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBACA,EAWO,SAAS,GAAT,OACP,YACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,kBACA,kBACA,kBACA,kBAUA,OATE,UACF,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBACA,EAWO,SAAS,GAAT,OACP,YACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,kBACA,kBACA,kBACA,kBAUA,OATE,UACF,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,OACA,OACA,OACA,OAcA,OAZC,EAAD,mBACA,qBACA,qBACA,qBACA,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,OACA,OACA,OACA,OAcA,OAZC,EAAD,mBACA,qBACA,qBACA,qBACA,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBACA,EAYO,SAAS,GAAT,SAEP,WACA,OAAW,QAEX,uCAGC,EAAD,EARO,GAOP,IAEA,WACA,WACA,WACA,OAEA,OACA,OACA,OACA,OACA,qBACA,qBACA,qBACA,qBAEA,WACA,OACA,OACA,OAMA,OALC,EAAD,mBACA,qBACA,qBACA,qBAEA,EAYO,SAAS,GAAT,OASP,OARC,EAAD,aACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,EAWO,SAAS,GAAT,OACP,WACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OASA,OARC,EAAD,mBACA,qBACA,qBACA,qBACA,qCACA,qCACA,qCACA,qCACA,EAkBO,SAAS,GAAT,OASP,OARC,EAAD,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,EAuBO,SAAS,GAAT,SACP,UAYA,OAXS,EAAH,UAAG,MAET,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEA,EAUO,SAAS,GAAT,KACP,MAAc,MASd,OARC,EAAD,WACA,aACA,aACA,YACA,aACA,aACA,aACA,YACA,EAWO,SAAS,GAAT,KASP,OARC,EAAD,SACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,EAyCO,SAAS,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","file":"hlviewer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HLViewer\"] = factory();\n\telse\n\t\troot[\"HLViewer\"] = factory();\n})(window, function() {\nreturn ","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","export enum ReaderDataType {\r\n  UByte = 0,\r\n  Byte = 1,\r\n  UShort = 2,\r\n  Short = 3,\r\n  UInt = 4,\r\n  Int = 5,\r\n  Float = 6,\r\n  Double = 7,\r\n  NString = 8,\r\n  String = 9\r\n}\r\n\r\nexport class Reader {\r\n  data: DataView\r\n  offset: number\r\n\r\n  constructor(data: ArrayBuffer) {\r\n    this.data = new DataView(data)\r\n    this.offset = 0\r\n  }\r\n\r\n  length() {\r\n    return this.data.byteLength\r\n  }\r\n\r\n  tell() {\r\n    return this.offset\r\n  }\r\n\r\n  seek(offset: number) {\r\n    this.offset = Math.max(0, offset)\r\n  }\r\n\r\n  skip(offset: number) {\r\n    this.seek(this.tell() + offset)\r\n  }\r\n\r\n  b() {\r\n    const r = this.data.getInt8(this.offset)\r\n    this.skip(1)\r\n    return r\r\n  }\r\n\r\n  ub() {\r\n    const r = this.data.getUint8(this.offset)\r\n    this.skip(1)\r\n    return r\r\n  }\r\n\r\n  s(isLittleEndian = true) {\r\n    const r = this.data.getInt16(this.offset, isLittleEndian)\r\n    this.skip(2)\r\n    return r\r\n  }\r\n\r\n  us(isLittleEndian = true) {\r\n    const r = this.data.getUint16(this.offset, isLittleEndian)\r\n    this.skip(2)\r\n    return r\r\n  }\r\n\r\n  i(isLittleEndian = true) {\r\n    const r = this.data.getInt32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  ui(isLittleEndian = true) {\r\n    const r = this.data.getUint32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  f(isLittleEndian = true) {\r\n    const r = this.data.getFloat32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  lf(isLittleEndian = true) {\r\n    const r = this.data.getFloat64(this.tell(), isLittleEndian)\r\n    this.skip(8)\r\n    return r\r\n  }\r\n\r\n  str() {\r\n    let t = this.ub()\r\n    let r = ''\r\n    while (t !== 0) {\r\n      r += String.fromCharCode(t)\r\n      t = this.ub()\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  nstr(n: number) {\r\n    if (n < 0) {\r\n      return ''\r\n    }\r\n\r\n    let r = ''\r\n    while (n > 0) {\r\n      n -= 1\r\n      const charCode = this.ub()\r\n      if (charCode === 0) {\r\n        break\r\n      }\r\n\r\n      r += String.fromCharCode(charCode)\r\n    }\r\n\r\n    if (n !== 0) {\r\n      this.skip(n)\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  arr(n: number, f: () => any) {\r\n    f.bind(this)\r\n    const r = []\r\n    while (n-- > 0) {\r\n      r.push(f())\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  arrx(n: number, type: ReaderDataType, nstrlen = 0) {\r\n    let r: any\r\n\r\n    switch (type) {\r\n      case ReaderDataType.UByte: {\r\n        r = new Uint8Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n)\r\n        break\r\n      }\r\n\r\n      case ReaderDataType.Byte: {\r\n        r = new Int8Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n)\r\n        break\r\n      }\r\n\r\n      case ReaderDataType.UShort:\r\n        r = new Uint16Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 2)\r\n        break\r\n\r\n      case ReaderDataType.Short:\r\n        r = new Int16Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 2)\r\n        break\r\n\r\n      case ReaderDataType.UInt:\r\n        r = new Uint32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Int:\r\n        r = new Int32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Float:\r\n        r = new Float32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Double:\r\n        r = new Float64Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 8)\r\n        break\r\n\r\n      case ReaderDataType.NString:\r\n        r = []\r\n        while (n-- > 0) {\r\n          r.push(r.nstr(nstrlen))\r\n        }\r\n        break\r\n\r\n      case ReaderDataType.String:\r\n        r = []\r\n        while (n-- > 0) {\r\n          r.push(r.str())\r\n        }\r\n        break\r\n    }\r\n\r\n    return r\r\n  }\r\n}\r\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n    \"animation-iteration-count\",\n    \"border-image-outset\",\n    \"border-image-slice\",\n    \"border-image-width\",\n    \"box-flex\",\n    \"box-flex-group\",\n    \"box-ordinal-group\",\n    \"column-count\",\n    \"columns\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"flex\",\n    \"flex-grow\",\n    \"flex-positive\",\n    \"flex-shrink\",\n    \"flex-negative\",\n    \"flex-order\",\n    \"font-weight\",\n    \"grid-area\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-span\",\n    \"grid-column-start\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-span\",\n    \"grid-row-start\",\n    \"line-clamp\",\n    \"line-height\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\",\n    // SVG properties.\n    \"fill-opacity\",\n    \"flood-opacity\",\n    \"stop-opacity\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\"\n];\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n    for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n        CSS_NUMBER[prefix + property] = true;\n    }\n}\n/**\n * Escape a CSS class name.\n */\nfunction escape(str) {\n    return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName) {\n    return propertyName\n        .replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`)\n        .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str) {\n    let value = 5381;\n    let len = str.length;\n    while (len--)\n        value = (value * 33) ^ str.charCodeAt(len);\n    return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key, value) {\n    if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n        return `${key}:${value}px`;\n    }\n    return `${key}:${value}`;\n}\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples(value) {\n    return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles, hasNestedStyles) {\n    const properties = [];\n    const nestedStyles = [];\n    // Sort keys before adding to styles.\n    for (const key of Object.keys(styles)) {\n        const name = key.trim();\n        const value = styles[key];\n        if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n            if (typeof value === \"object\" && !Array.isArray(value)) {\n                nestedStyles.push([name, value]);\n            }\n            else {\n                properties.push([hyphenate(name), value]);\n            }\n        }\n    }\n    return {\n        style: stringifyProperties(sortTuples(properties)),\n        nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n        isUnique: !!styles.$unique\n    };\n}\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(properties) {\n    return properties\n        .map(([name, value]) => {\n        if (!Array.isArray(value))\n            return styleToString(name, value);\n        return value.map(x => styleToString(name, x)).join(\";\");\n    })\n        .join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector, parent) {\n    if (selector.indexOf(\"&\") === -1)\n        return `${parent} ${selector}`;\n    return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n    const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n    let pid = style;\n    if (selector.charCodeAt(0) === 64 /* @ */) {\n        const child = {\n            selector,\n            styles: [],\n            rules: [],\n            style: parent ? \"\" : style\n        };\n        rulesList.push(child);\n        // Nested styles support (e.g. `.foo > @media > .bar`).\n        if (style && parent) {\n            child.styles.push({ selector: parent, style, isUnique });\n        }\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, child.rules, child.styles, parent);\n        }\n    }\n    else {\n        const key = parent ? interpolate(selector, parent) : selector;\n        if (style)\n            stylesList.push({ selector: key, style, isUnique });\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, rulesList, stylesList, key);\n        }\n    }\n    return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n    for (const { selector, style, isUnique } of stylesList) {\n        const key = isStyle ? interpolate(selector, className) : selector;\n        const id = isUnique\n            ? `u\\0${(++uniqueId).toString(36)}`\n            : `s\\0${pid}\\0${style}`;\n        const item = new Style(style, id);\n        item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n        cache.add(item);\n    }\n    for (const { selector, style, rules, styles } of rulesList) {\n        const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n        composeStylize(item, pid, rules, styles, className, isStyle);\n        cache.add(item);\n    }\n}\n/**\n * Cache to list to styles.\n */\nfunction join(arr) {\n    let res = \"\";\n    for (let i = 0; i < arr.length; i++)\n        res += arr[i];\n    return res;\n}\n/**\n * Noop changes.\n */\nconst noopChanges = {\n    add: () => undefined,\n    change: () => undefined,\n    remove: () => undefined\n};\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache {\n    constructor(changes = noopChanges) {\n        this.changes = changes;\n        this.sheet = [];\n        this.changeId = 0;\n        this._keys = [];\n        this._children = Object.create(null);\n        this._counters = Object.create(null);\n    }\n    add(style) {\n        const count = this._counters[style.id] || 0;\n        const item = this._children[style.id] || style.clone();\n        this._counters[style.id] = count + 1;\n        if (count === 0) {\n            this._children[item.id] = item;\n            this._keys.push(item.id);\n            this.sheet.push(item.getStyles());\n            this.changeId++;\n            this.changes.add(item, this._keys.length - 1);\n        }\n        else if (item instanceof Cache && style instanceof Cache) {\n            const curIndex = this._keys.indexOf(style.id);\n            const prevItemChangeId = item.changeId;\n            item.merge(style);\n            if (item.changeId !== prevItemChangeId) {\n                this.sheet.splice(curIndex, 1, item.getStyles());\n                this.changeId++;\n                this.changes.change(item, curIndex, curIndex);\n            }\n        }\n    }\n    remove(style) {\n        const count = this._counters[style.id];\n        if (count) {\n            this._counters[style.id] = count - 1;\n            const item = this._children[style.id];\n            const index = this._keys.indexOf(item.id);\n            if (count === 1) {\n                delete this._counters[style.id];\n                delete this._children[style.id];\n                this._keys.splice(index, 1);\n                this.sheet.splice(index, 1);\n                this.changeId++;\n                this.changes.remove(item, index);\n            }\n            else if (item instanceof Cache && style instanceof Cache) {\n                const prevChangeId = item.changeId;\n                item.unmerge(style);\n                if (item.changeId !== prevChangeId) {\n                    this.sheet.splice(index, 1, item.getStyles());\n                    this.changeId++;\n                    this.changes.change(item, index, index);\n                }\n            }\n        }\n    }\n    values() {\n        return this._keys.map(key => this._children[key]);\n    }\n    merge(cache) {\n        for (const item of cache.values())\n            this.add(item);\n        return this;\n    }\n    unmerge(cache) {\n        for (const item of cache.values())\n            this.remove(item);\n        return this;\n    }\n    clone() {\n        return new Cache().merge(this);\n    }\n}\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector {\n    constructor(selector, id) {\n        this.selector = selector;\n        this.id = id;\n    }\n    getStyles() {\n        return this.selector;\n    }\n    clone() {\n        return this;\n    }\n}\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache {\n    constructor(style, id) {\n        super();\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.sheet.join(\",\")}{${this.style}}`;\n    }\n    clone() {\n        return new Style(this.style, this.id).merge(this);\n    }\n}\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache {\n    constructor(rule, style, id) {\n        super();\n        this.rule = rule;\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.rule}{${this.style}${join(this.sheet)}}`;\n    }\n    clone() {\n        return new Rule(this.rule, this.style, this.id).merge(this);\n    }\n}\nfunction key(pid, styles) {\n    const key = `f${stringHash(pid)}`;\n    if (process.env.NODE_ENV === \"production\" || !styles.$displayName)\n        return key;\n    return `${styles.$displayName}_${key}`;\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache {\n    constructor(id, changes) {\n        super(changes);\n        this.id = id;\n    }\n    registerStyle(styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"&\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `.${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        composeStylize(this, pid, rulesList, stylesList, selector, true);\n        return id;\n    }\n    registerKeyframes(keyframes) {\n        return this.registerHashRule(\"@keyframes\", keyframes);\n    }\n    registerHashRule(prefix, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `${prefix} ${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n        composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n        this.add(rule);\n        return id;\n    }\n    registerRule(rule, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(rule, styles, rulesList, stylesList);\n        composeStylize(this, pid, rulesList, stylesList, \"\", false);\n    }\n    registerCss(styles) {\n        return this.registerRule(\"\", styles);\n    }\n    getStyles() {\n        return join(this.sheet);\n    }\n    clone() {\n        return new FreeStyle(this.id, this.changes).merge(this);\n    }\n}\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes) {\n    return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n//# sourceMappingURL=index.js.map","/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function convertToStyles(object) {\n    /** The final result we will return */\n    var styles = {};\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                styles[selector] = convertToStyles(subproperties);\n            }\n        }\n        else if (key === '$debugName') {\n            styles.$displayName = val;\n        }\n        else {\n            styles[key] = val;\n        }\n    }\n    return styles;\n}\n// todo: better name here\nexport function convertToKeyframes(frames) {\n    var result = {};\n    for (var offset in frames) {\n        if (offset !== '$debugName') {\n            result[offset] = frames[offset];\n        }\n    }\n    if (frames.$debugName) {\n        result.$displayName = frames.$debugName;\n    }\n    return result;\n}\n","/** Raf for node + browser */\nexport var raf = typeof requestAnimationFrame === 'undefined'\n    /**\n     * Make sure setTimeout is always invoked with\n     * `this` set to `window` or `global` automatically\n     **/\n    ? function (cb) { return setTimeout(cb); }\n    /**\n     * Make sure window.requestAnimationFrame is always invoked with `this` window\n     * We might have raf without window in case of `raf/polyfill` (recommended by React)\n     **/\n    : typeof window === 'undefined'\n        ? requestAnimationFrame\n        : requestAnimationFrame.bind(window);\n/**\n * Utility to join classes conditionally\n */\nexport function classes() {\n    var classes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        classes[_i] = arguments[_i];\n    }\n    return classes\n        .map(function (c) { return c && typeof c === 'object' ? Object.keys(c).map(function (key) { return !!c[key] && key; }) : [c]; })\n        .reduce(function (flattened, c) { return flattened.concat(c); }, [])\n        .filter(function (c) { return !!c; })\n        .join(' ');\n}\n/**\n * Merges various styles into a single style object.\n * Note: if two objects have the same property the last one wins\n */\nexport function extend() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    /** The final result we will return */\n    var result = {};\n    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\n        var object = objects_1[_a];\n        if (object == null || object === false) {\n            continue;\n        }\n        for (var key in object) {\n            /** Falsy values except a explicit 0 is ignored */\n            var val = object[key];\n            if (!val && val !== 0) {\n                continue;\n            }\n            /** if nested media or pseudo selector */\n            if (key === '$nest' && val) {\n                result[key] = result['$nest'] ? extend(result['$nest'], val) : val;\n            }\n            /** if freestyle sub key that needs merging. We come here due to our recursive calls */\n            else if ((key.indexOf('&') !== -1 || key.indexOf('@media') === 0)) {\n                result[key] = result[key] ? extend(result[key], val) : val;\n            }\n            else {\n                result[key] = val;\n            }\n        }\n    }\n    return result;\n}\n/**\n * Utility to help customize styles with media queries. e.g.\n * ```\n * style(\n *  media({maxWidth:500}, {color:'red'})\n * )\n * ```\n */\nexport var media = function (mediaQuery) {\n    var _a;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var mediaQuerySections = [];\n    if (mediaQuery.type)\n        mediaQuerySections.push(mediaQuery.type);\n    if (mediaQuery.orientation)\n        mediaQuerySections.push(\"(orientation: \" + mediaQuery.orientation + \")\");\n    if (mediaQuery.minWidth)\n        mediaQuerySections.push(\"(min-width: \" + mediaLength(mediaQuery.minWidth) + \")\");\n    if (mediaQuery.maxWidth)\n        mediaQuerySections.push(\"(max-width: \" + mediaLength(mediaQuery.maxWidth) + \")\");\n    if (mediaQuery.minHeight)\n        mediaQuerySections.push(\"(min-height: \" + mediaLength(mediaQuery.minHeight) + \")\");\n    if (mediaQuery.maxHeight)\n        mediaQuerySections.push(\"(max-height: \" + mediaLength(mediaQuery.maxHeight) + \")\");\n    var stringMediaQuery = \"@media \" + mediaQuerySections.join(' and ');\n    var object = {\n        $nest: (_a = {},\n            _a[stringMediaQuery] = extend.apply(void 0, objects),\n            _a)\n    };\n    return object;\n};\nvar mediaLength = function (value) {\n    return typeof value === 'string' ? value : value + \"px\";\n};\n","import { TypeStyle } from './internal/typestyle';\nexport { TypeStyle };\n/**\n * All the CSS types in the 'types' namespace\n */\nimport * as types from './types';\nexport { types };\n/**\n * Export certain utilities\n */\nexport { extend, classes, media } from './internal/utilities';\n/** Zero configuration, default instance of TypeStyle */\nvar ts = new TypeStyle({ autoGenerateTag: true });\n/** Sets the target tag where we write the css on style updates */\nexport var setStylesTarget = ts.setStylesTarget;\n/**\n * Insert `raw` CSS as a string. This is useful for e.g.\n * - third party CSS that you are customizing with template strings\n * - generating raw CSS in JavaScript\n * - reset libraries like normalize.css that you can use without loaders\n */\nexport var cssRaw = ts.cssRaw;\n/**\n * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n */\nexport var cssRule = ts.cssRule;\n/**\n * Renders styles to the singleton tag imediately\n * NOTE: You should only call it on initial render to prevent any non CSS flash.\n * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n **/\nexport var forceRenderStyles = ts.forceRenderStyles;\n/**\n * Utility function to register an @font-face\n */\nexport var fontFace = ts.fontFace;\n/**\n * Allows use to use the stylesheet in a node.js environment\n */\nexport var getStyles = ts.getStyles;\n/**\n * Takes keyframes and returns a generated animationName\n */\nexport var keyframes = ts.keyframes;\n/**\n * Helps with testing. Reinitializes FreeStyle + raw\n */\nexport var reinit = ts.reinit;\n/**\n * Takes CSSProperties and return a generated className you can use on your component\n */\nexport var style = ts.style;\n/**\n * Takes an object where property names are ideal class names and property values are CSSProperties, and\n * returns an object where property names are the same ideal class names and the property values are\n * the actual generated class names using the ideal class name as the $debugName\n */\nexport var stylesheet = ts.stylesheet;\n/**\n * Creates a new instance of TypeStyle separate from the default instance.\n *\n * - Use this for creating a different typestyle instance for a shadow dom component.\n * - Use this if you don't want an auto tag generated and you just want to collect the CSS.\n *\n * NOTE: styles aren't shared between different instances.\n */\nexport function createTypeStyle(target) {\n    var instance = new TypeStyle({ autoGenerateTag: false });\n    if (target) {\n        instance.setStylesTarget(target);\n    }\n    return instance;\n}\n","import * as FreeStyle from \"free-style\";\nimport { convertToStyles, convertToKeyframes } from './formatting';\nimport { extend, raf } from './utilities';\n/**\n * Creates an instance of free style with our options\n */\nvar createFreeStyle = function () { return FreeStyle.create(); };\n/**\n * Maintains a single stylesheet and keeps it in sync with requested styles\n */\nvar TypeStyle = /** @class */ (function () {\n    function TypeStyle(_a) {\n        var _this = this;\n        var autoGenerateTag = _a.autoGenerateTag;\n        /**\n         * Insert `raw` CSS as a string. This is useful for e.g.\n         * - third party CSS that you are customizing with template strings\n         * - generating raw CSS in JavaScript\n         * - reset libraries like normalize.css that you can use without loaders\n         */\n        this.cssRaw = function (mustBeValidCSS) {\n            if (!mustBeValidCSS) {\n                return;\n            }\n            _this._raw += mustBeValidCSS || '';\n            _this._pendingRawChange = true;\n            _this._styleUpdated();\n        };\n        /**\n         * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n         */\n        this.cssRule = function (selector) {\n            var objects = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                objects[_i - 1] = arguments[_i];\n            }\n            var styles = convertToStyles(extend.apply(void 0, objects));\n            _this._freeStyle.registerRule(selector, styles);\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Renders styles to the singleton tag imediately\n         * NOTE: You should only call it on initial render to prevent any non CSS flash.\n         * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n         **/\n        this.forceRenderStyles = function () {\n            var target = _this._getTag();\n            if (!target) {\n                return;\n            }\n            target.textContent = _this.getStyles();\n        };\n        /**\n         * Utility function to register an @font-face\n         */\n        this.fontFace = function () {\n            var fontFace = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                fontFace[_i] = arguments[_i];\n            }\n            var freeStyle = _this._freeStyle;\n            for (var _a = 0, _b = fontFace; _a < _b.length; _a++) {\n                var face = _b[_a];\n                freeStyle.registerRule('@font-face', face);\n            }\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Allows use to use the stylesheet in a node.js environment\n         */\n        this.getStyles = function () {\n            return (_this._raw || '') + _this._freeStyle.getStyles();\n        };\n        /**\n         * Takes keyframes and returns a generated animationName\n         */\n        this.keyframes = function (frames) {\n            var keyframes = convertToKeyframes(frames);\n            // TODO: replace $debugName with display name\n            var animationName = _this._freeStyle.registerKeyframes(keyframes);\n            _this._styleUpdated();\n            return animationName;\n        };\n        /**\n         * Helps with testing. Reinitializes FreeStyle + raw\n         */\n        this.reinit = function () {\n            /** reinit freestyle */\n            var freeStyle = createFreeStyle();\n            _this._freeStyle = freeStyle;\n            _this._lastFreeStyleChangeId = freeStyle.changeId;\n            /** reinit raw */\n            _this._raw = '';\n            _this._pendingRawChange = false;\n            /** Clear any styles that were flushed */\n            var target = _this._getTag();\n            if (target) {\n                target.textContent = '';\n            }\n        };\n        /** Sets the target tag where we write the css on style updates */\n        this.setStylesTarget = function (tag) {\n            /** Clear any data in any previous tag */\n            if (_this._tag) {\n                _this._tag.textContent = '';\n            }\n            _this._tag = tag;\n            /** This special time buffer immediately */\n            _this.forceRenderStyles();\n        };\n        /**\n         * Takes an object where property names are ideal class names and property values are CSSProperties, and\n         * returns an object where property names are the same ideal class names and the property values are\n         * the actual generated class names using the ideal class name as the $debugName\n         */\n        this.stylesheet = function (classes) {\n            var classNames = Object.getOwnPropertyNames(classes);\n            var result = {};\n            for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\n                var className = classNames_1[_i];\n                var classDef = classes[className];\n                if (classDef) {\n                    classDef.$debugName = className;\n                    result[className] = _this.style(classDef);\n                }\n            }\n            return result;\n        };\n        var freeStyle = createFreeStyle();\n        this._autoGenerateTag = autoGenerateTag;\n        this._freeStyle = freeStyle;\n        this._lastFreeStyleChangeId = freeStyle.changeId;\n        this._pending = 0;\n        this._pendingRawChange = false;\n        this._raw = '';\n        this._tag = undefined;\n        // rebind prototype to TypeStyle.  It might be better to do a function() { return this.style.apply(this, arguments)}\n        this.style = this.style.bind(this);\n    }\n    /**\n     * Only calls cb all sync operations settle\n     */\n    TypeStyle.prototype._afterAllSync = function (cb) {\n        var _this = this;\n        this._pending++;\n        var pending = this._pending;\n        raf(function () {\n            if (pending !== _this._pending) {\n                return;\n            }\n            cb();\n        });\n    };\n    TypeStyle.prototype._getTag = function () {\n        if (this._tag) {\n            return this._tag;\n        }\n        if (this._autoGenerateTag) {\n            var tag = typeof window === 'undefined'\n                ? { textContent: '' }\n                : document.createElement('style');\n            if (typeof document !== 'undefined') {\n                document.head.appendChild(tag);\n            }\n            this._tag = tag;\n            return tag;\n        }\n        return undefined;\n    };\n    /** Checks if the style tag needs updating and if so queues up the change */\n    TypeStyle.prototype._styleUpdated = function () {\n        var _this = this;\n        var changeId = this._freeStyle.changeId;\n        var lastChangeId = this._lastFreeStyleChangeId;\n        if (!this._pendingRawChange && changeId === lastChangeId) {\n            return;\n        }\n        this._lastFreeStyleChangeId = changeId;\n        this._pendingRawChange = false;\n        this._afterAllSync(function () { return _this.forceRenderStyles(); });\n    };\n    TypeStyle.prototype.style = function () {\n        var className = this._freeStyle.registerStyle(convertToStyles(extend.apply(undefined, arguments)));\n        this._styleUpdated();\n        return className;\n    };\n    return TypeStyle;\n}());\nexport { TypeStyle };\n","var VNode = function VNode() {};\n\nvar options = {};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\nfunction applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value);else ref.current = value;\n  }\n}\n\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p;\n\twhile (p = items.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\nfunction isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\treturn node.splitText !== undefined;\n\t}\n\tif (typeof vnode.nodeName === 'string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor === vnode.nodeName;\n}\n\nfunction isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\nfunction getNodeProps(vnode) {\n\tvar props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tvar defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps !== undefined) {\n\t\tfor (var i in defaultProps) {\n\t\t\tif (props[i] === undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {} else if (name === 'ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\ttry {\n\t\t\tnode[name] = value == null ? '' : value;\n\t\t} catch (e) {}\n\t\tif ((value == null || value === false) && name != 'spellcheck') node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));\n\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\nvar mounts = [];\n\nvar diffLevel = 0;\n\nvar isSvgMode = false;\n\nvar hydrating = false;\n\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.shift()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\tif (!diffLevel++) {\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t}\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t} else if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\tdiffAttributes(out, vnode.attributes, props);\n\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t} else if (min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\tunmountComponent(component);\n\t} else {\n\t\tif (node['__preactattr_'] != null) applyRef(node['__preactattr_'].ref, null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\nvar recyclerComponents = [];\n\nfunction createComponent(Ctor, props, context) {\n\tvar inst,\n\t    i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor === Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\nfunction setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t} else if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode !== 0) {\n\t\tif (renderMode === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\nfunction renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    snapshot = previousContext,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t} else if (!skip) {\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) {\n\t\tcomponent._renderCallbacks.pop().call(component);\n\t}if (!diffLevel && !isChild) flushMounts();\n}\n\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] != null) applyRef(base['__preactattr_'].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\tthis.context = context;\n\n\tthis.props = props;\n\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\nextend(Component.prototype, {\n\tsetState: function setState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(extend({}, this.state), typeof state === 'function' ? state(this.state, this.props) : state);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\trender: function render() {}\n});\n\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nfunction createRef() {\n\treturn {};\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tcreateRef: createRef,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport default preact;\nexport { h, h as createElement, cloneElement, createRef, Component, render, rerender, options };\n//# sourceMappingURL=preact.mjs.map\n","import { stylesheet } from 'typestyle'\r\n\r\nconst controlsStyle = () => ({\r\n  zIndex: 30,\r\n  position: 'absolute' as 'absolute',\r\n  width: '100%',\r\n  bottom: 0,\r\n  padding: '0 16px',\r\n  boxSizing: 'border-box' as 'border-box',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  userSelect: 'none' as 'none',\r\n  opacity: 0,\r\n  transition: 'opacity 0.2s'\r\n})\r\n\r\nexport const ControlsStyle = stylesheet({\r\n  controls: {\r\n    ...controlsStyle()\r\n  },\r\n  controlsVisible: {\r\n    ...controlsStyle(),\r\n    opacity: 1\r\n  },\r\n  buttons: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '6px',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    width: '32px',\r\n    height: '32px',\r\n    padding: '7px',\r\n    boxSizing: 'border-box',\r\n    cursor: 'pointer'\r\n  },\r\n  left: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    $nest: {\r\n      '& .button': {\r\n        marginRight: '8px'\r\n      }\r\n    }\r\n  },\r\n  right: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '70px',\r\n    height: '100%',\r\n    justifyContent: 'space-between'\r\n  }\r\n})\r\n","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","let createNanoEvents = () => ({\n  events: {},\n  emit (event, ...args) {\n    for (let i of this.events[event] || []) {\n      i(...args)\n    }\n  },\n  on (event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () => (this.events[event] = this.events[event].filter(i => i !== cb))\n  }\n})\n\nexport { createNanoEvents }\n","import { createNanoEvents, Emitter as EventEmitter } from 'nanoevents'\r\nimport { Bsp } from './Bsp'\r\nimport * as Time from './Time'\r\nimport { Sound } from './Sound'\r\nimport { Loader } from './Loader'\r\nimport { Config } from './Config'\r\nimport { Mouse } from './Input/Mouse'\r\nimport { Touch } from './Input/Touch'\r\nimport { Replay } from './Replay/Replay'\r\nimport { Camera } from './Graphics/Camera'\r\nimport { Keyboard } from './Input/Keyboard'\r\nimport { SoundSystem } from './SoundSystem'\r\nimport { Context } from './Graphics/Context'\r\nimport { ReplayPlayer } from './ReplayPlayer'\r\nimport { Renderer } from './Graphics/Renderer'\r\nimport { SkyScene } from './Graphics/SkyScene'\r\nimport { WorldScene } from './Graphics/WorldScene'\r\n\r\nexport enum PlayerMode {\r\n  FREE,\r\n  REPLAY\r\n}\r\n\r\ntype GameInitSuccess = { status: 'success'; game: Game }\r\ntype GameInitError = { status: 'error'; message: string }\r\ntype GameInit = GameInitSuccess | GameInitError\r\n\r\nexport class Game {\r\n  public static init(config: Config): GameInit {\r\n    const status = Context.checkWebGLSupport()\r\n    if (!status.hasSupport) {\r\n      return {\r\n        status: 'error',\r\n        message: 'No WebGL support!'\r\n      }\r\n    }\r\n\r\n    const canvas = document.createElement('canvas')\r\n    if (!canvas) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to create <canvas> element!'\r\n      }\r\n    }\r\n\r\n    const context = Context.init(canvas)\r\n    if (!context) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize WebGL context'\r\n      }\r\n    }\r\n\r\n    const renderer = Renderer.init(context)\r\n    if (!renderer) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize renderer'\r\n      }\r\n    }\r\n\r\n    const worldScene = WorldScene.init(context)\r\n    if (!worldScene) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize world scene'\r\n      }\r\n    }\r\n\r\n    const skyScene = SkyScene.init(context)\r\n    if (!skyScene) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize sky scene'\r\n      }\r\n    }\r\n\r\n    const game = new Game({\r\n      canvas,\r\n      config,\r\n      context,\r\n      renderer,\r\n      worldScene,\r\n      skyScene\r\n    })\r\n\r\n    return {\r\n      status: 'success',\r\n      game\r\n    }\r\n  }\r\n\r\n  config: Config\r\n\r\n  pauseTime: number = 0\r\n  isPaused: boolean = false\r\n  lastTime: number = 0\r\n  accumTime: number = 0\r\n  readonly timeStep: number = 1 / 60\r\n\r\n  title: string = ''\r\n  mode: PlayerMode\r\n  pointerLocked: boolean = false\r\n\r\n  touch: Touch = new Touch()\r\n  mouse: Mouse = new Mouse()\r\n  keyboard: Keyboard = new Keyboard()\r\n\r\n  loader: Loader\r\n  entities: any[] = []\r\n  sounds: Sound[]\r\n  soundSystem: SoundSystem\r\n  events: EventEmitter\r\n  player: ReplayPlayer\r\n\r\n  canvas: HTMLCanvasElement\r\n  mapName: string\r\n  context: Context\r\n  camera: Camera\r\n  renderer: Renderer\r\n  worldScene: WorldScene\r\n  skyScene: SkyScene\r\n\r\n  constructor(params: {\r\n    config: Config\r\n    canvas: HTMLCanvasElement\r\n    context: Context\r\n    renderer: Renderer\r\n    worldScene: WorldScene\r\n    skyScene: SkyScene\r\n  }) {\r\n    this.sounds = []\r\n    this.soundSystem = new SoundSystem()\r\n\r\n    this.config = params.config\r\n    this.loader = new Loader(this.config)\r\n    this.loader.events.on('loadall', this.onLoadAll)\r\n\r\n    document.addEventListener('touchstart', this.onTouchStart, false)\r\n    document.addEventListener('touchend', this.onTouchEnd, false)\r\n    document.addEventListener('touchcancel', this.onTouchEnd, false)\r\n    document.addEventListener('touchmove', this.onTouchMove, false)\r\n    document.addEventListener('mousemove', this.onMouseMove, false)\r\n    window.addEventListener('keydown', this.keyDown)\r\n    window.addEventListener('keyup', this.keyUp)\r\n    window.addEventListener('visibilitychange', this.onVisibilityChange)\r\n\r\n    this.canvas = params.canvas\r\n    this.camera = Camera.init(this.canvas.width / this.canvas.height)\r\n\r\n    this.context = params.context\r\n    this.renderer = params.renderer\r\n    this.worldScene = params.worldScene\r\n    this.skyScene = params.skyScene\r\n\r\n    this.mode = PlayerMode.FREE\r\n\r\n    this.player = new ReplayPlayer(this)\r\n    this.events = createNanoEvents()\r\n\r\n    this.mapName = ''\r\n  }\r\n\r\n  getCanvas() {\r\n    return this.canvas\r\n  }\r\n\r\n  load(name: string) {\r\n    this.events.emit('loadstart')\r\n    this.loader.load(name)\r\n  }\r\n\r\n  changeMap(map: Bsp) {\r\n    if (this.mapName.toLowerCase() === map.name.toLowerCase()) {\r\n      return\r\n    }\r\n\r\n    this.mapName = map.name\r\n\r\n    this.worldScene.changeMap(map)\r\n    this.skyScene.changeMap(map)\r\n\r\n    this.entities = map.entities\r\n\r\n    const spawn = map.entities.find(e => e['classname'] === 'info_player_start')\r\n\r\n    if (spawn) {\r\n      this.camera.position[0] = spawn.origin[0]\r\n      this.camera.position[1] = spawn.origin[1]\r\n      this.camera.position[2] = spawn.origin[2]\r\n    } else {\r\n      this.camera.position[0] = 0\r\n      this.camera.position[1] = 0\r\n      this.camera.position[2] = 0\r\n    }\r\n\r\n    this.camera.rotation[0] = 0 // Math.PI / 2\r\n    this.camera.rotation[1] = 0\r\n    this.camera.rotation[2] = 0\r\n  }\r\n\r\n  changeReplay(replay: Replay) {\r\n    this.events.emit('prereplaychange', this, replay)\r\n\r\n    this.player.changeReplay(replay)\r\n\r\n    this.events.emit('postreplaychange', this, replay)\r\n  }\r\n\r\n  changeMode(mode: PlayerMode) {\r\n    this.mode = mode\r\n    this.events.emit('modechange', mode)\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.title = title\r\n    this.events.emit('titlechange', title)\r\n  }\r\n\r\n  getTitle() {\r\n    return this.title\r\n  }\r\n\r\n  onLoadAll = (loader: Loader) => {\r\n    if (loader && loader.replay) {\r\n      this.changeReplay(loader.replay.data)\r\n      this.changeMode(PlayerMode.REPLAY)\r\n    }\r\n\r\n    if (!loader.map || !loader.map.data) {\r\n      return\r\n    }\r\n\r\n    const map = loader.map.data\r\n    const skies = loader.skies\r\n    let skiesValid = true\r\n    skies.forEach(sky => {\r\n      skiesValid = skiesValid && sky.isDone()\r\n    })\r\n    if (skiesValid) {\r\n      skies.forEach(sky => (sky.data ? map.skies.push(sky.data) : 0))\r\n    }\r\n\r\n    // add sprites\r\n    Object.entries(loader.sprites).forEach(([name, item]) => {\r\n      if (item.data) {\r\n        map.sprites[name] = item.data\r\n      }\r\n    })\r\n\r\n    if (loader.sounds.length > 0) {\r\n      loader.sounds.forEach(sound => {\r\n        if (sound.data) {\r\n          this.sounds.push(sound.data)\r\n        }\r\n      })\r\n    }\r\n\r\n    this.changeMap(map)\r\n\r\n    this.events.emit('load', loader)\r\n  }\r\n\r\n  draw = () => {\r\n    requestAnimationFrame(this.draw)\r\n\r\n    const canvas = this.canvas\r\n    const parent = canvas.parentElement\r\n    if (parent) {\r\n      const pw = parent.clientWidth\r\n      const ph = parent.clientHeight\r\n      if (canvas.width !== pw || canvas.height !== ph) {\r\n        canvas.width = pw\r\n        canvas.height = ph\r\n        this.camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.context.gl.viewport(\r\n          0,\r\n          0,\r\n          this.context.gl.drawingBufferWidth,\r\n          this.context.gl.drawingBufferHeight\r\n        )\r\n      }\r\n\r\n      if (\r\n        canvas.clientWidth !== canvas.width ||\r\n        canvas.clientHeight !== canvas.height\r\n      ) {\r\n        canvas.width = canvas.clientWidth\r\n        canvas.height = canvas.clientHeight\r\n        this.camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.context.gl.viewport(\r\n          0,\r\n          0,\r\n          this.context.gl.drawingBufferWidth,\r\n          this.context.gl.drawingBufferHeight\r\n        )\r\n      }\r\n    }\r\n\r\n    const currTime = Time.now() / 1000\r\n    const dt = currTime - this.lastTime\r\n    this.accumTime += dt\r\n\r\n    while (this.accumTime > this.timeStep) {\r\n      this.update(this.timeStep)\r\n      this.accumTime -= this.timeStep\r\n    }\r\n\r\n    this.renderer.draw()\r\n    if (this.mapName !== '') {\r\n      this.skyScene.draw(this.camera)\r\n      this.worldScene.draw(this.camera, this.entities)\r\n    }\r\n\r\n    this.lastTime = currTime\r\n  }\r\n\r\n  update(dt: number) {\r\n    this.events.emit('preupdate', this)\r\n\r\n    const camera = this.camera\r\n    const keyboard = this.keyboard\r\n    const mouse = this.mouse\r\n    const touch = this.touch\r\n\r\n    if (this.mode === PlayerMode.REPLAY) {\r\n      this.player.update(dt)\r\n    } else if (this.mode === PlayerMode.FREE) {\r\n      if (this.touch.pressed) {\r\n        camera.rotation[0] = Math.min(\r\n          Math.max(camera.rotation[0] + touch.delta[1] / 100, -Math.PI / 2),\r\n          Math.PI / 2\r\n        )\r\n        camera.rotation[1] -= touch.delta[0] / 100\r\n      } else {\r\n        camera.rotation[0] = Math.min(\r\n          Math.max(camera.rotation[0] + mouse.delta[1] / 100, -Math.PI / 2),\r\n          Math.PI / 2\r\n        )\r\n        camera.rotation[1] -= mouse.delta[0] / 100\r\n      }\r\n\r\n      const speed = 500\r\n      const ds = speed * dt\r\n      const KEY_W = Keyboard.KEYS.W\r\n      const KEY_S = Keyboard.KEYS.S\r\n      const KEY_A = Keyboard.KEYS.A\r\n      const KEY_D = Keyboard.KEYS.D\r\n      const downKey = Keyboard.KEYS.C\r\n      const upKey = Keyboard.KEYS.SPACE\r\n      if (keyboard.keys[KEY_W] !== keyboard.keys[KEY_S]) {\r\n        if (keyboard.keys[KEY_W]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1] + Math.PI / 2) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1] + Math.PI / 2) * ds\r\n        } else if (keyboard.keys[KEY_S]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1] - Math.PI / 2) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1] - Math.PI / 2) * ds\r\n        }\r\n      }\r\n\r\n      if (keyboard.keys[KEY_A] !== keyboard.keys[KEY_D]) {\r\n        if (keyboard.keys[KEY_A]) {\r\n          camera.position[1] += Math.cos(camera.rotation[1]) * ds\r\n          camera.position[0] -= Math.sin(camera.rotation[1]) * ds\r\n        } else if (keyboard.keys[KEY_D]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1]) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1]) * ds\r\n        }\r\n      }\r\n\r\n      if (keyboard.keys[upKey] !== keyboard.keys[downKey]) {\r\n        if (keyboard.keys[upKey]) {\r\n          camera.position[2] += ds\r\n        } else if (keyboard.keys[downKey]) {\r\n          camera.position[2] -= ds\r\n        }\r\n      }\r\n    }\r\n\r\n    mouse.delta[0] = 0\r\n    mouse.delta[1] = 0\r\n\r\n    this.events.emit('postupdate', this)\r\n  }\r\n\r\n  onTouchStart = (e: TouchEvent) => {\r\n    const touch = e.touches.item(0)\r\n    if (touch) {\r\n      this.touch.pressed = true\r\n      this.touch.position[0] = touch.clientX\r\n      this.touch.position[1] = touch.clientY\r\n    }\r\n  }\r\n\r\n  onTouchEnd = () => {\r\n    this.touch.pressed = false\r\n    this.touch.delta[0] = 0\r\n    this.touch.delta[1] = 0\r\n  }\r\n\r\n  onTouchMove = (e: TouchEvent) => {\r\n    const touch = e.touches.item(0)\r\n    if (touch && this.touch.pressed) {\r\n      this.touch.delta[0]\r\n      this.touch.delta[0] = touch.clientX - this.touch.position[0]\r\n      this.touch.delta[1] = touch.clientY - this.touch.position[1]\r\n\r\n      this.touch.position[0] = touch.clientX\r\n      this.touch.position[1] = touch.clientY\r\n    }\r\n  }\r\n\r\n  onMouseMove = (e: MouseEvent) => {\r\n    if (this.pointerLocked) {\r\n      this.mouse.delta[0] = e.movementX * 0.5 // mul 0.5 to lower sensitivity\r\n      this.mouse.delta[1] = e.movementY * 0.5 //\r\n\r\n      this.mouse.position[0] = e.pageX\r\n      this.mouse.position[1] = e.pageY\r\n    }\r\n  }\r\n\r\n  keyDown = (e: KeyboardEvent) => {\r\n    this.keyboard.keys[e.which] = 1\r\n\r\n    if (this.pointerLocked) {\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  keyUp = (e: KeyboardEvent) => {\r\n    this.keyboard.keys[e.which] = 0\r\n\r\n    if (this.pointerLocked) {\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  onVisibilityChange = () => {\r\n    if (document.hidden) {\r\n      if (this.isPaused) {\r\n        return\r\n      }\r\n\r\n      this.pauseTime = Time.now() / 1000\r\n      this.isPaused = true\r\n    } else {\r\n      if (!this.isPaused) {\r\n        return\r\n      }\r\n\r\n      this.lastTime = Time.now() / 1000 - this.pauseTime + this.lastTime\r\n      this.isPaused = false\r\n    }\r\n  }\r\n}\r\n","export function basename(path: string, extension?: string) {\r\n  return path.slice(path.lastIndexOf('/') + 1).replace(extension || '', '')\r\n}\r\n\r\nexport function extname(path: string) {\r\n  const slashPos = path.lastIndexOf('/')\r\n  const dotPos = path.lastIndexOf('.')\r\n  if (slashPos < dotPos) {\r\n    return path.slice(dotPos)\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n","export function paletteToRGBA(\r\n  pixels: Uint8Array,\r\n  palette: Uint8Array\r\n): Uint8Array {\r\n  const rgba = new Uint8Array(pixels.length * 4)\r\n\r\n  const len = pixels.length\r\n  for (let i = 0; i < len; ++i) {\r\n    rgba[i * 4] = palette[pixels[i] * 3]\r\n    rgba[i * 4 + 1] = palette[pixels[i] * 3 + 1]\r\n    rgba[i * 4 + 2] = palette[pixels[i] * 3 + 2]\r\n    rgba[i * 4 + 3] = 255\r\n  }\r\n\r\n  return rgba\r\n}\r\n\r\nexport function paletteWithLastTransToRGBA(\r\n  pixels: Uint8Array,\r\n  palette: Uint8Array\r\n): Uint8Array {\r\n  const rgba = new Uint8Array(pixels.length * 4)\r\n\r\n  const len = pixels.length\r\n  for (let i = 0; i < len; ++i) {\r\n    if (pixels[i] === 255) {\r\n      rgba[i * 4 + 3] = 0\r\n    } else {\r\n      rgba[i * 4] = palette[pixels[i] * 3]\r\n      rgba[i * 4 + 1] = palette[pixels[i] * 3 + 1]\r\n      rgba[i * 4 + 2] = palette[pixels[i] * 3 + 2]\r\n      rgba[i * 4 + 3] = 255\r\n    }\r\n  }\r\n\r\n  return rgba\r\n}\r\n","const wnd: any = window\r\n\r\nlet _now\r\nif (typeof performance !== 'undefined') {\r\n  if (performance.now) {\r\n    _now = () => wnd.performance.now()\r\n  } else if (wnd.performance.mozNow) {\r\n    _now = () => wnd.performance.mozNow()\r\n  } else if (wnd.performance.msNow) {\r\n    _now = () => wnd.performance.msNow()\r\n  } else if (wnd.performance.oNow) {\r\n    _now = () => wnd.performance.oNow()\r\n  } else if (wnd.performance.webkitNow) {\r\n    _now = () => wnd.performance.webkitNow()\r\n  } else if (Date.now) {\r\n    _now = () => Date.now()\r\n  }\r\n}\r\n\r\nexport const now = _now || (() => new Date().getTime())\r\n\r\nexport const formatTime = (seconds: number) => {\r\n  const m = Math.floor(seconds / 60)\r\n  const s = Math.floor(seconds - m * 60)\r\n  const mm = m < 10 ? '0' + m : m.toString()\r\n  const ss = s < 10 ? '0' + s : s.toString()\r\n  return mm + ':' + ss\r\n}\r\n","import { createNanoEvents, Emitter as EventEmitter } from 'nanoevents'\r\nimport { Sound } from './Sound'\r\n\r\nconst wnd: any = window\r\n\r\nconst polyfillAudioContext = wnd.AudioContext || wnd.webkitAudioContext\r\nconst audioContext: AudioContext = new polyfillAudioContext()\r\n\r\nexport class SoundSystem {\r\n  context: AudioContext\r\n  channels: any[]\r\n  masterGain: GainNode\r\n  preMuteVolume: number\r\n  events: EventEmitter\r\n\r\n  constructor() {\r\n    this.context = audioContext\r\n\r\n    this.events = createNanoEvents()\r\n\r\n    const volume = parseFloat(localStorage.getItem('volume') || '0.3')\r\n    localStorage.setItem('volume', volume.toString())\r\n\r\n    this.channels = []\r\n\r\n    this.preMuteVolume = 1\r\n    this.masterGain = this.context.createGain()\r\n    this.masterGain.gain.value = volume\r\n    this.masterGain.connect(this.context.destination)\r\n\r\n    for (let i = 0; i < 8; ++i) {\r\n      this.channels.push({\r\n        source: null,\r\n        gain: this.context.createGain()\r\n      })\r\n      this.channels[i].gain.connect(this.masterGain)\r\n    }\r\n  }\r\n\r\n  static getContext() {\r\n    return audioContext\r\n  }\r\n\r\n  play(sound: Sound, channel: number, volume: number) {\r\n    this.stop(channel)\r\n\r\n    const gain = this.channels[channel].gain\r\n    gain.gain.value = Math.max(0, Math.min(1, volume))\r\n\r\n    const source = this.context.createBufferSource()\r\n    source.buffer = sound.buffer\r\n    source.connect(gain)\r\n    source.start(0)\r\n\r\n    this.channels[channel].source = source\r\n  }\r\n\r\n  stop(channel: number) {\r\n    const source = this.channels[channel].source\r\n    if (source) {\r\n      source.stop(0)\r\n    }\r\n  }\r\n\r\n  getVolume() {\r\n    return this.masterGain.gain.value\r\n  }\r\n\r\n  setVolume(value: number) {\r\n    const current = this.masterGain.gain.value\r\n    if (current > 0 && value === 0) {\r\n      this.preMuteVolume = current\r\n    }\r\n\r\n    this.masterGain.gain.value = value\r\n\r\n    localStorage.setItem('volume', value.toString())\r\n    this.events.emit('volumeChange', value)\r\n  }\r\n\r\n  toggleMute() {\r\n    if (this.getVolume() === 0) {\r\n      this.setVolume(this.preMuteVolume)\r\n    } else {\r\n      this.setVolume(0)\r\n    }\r\n  }\r\n}\r\n","import { ReplayMap } from './ReplayMap'\r\nimport { ReplayChunk } from './ReplayChunk'\r\nimport { ReplayState } from './ReplayState'\r\nimport { Reader, ReaderDataType } from '../Reader'\r\nimport { FrameDataReader } from './FrameDataReader'\r\nimport { getInitialDeltaDecoders } from './readDelta'\r\n\r\nconst checkType = (r: Reader) => {\r\n  let magic = r.nstr(8)\r\n  return magic === 'HLDEMO'\r\n}\r\n\r\nconst readHeader = (r: Reader) => ({\r\n  demoProtocol: r.ui(),\r\n  netProtocol: r.ui(),\r\n  mapName: r.nstr(260),\r\n  modName: r.nstr(260),\r\n  mapCrc: r.i(),\r\n  dirOffset: r.ui()\r\n})\r\n\r\nconst readDirectories = (r: Reader, offset: number) => {\r\n  r.seek(offset)\r\n\r\n  let count = r.ui()\r\n  let directories = []\r\n  for (let i = 0; i < count; ++i) {\r\n    directories.push({\r\n      id: r.ui(),\r\n      name: r.nstr(64),\r\n      flags: r.ui(),\r\n      cdTrack: r.i(),\r\n      time: r.f(),\r\n      frames: r.ui(),\r\n      offset: r.ui(),\r\n      length: r.ui()\r\n    })\r\n  }\r\n\r\n  return directories\r\n}\r\n\r\nconst readFrameData = (r: Reader, deltaDecoders: any, customMessages: any) => {\r\n  let length = r.ui()\r\n  let limit = r.tell() + length\r\n  let data = []\r\n  while (r.tell() < limit) {\r\n    let type = r.ub()\r\n    if (type === 1) {\r\n      continue\r\n    } else if (type >= 64) {\r\n      if (customMessages[type] && customMessages[type].size > -1) {\r\n        r.skip(customMessages[type].size)\r\n      } else {\r\n        r.skip(r.ub())\r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n    let message = FrameDataReader.read(r, type, deltaDecoders)\r\n    if (message) {\r\n      if (type === 39) {\r\n        customMessages[message.index] = message\r\n      }\r\n      data.push({\r\n        type,\r\n        data: message\r\n      })\r\n    } else {\r\n      r.seek(limit)\r\n    }\r\n  }\r\n\r\n  // just in case\r\n  r.seek(limit)\r\n\r\n  return data\r\n}\r\n\r\nconst readFrame = (r: Reader, deltaDecoders: any, customMessages: any) => {\r\n  let frame: any = {\r\n    type: r.ub(),\r\n    time: r.f(),\r\n    tick: r.ui()\r\n  }\r\n\r\n  switch (frame.type) {\r\n    case 0:\r\n    case 1: {\r\n      r.skip(4)\r\n      frame.camera = {\r\n        position: [r.f(), r.f(), r.f()],\r\n        orientation: [r.f(), r.f(), r.f()]\r\n      }\r\n      r.skip(436)\r\n      frame.data = readFrameData(r, deltaDecoders, customMessages)\r\n      break\r\n    }\r\n    case 2: {\r\n      break\r\n    }\r\n    case 3: {\r\n      frame.command = r.nstr(64)\r\n      break\r\n    }\r\n    case 4: {\r\n      r.skip(32)\r\n      break\r\n    }\r\n    case 5: {\r\n      break\r\n    }\r\n    case 6: {\r\n      r.skip(84)\r\n      break\r\n    }\r\n    case 7: {\r\n      r.skip(8)\r\n      break\r\n    }\r\n    case 8: {\r\n      frame.sound = {\r\n        channel: r.i(),\r\n        sample: r.nstr(r.ui()),\r\n        attenuation: r.f(),\r\n        volume: r.f(),\r\n        flags: r.ui(),\r\n        pitch: r.i()\r\n      }\r\n      break\r\n    }\r\n    case 9: {\r\n      r.skip(r.ui())\r\n      break\r\n    }\r\n    default: {\r\n      frame.error = true\r\n      break\r\n    }\r\n  }\r\n\r\n  return frame\r\n}\r\n\r\nexport class Replay {\r\n  header: any\r\n  mapName: string\r\n  directories: any\r\n\r\n  constructor(header: any, directories: any) {\r\n    this.header = header\r\n    this.mapName = this.header.mapName\r\n    this.directories = directories\r\n  }\r\n\r\n  static parseFromArrayBuffer(buffer: ArrayBuffer) {\r\n    let r = new Reader(buffer)\r\n    let magic = r.nstr(8)\r\n    if (magic !== 'HLDEMO') {\r\n      throw new Error('Invalid replay format')\r\n    }\r\n\r\n    let header: any = {}\r\n    header.demoProtocol = r.ui()\r\n    header.netProtocol = r.ui()\r\n    header.mapName = r.nstr(260)\r\n    header.modName = r.nstr(260)\r\n    header.mapCrc = r.i()\r\n    header.dirOffset = r.ui()\r\n\r\n    r.seek(header.dirOffset)\r\n    let directoryCount = r.ui()\r\n    let directories: any[] = []\r\n    for (let i = 0; i < directoryCount; ++i) {\r\n      directories.push({\r\n        id: r.ui(),\r\n        name: r.nstr(64),\r\n        flags: r.ui(),\r\n        cdTrack: r.i(),\r\n        time: r.f(),\r\n        frames: r.ui(),\r\n        offset: r.ui(),\r\n        length: r.ui(),\r\n        macros: []\r\n      })\r\n    }\r\n\r\n    for (let i = 0; i < directories.length; ++i) {\r\n      r.seek(directories[i].offset)\r\n\r\n      let isFinalMacroReached = false\r\n      while (!isFinalMacroReached) {\r\n        let macro: any = {\r\n          type: r.b(),\r\n          time: r.f(),\r\n          frame: r.ui()\r\n        }\r\n\r\n        switch (macro.type) {\r\n          case 0:\r\n          case 1: {\r\n            r.skip(4)\r\n            macro.camera = {\r\n              position: [r.f(), r.f(), r.f()],\r\n              orientation: [r.f(), r.f(), r.f()]\r\n            }\r\n            r.skip(436)\r\n            r.skip(r.ui())\r\n            break\r\n          }\r\n\r\n          case 2: {\r\n            // empty macro\r\n            // signals the beginning of directory entry\r\n            break\r\n          }\r\n\r\n          case 3: {\r\n            macro.command = r.nstr(64)\r\n            break\r\n          }\r\n\r\n          case 4: {\r\n            r.skip(32)\r\n            break\r\n          }\r\n\r\n          case 5: {\r\n            // empty macro that signals end of directory entry\r\n            isFinalMacroReached = true\r\n            break\r\n          }\r\n\r\n          case 6: {\r\n            r.skip(84)\r\n            break\r\n          }\r\n\r\n          case 7: {\r\n            r.skip(8)\r\n            break\r\n          }\r\n\r\n          case 8: {\r\n            r.skip(4)\r\n            r.skip(r.ui() + 16)\r\n            break\r\n          }\r\n\r\n          case 9: {\r\n            r.skip(r.ui())\r\n            break\r\n          }\r\n\r\n          default: {\r\n            const offset = Number(r.tell() - 9).toString(16)\r\n            const msg = [\r\n              `Unexpected macro (${macro.type})`,\r\n              ` at offset = ${offset}.`\r\n            ].join('')\r\n            throw new Error(msg)\r\n          }\r\n        }\r\n\r\n        directories[i].macros.push(macro)\r\n      }\r\n    }\r\n\r\n    return new Replay(header, directories)\r\n  }\r\n\r\n  static parseFullFromArrayBuffer(buffer: ArrayBuffer) {\r\n    let r = new Reader(buffer)\r\n    let magic = r.nstr(8)\r\n    if (magic !== 'HLDEMO') {\r\n      throw new Error('Invalid replay format')\r\n    }\r\n\r\n    let header: any = {}\r\n    header.demoProtocol = r.ui()\r\n    header.netProtocol = r.ui()\r\n    header.mapName = r.nstr(260)\r\n    header.modName = r.nstr(260)\r\n    header.mapCrc = r.i()\r\n    header.dirOffset = r.ui()\r\n\r\n    r.seek(header.dirOffset)\r\n    let directoryCount = r.ui()\r\n    let directories: any[] = []\r\n    for (let i = 0; i < directoryCount; ++i) {\r\n      directories.push({\r\n        id: r.ui(),\r\n        name: r.nstr(64),\r\n        flags: r.ui(),\r\n        cdTrack: r.i(),\r\n        time: r.f(),\r\n        frames: r.ui(),\r\n        offset: r.ui(),\r\n        length: r.ui(),\r\n        macros: []\r\n      })\r\n    }\r\n\r\n    let deltaDecoders = getInitialDeltaDecoders()\r\n\r\n    let customMessages = []\r\n\r\n    for (let i = 0; i < directories.length; ++i) {\r\n      r.seek(directories[i].offset)\r\n\r\n      let isFinalMacroReached = false\r\n      while (!isFinalMacroReached) {\r\n        let macro: any = {\r\n          type: r.b(),\r\n          time: r.f(),\r\n          frame: r.ui()\r\n        }\r\n        switch (macro.type) {\r\n          case 0:\r\n          case 1: {\r\n            r.skip(4)\r\n            macro.camera = {\r\n              position: [r.f(), r.f(), r.f()],\r\n              orientation: [r.f(), r.f(), r.f()],\r\n              forward: [r.f(), r.f(), r.f()],\r\n              right: [r.f(), r.f(), r.f()],\r\n              up: [r.f(), r.f(), r.f()]\r\n            }\r\n\r\n            macro.RefParams = {\r\n              frametime: r.f(),\r\n              time: r.f(),\r\n              intermission: r.i(),\r\n              paused: r.i(),\r\n              spectator: r.i(),\r\n              onground: r.i(),\r\n              waterlevel: r.i(),\r\n              velocity: [r.f(), r.f(), r.f()],\r\n              origin: [r.f(), r.f(), r.f()],\r\n              viewHeight: [r.f(), r.f(), r.f()],\r\n              idealPitch: r.f(),\r\n              viewAngles: [r.f(), r.f(), r.f()],\r\n              health: r.i(),\r\n              crosshairAngle: [r.f(), r.f(), r.f()],\r\n              viewSize: r.f(),\r\n              punchAngle: [r.f(), r.f(), r.f()],\r\n              maxClients: r.i(),\r\n              viewEntity: r.i(),\r\n              playerCount: r.i(),\r\n              maxEntities: r.i(),\r\n              demoPlayback: r.i(),\r\n              hardware: r.i(),\r\n              smoothing: r.i(),\r\n              ptr_cmd: r.i(),\r\n              ptr_movevars: r.i(),\r\n              viewport: [r.i(), r.i(), r.i(), r.i()],\r\n              nextView: r.i(),\r\n              onlyClientDraw: r.i()\r\n            }\r\n\r\n            macro.UserCmd = {\r\n              lerp_msec: r.s(),\r\n              msec: r.ub(),\r\n              UNUSED1: r.ub(),\r\n              viewAngles: [r.f(), r.f(), r.f()],\r\n              forwardMove: r.f(),\r\n              sideMove: r.f(),\r\n              upMove: r.f(),\r\n              lightLevel: r.b(),\r\n              UNUSED2: r.ub(),\r\n              buttons: r.us(),\r\n              impulse: r.b(),\r\n              weaponSelect: r.b(),\r\n              UNUSED: r.s(),\r\n              impactIndex: r.i(),\r\n              impactPosition: [r.f(), r.f(), r.f()]\r\n            }\r\n\r\n            macro.MoveVars = {\r\n              gravity: r.f(),\r\n              stopSpeed: r.f(),\r\n              maxSpeed: r.f(),\r\n              spectatorMaxSpeed: r.f(),\r\n              acceleration: r.f(),\r\n              airAcceleration: r.f(),\r\n              waterAcceleration: r.f(),\r\n              friction: r.f(),\r\n              edgeFriction: r.f(),\r\n              waterFriction: r.f(),\r\n              entityGravity: r.f(),\r\n              bounce: r.f(),\r\n              stepSize: r.f(),\r\n              maxVelocity: r.f(),\r\n              zMax: r.f(),\r\n              waveHeight: r.f(),\r\n              footsteps: r.i(),\r\n              skyName: r.nstr(32),\r\n              rollAngle: r.f(),\r\n              rollSpeed: r.f(),\r\n              skyColor: [r.f(), r.f(), r.f()],\r\n              skyVec: [r.f(), r.f(), r.f()]\r\n            }\r\n\r\n            macro.view = [r.f(), r.f(), r.f()]\r\n            macro.viewModel = r.i()\r\n\r\n            macro.incoming_sequence = r.i()\r\n            macro.incoming_acknowledged = r.i()\r\n            macro.incoming_reliable_acknowledged = r.i()\r\n            macro.incoming_reliable_sequence = r.i()\r\n            macro.outgoing_sequence = r.i()\r\n            macro.reliable_sequence = r.i()\r\n            macro.last_reliable_sequence = r.i()\r\n\r\n            let frameDataLength = r.ui()\r\n            let frameDataEnd = frameDataLength + r.tell()\r\n            macro.frameData = []\r\n            while (r.tell() < frameDataEnd) {\r\n              let type = r.ub()\r\n              if (type === 1) {\r\n                continue // skip SVC_NOP\r\n              } else if (type >= 64) {\r\n                // TODO: parse custom message\r\n                if (customMessages[type] && customMessages[type].size > -1) {\r\n                  r.skip(customMessages[type].size)\r\n                } else {\r\n                  r.skip(r.ub())\r\n                }\r\n\r\n                continue\r\n              }\r\n\r\n              let frameData = FrameDataReader.read(r, type, deltaDecoders)\r\n              if (frameData) {\r\n                if (type === 39) {\r\n                  customMessages[frameData.index] = frameData\r\n                }\r\n                macro.frameData.push({ type, frameData })\r\n              } else {\r\n                r.seek(frameDataEnd)\r\n              }\r\n            }\r\n\r\n            // if r.tell() > frameDataEnd something wrong happened\r\n            r.seek(frameDataEnd)\r\n            break\r\n          }\r\n\r\n          case 2: {\r\n            // empty macro\r\n            // signals the beginning of directory entry\r\n            break\r\n          }\r\n\r\n          case 3: {\r\n            macro.command = r.nstr(64)\r\n            break\r\n          }\r\n\r\n          case 4: {\r\n            macro.clientData = {\r\n              position: [r.f(), r.f(), r.f()],\r\n              rotation: [r.f(), r.f(), r.f()],\r\n              weaponFlags: r.ui(),\r\n              fov: r.f()\r\n            }\r\n            break\r\n          }\r\n\r\n          case 5: {\r\n            // empty macro that signals end of directory entry\r\n            isFinalMacroReached = true\r\n            break\r\n          }\r\n\r\n          case 6: {\r\n            macro.event = {\r\n              flags: r.ui(),\r\n              index: r.ui(),\r\n              delay: r.f(),\r\n              args: {\r\n                flags: r.ui(),\r\n                entityIndex: r.ui(),\r\n                position: [r.f(), r.f(), r.f()],\r\n                rotation: [r.f(), r.f(), r.f()],\r\n                velocity: [r.f(), r.f(), r.f()],\r\n                ducking: r.ui(),\r\n                fparam1: r.f(),\r\n                fparam2: r.f(),\r\n                iparam1: r.i(),\r\n                iparam2: r.i(),\r\n                bparam1: r.i(),\r\n                bparam2: r.i()\r\n              }\r\n            }\r\n            break\r\n          }\r\n\r\n          case 7: {\r\n            macro.weaponAnimation = {\r\n              animation: r.i(),\r\n              body: r.i()\r\n            }\r\n            break\r\n          }\r\n\r\n          case 8: {\r\n            macro.sound = {\r\n              channel: r.i(),\r\n              sample: r.nstr(r.ui()),\r\n              attenuation: r.f(),\r\n              volume: r.f(),\r\n              flags: r.ui(),\r\n              pitch: r.i()\r\n            }\r\n            break\r\n          }\r\n\r\n          case 9: {\r\n            r.skip(r.ui())\r\n            break\r\n          }\r\n\r\n          default: {\r\n            const offset = Number(r.tell() - 9).toString(16)\r\n            const msg = `Unexpected macro (${macro.type}) at offset = ${offset}`\r\n\r\n            throw new Error(msg)\r\n          }\r\n        }\r\n\r\n        directories[i].macros.push(macro)\r\n      }\r\n    }\r\n\r\n    return new Replay(header, directories)\r\n  }\r\n\r\n  static parseIntoChunks(buffer: ArrayBuffer) {\r\n    let r = new Reader(buffer)\r\n\r\n    if (!checkType(r)) {\r\n      throw new Error('Invalid replay file format')\r\n    }\r\n\r\n    let maps = []\r\n    let deltaDecoders = getInitialDeltaDecoders()\r\n    let customMessages: any[] = []\r\n\r\n    let header = readHeader(r)\r\n    let directories = readDirectories(r, header.dirOffset)\r\n\r\n    let currentMap: ReplayMap | undefined\r\n    let currentChunk\r\n    let lastFrame\r\n    let lastFrameOffset\r\n    let state = new ReplayState()\r\n\r\n    let directoryEndOffset\r\n\r\n    // read loading segment\r\n    directoryEndOffset = directories[0].offset + directories[0].length\r\n    r.seek(directories[0].offset)\r\n    while (r.tell() < directoryEndOffset) {\r\n      let frame = readFrame(r, deltaDecoders, customMessages)\r\n      state.feedFrame(frame)\r\n\r\n      if (frame.error) {\r\n        throw new Error('Encountered error while reading replay')\r\n      }\r\n\r\n      if (frame.type < 2 /* 0 or 1 */) {\r\n        let serverInfo = frame.data.find(\r\n          (msg: any) => msg.type === FrameDataReader.SVC.SERVERINFO\r\n        )\r\n        if (serverInfo) {\r\n          currentMap = new ReplayMap(serverInfo.data.mapFileName)\r\n          maps.push(currentMap)\r\n        }\r\n\r\n        let resourceList = frame.data.find(\r\n          (msg: any) => msg.type === FrameDataReader.SVC.RESOURCELIST\r\n        )\r\n        if (resourceList && currentMap) {\r\n          currentMap.setResources(resourceList.data)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!(currentMap instanceof ReplayMap)) {\r\n      throw new Error('Error while parsing replay.')\r\n    }\r\n\r\n    lastFrameOffset = r.tell()\r\n    currentChunk = new ReplayChunk(state, 0)\r\n    currentMap.addChunk(currentChunk)\r\n\r\n    // read playback segment\r\n    directoryEndOffset = directories[1].offset + directories[1].length\r\n    r.seek(directories[1].offset)\r\n    while (true) {\r\n      let offset = r.tell()\r\n      if (offset >= directoryEndOffset) {\r\n        // set last and final chunks data\r\n        let timeLength = lastFrame.time - currentChunk.startTime\r\n        currentChunk.timeLength = timeLength\r\n        let lastFrameLength = offset - lastFrameOffset\r\n        r.seek(lastFrameOffset)\r\n        currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\r\n        r.seek(offset)\r\n\r\n        break\r\n      }\r\n\r\n      let frame = readFrame(r, deltaDecoders, customMessages)\r\n      state.feedFrame(frame)\r\n      lastFrame = frame\r\n\r\n      if (frame.error) {\r\n        throw new Error('Encountered error while reading replay')\r\n      }\r\n\r\n      if (frame.type < 2) {\r\n        let serverInfo = frame.data.find(\r\n          (msg: any) => msg.type === FrameDataReader.SVC.SERVERINFO\r\n        )\r\n        if (serverInfo) {\r\n          // create new map\r\n          currentMap = new ReplayMap(serverInfo.data.mapFileName)\r\n          maps.push(currentMap)\r\n\r\n          // set last chunks data\r\n          let timeLength = lastFrame.time - currentChunk.startTime\r\n          currentChunk.timeLength = timeLength\r\n          let lastFrameLength = offset - lastFrameOffset\r\n          let tempOffset = r.tell()\r\n          r.seek(lastFrameOffset)\r\n          currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\r\n          r.seek(tempOffset)\r\n\r\n          // create new chunk\r\n          lastFrameOffset = offset\r\n          currentChunk = new ReplayChunk(state, frame.time)\r\n          currentMap.addChunk(currentChunk)\r\n        }\r\n\r\n        let resourceList = frame.data.find(\r\n          (msg: any) => msg.type === FrameDataReader.SVC.RESOURCELIST\r\n        )\r\n        if (resourceList) {\r\n          currentMap.setResources(resourceList.data)\r\n        }\r\n\r\n        if (serverInfo) {\r\n          continue\r\n        }\r\n\r\n        for (let i = 0; i < frame.data.length; ++i) {\r\n          let message = frame.data[i]\r\n          if (\r\n            message.type === FrameDataReader.SVC.SOUND ||\r\n            message.type === FrameDataReader.SVC.SPAWNSTATICSOUND\r\n          ) {\r\n            let sound = currentMap.resources.sounds.find(\r\n              (s: any) => s.index === message.data.soundIndex\r\n            )\r\n            if (sound) {\r\n              sound.used = true\r\n            }\r\n          } else if (message.type === FrameDataReader.SVC.STUFFTEXT) {\r\n            let sounds = currentMap.resources.sounds\r\n            let commands = message.data.commands\r\n\r\n            for (let i = 0; i < commands.length; ++i) {\r\n              let command = commands[i]\r\n\r\n              let func = command.func\r\n              if (\r\n                (func === 'speak' || func === 'spk') &&\r\n                command.params.length === 1\r\n              ) {\r\n                let soundName = command.params[0] + '.wav'\r\n                let sound = sounds.find((s: any) => s.name === soundName)\r\n                if (sound) {\r\n                  sound.used = true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (frame.type === 8) {\r\n        let sound = currentMap.resources.sounds.find(\r\n          (s: any) => s.name === frame.sound.sample\r\n        )\r\n        if (sound) {\r\n          sound.used = true\r\n        }\r\n      }\r\n\r\n      if (currentChunk.startTime + 10 < frame.time) {\r\n        // set last chunks data\r\n        let lastFrameLength = offset - lastFrameOffset\r\n        let tempOffset = r.tell()\r\n        r.seek(lastFrameOffset)\r\n        currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\r\n        r.seek(tempOffset)\r\n\r\n        // create new chunk\r\n        lastFrameOffset = offset\r\n        currentChunk = new ReplayChunk(state, frame.time)\r\n        currentMap.addChunk(currentChunk)\r\n      }\r\n    }\r\n\r\n    return {\r\n      length: directories[1].time,\r\n      maps,\r\n      deltaDecoders,\r\n      customMessages\r\n    }\r\n  }\r\n\r\n  static readHeader(r: Reader) {\r\n    return readHeader(r)\r\n  }\r\n\r\n  static readDirectories(r: Reader, offset: number) {\r\n    return readDirectories(r, offset)\r\n  }\r\n\r\n  static readFrame(r: Reader, deltaDecoders: any, customMessages: any) {\r\n    return readFrame(r, deltaDecoders, customMessages)\r\n  }\r\n\r\n  static readFrameData(r: Reader, deltaDecoders: any, customMessages: any) {\r\n    return readFrame(r, deltaDecoders, customMessages)\r\n  }\r\n}\r\n","export class ReplayState {\r\n  cameraPos: any[]\r\n  cameraRot: any[]\r\n  entities: any[]\r\n\r\n  constructor(obj: any | null = null) {\r\n    if (obj) {\r\n      this.cameraPos = JSON.parse(JSON.stringify(obj.cameraPos))\r\n      this.cameraRot = JSON.parse(JSON.stringify(obj.cameraRot))\r\n      this.entities = JSON.parse(JSON.stringify(obj.entities))\r\n    } else {\r\n      this.cameraPos = [0, 0, 0]\r\n      this.cameraRot = [0, 0, 0]\r\n      this.entities = []\r\n    }\r\n  }\r\n\r\n  feedFrame(frame: any) {\r\n    switch (frame.type) {\r\n      case 0:\r\n      case 1: {\r\n        this.cameraPos[0] = frame.camera.position[0]\r\n        this.cameraPos[1] = frame.camera.position[1]\r\n        this.cameraPos[2] = frame.camera.position[2]\r\n\r\n        this.cameraRot[0] = frame.camera.orientation[0]\r\n        this.cameraRot[1] = frame.camera.orientation[1]\r\n        this.cameraRot[2] = frame.camera.orientation[2]\r\n\r\n        // TODO: handle spawnbaseline, clientdata, and similar messages\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  // serialize() {\r\n  //     return JSON.stringify(this)\r\n  // }\r\n\r\n  // deserialize(data: string) {\r\n  //     return JSON.parse(data)\r\n  // }\r\n\r\n  clone() {\r\n    return new ReplayState(this)\r\n  }\r\n}\r\n","import { DeltaType } from './DeltaType'\r\nimport { BitStream } from '../BitReader'\r\nimport { DeltaDecoder } from './DeltaDecoder'\r\n\r\nexport function readDelta(bs: BitStream, dd: DeltaDecoder) {\r\n  let data: { [name: string]: any } = {}\r\n\r\n  let maskBitCount = bs.readBits(3)\r\n  let maskBits = []\r\n  for (let i = 0; i < maskBitCount; ++i) {\r\n    maskBits.push(bs.readBits(8))\r\n  }\r\n\r\n  let brk = false\r\n  for (let i = 0; i < maskBitCount; ++i) {\r\n    for (let j = 0; j < 8; ++j) {\r\n      let index = j + i * 8\r\n      if (index === dd.length) {\r\n        brk = true\r\n        break\r\n      }\r\n\r\n      if (maskBits[i] & (1 << j)) {\r\n        if (dd[index].flags & DeltaType.DT_BYTE) {\r\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\r\n            let sign = bs.readBits(1) ? -1 : 1\r\n            let value = bs.readBits(dd[index].bits - 1)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = (sign * value) / divisor\r\n          } else {\r\n            let value = bs.readBits(dd[index].bits)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = value / divisor\r\n          }\r\n        } else if (dd[index].flags & DeltaType.DT_SHORT) {\r\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\r\n            let sign = bs.readBits(1) ? -1 : 1\r\n            let value = bs.readBits(dd[index].bits - 1)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = (sign * value) / divisor\r\n          } else {\r\n            let value = bs.readBits(dd[index].bits)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = value / divisor\r\n          }\r\n        } else if (dd[index].flags & DeltaType.DT_INTEGER) {\r\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\r\n            let sign = bs.readBits(1) ? -1 : 1\r\n            let value = bs.readBits(dd[index].bits - 1)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = (sign * value) / divisor\r\n          } else {\r\n            let value = bs.readBits(dd[index].bits)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = value / divisor\r\n          }\r\n        } else if (\r\n          dd[index].flags & DeltaType.DT_FLOAT ||\r\n          dd[index].flags & DeltaType.DT_TIMEWINDOW_8 ||\r\n          dd[index].flags & DeltaType.DT_TIMEWINDOW_BIG\r\n        ) {\r\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\r\n            let sign = bs.readBits(1) ? -1 : 1\r\n            let value = bs.readBits(dd[index].bits - 1)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = (sign * value) / divisor\r\n          } else {\r\n            let value = bs.readBits(dd[index].bits)\r\n            let divisor = dd[index].divisor\r\n            data[dd[index].name] = value / divisor\r\n          }\r\n        } else if (dd[index].flags & DeltaType.DT_ANGLE) {\r\n          let value = bs.readBits(dd[index].bits)\r\n          let multiplier = 360 / (1 << dd[index].bits)\r\n          data[dd[index].name] = value * multiplier\r\n        } else if (dd[index].flags & DeltaType.DT_STRING) {\r\n          data[dd[index].name] = bs.readString()\r\n        }\r\n      }\r\n    }\r\n\r\n    if (brk) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst initialDeltaDecoders = {\r\n  delta_description_t: [\r\n    {\r\n      name: 'flags',\r\n      bits: 32,\r\n      divisor: 1,\r\n      flags: DeltaType.DT_INTEGER\r\n    },\r\n    {\r\n      name: 'name',\r\n      bits: 8,\r\n      divisor: 1,\r\n      flags: DeltaType.DT_STRING\r\n    },\r\n    {\r\n      name: 'offset',\r\n      bits: 16,\r\n      divisor: 1,\r\n      flags: DeltaType.DT_INTEGER\r\n    },\r\n    {\r\n      name: 'size',\r\n      bits: 8,\r\n      divisor: 1,\r\n      flags: DeltaType.DT_INTEGER\r\n    },\r\n    {\r\n      name: 'bits',\r\n      bits: 8,\r\n      divisor: 1,\r\n      flags: DeltaType.DT_INTEGER\r\n    },\r\n    {\r\n      name: 'divisor',\r\n      bits: 32,\r\n      divisor: 4000,\r\n      flags: DeltaType.DT_FLOAT\r\n    },\r\n    {\r\n      name: 'preMultiplier',\r\n      bits: 32,\r\n      divisor: 4000,\r\n      flags: DeltaType.DT_FLOAT\r\n    }\r\n  ]\r\n}\r\n\r\nexport const getInitialDeltaDecoders = (): {\r\n  [name: string]: DeltaDecoder\r\n} => ({ ...initialDeltaDecoders })\r\n","import { Reader, ReaderDataType } from '../Reader'\r\nimport { paletteWithLastTransToRGBA, paletteToRGBA } from './Util'\r\n\r\ninterface SpriteHeader {\r\n  version: number\r\n  type: SpriteType\r\n  alphaType: SpriteAlphaType\r\n  radius: number\r\n  width: number\r\n  height: number\r\n  frameCount: number\r\n  beamLength: number\r\n  syncType: SpriteSyncType\r\n}\r\n\r\ninterface SpriteFrame {\r\n  group: number\r\n  position: number[]\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n}\r\n\r\nexport enum SpriteType {\r\n  VP_PARALLEL_UPRIGHT = 0,\r\n  FACING_UPRIGHT = 1,\r\n  VP_PARALLEL = 2,\r\n  ORIENTED = 3,\r\n  VP_PARALLEL_ORIENTED = 4\r\n}\r\n\r\nexport enum SpriteAlphaType {\r\n  SPR_NORMAL = 0,\r\n  SPR_ADDITIVE = 1,\r\n  SPR_INDEXALPHA = 2,\r\n  SPR_ALPHTEST = 3\r\n}\r\n\r\nexport enum SpriteSyncType {\r\n  SYNCHRONIZED = 0,\r\n  RANDOM = 1\r\n}\r\n\r\nexport class Sprite {\r\n  header: SpriteHeader\r\n  frames: SpriteFrame[]\r\n\r\n  constructor(header: SpriteHeader, frames: SpriteFrame[]) {\r\n    this.header = header\r\n    this.frames = frames\r\n  }\r\n\r\n  static parse(buffer: ArrayBuffer) {\r\n    const r = new Reader(buffer)\r\n\r\n    const magic = r.nstr(4)\r\n    if (magic !== 'IDSP') {\r\n      throw new Error('Invalid sprite file format')\r\n    }\r\n\r\n    const header: SpriteHeader = {\r\n      version: r.i(), // must be 2 (1 = Quake, 2 = Half-Life)\r\n      type: r.i(),\r\n      alphaType: r.i(),\r\n      radius: r.f(),\r\n      width: r.i(),\r\n      height: r.i(),\r\n      frameCount: r.i(),\r\n      beamLength: r.f(),\r\n      syncType: r.i()\r\n    }\r\n\r\n    const paletteSize = r.s()\r\n    const palette = r.arrx(paletteSize * 3, ReaderDataType.UByte)\r\n\r\n    const frames: SpriteFrame[] = []\r\n    for (let i = 0; i < header.frameCount; ++i) {\r\n      const frame = {\r\n        group: r.i(),\r\n        position: [r.i(), r.i()],\r\n        width: r.i(),\r\n        height: r.i(),\r\n        data: new Uint8Array(header.width * header.height * 4)\r\n      }\r\n\r\n      const pixels = r.arrx(header.width * header.height, ReaderDataType.UByte)\r\n\r\n      if (header.alphaType === SpriteAlphaType.SPR_ALPHTEST) {\r\n        frame.data = paletteWithLastTransToRGBA(pixels, palette)\r\n      } else {\r\n        frame.data = paletteToRGBA(pixels, palette)\r\n      }\r\n\r\n      frames.push(frame)\r\n    }\r\n\r\n    return new Sprite(header, frames)\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { classes } from 'typestyle'\r\nimport { Game, PlayerMode } from '../../../Game'\r\nimport { SettingsButtonStyle as s } from './style'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\ninterface SettingsButtonProps {\r\n  game: Game\r\n}\r\n\r\ninterface SettingsButtonState {\r\n  isOpen: boolean\r\n}\r\n\r\nexport class SettingsButton extends Component<\r\n  SettingsButtonProps,\r\n  SettingsButtonState\r\n> {\r\n  onFreeModeClick = () => {\r\n    if (this.props.game.mode === PlayerMode.FREE) {\r\n      return\r\n    }\r\n\r\n    this.props.game.changeMode(PlayerMode.FREE)\r\n    this.props.game.player.pause()\r\n  }\r\n\r\n  onReplayModeClick = () => {\r\n    if (this.props.game.mode === PlayerMode.REPLAY) {\r\n      return\r\n    }\r\n\r\n    this.props.game.changeMode(PlayerMode.REPLAY)\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n  render() {\r\n    const hasReplay = !!this.props.game.player.replay\r\n\r\n    return (\r\n      <div class={s.settings}>\r\n        <div class={classes(cs.button, s.button)} onClick={this.toggleMenu}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              clip-rule=\"evenodd\"\r\n              fill=\"#ffffff\"\r\n              d=\"M23.9 10.7c0-0.3-0.4-0.6-0.8-0.6 -1.1 0-2.1-0.6-2.5-1.6 -0.4-1-0.1-2.2 0.7-3 0.3-0.2 0.3-0.6 0.1-0.9 -0.6-0.7-1.2-1.4-1.9-1.9 -0.3-0.2-0.7-0.2-0.9 0.1 -0.7 0.8-2 1.1-3 0.7 -1-0.4-1.7-1.5-1.6-2.6 0-0.4-0.2-0.7-0.6-0.7 -0.9-0.1-1.8-0.1-2.7 0C10.4 0.1 10.1 0.4 10.1 0.8 10.1 1.9 9.5 2.9 8.5 3.3 7.5 3.7 6.2 3.4 5.5 2.6c-0.2-0.3-0.6-0.3-0.9-0.1 -0.7 0.6-1.4 1.2-1.9 1.9C2.4 4.8 2.5 5.2 2.7 5.4c0.8 0.8 1.1 2 0.7 3 -0.4 1-1.4 1.6-2.6 1.6 -0.4 0-0.7 0.2-0.7 0.6 -0.1 0.9-0.1 1.8 0 2.7 0 0.3 0.4 0.6 0.8 0.6 1 0 2 0.6 2.5 1.6 0.4 1 0.2 2.2-0.7 3 -0.3 0.2-0.3 0.6-0.1 0.9 0.6 0.7 1.2 1.4 1.9 1.9 0.3 0.2 0.7 0.2 0.9-0.1 0.7-0.8 2-1.1 3-0.7 1 0.4 1.7 1.5 1.6 2.6 0 0.4 0.2 0.7 0.6 0.7C11.1 24 11.5 24 12 24c0.4 0 0.9 0 1.3-0.1 0.3 0 0.6-0.3 0.6-0.7 0-1.1 0.6-2.1 1.6-2.6 1-0.4 2.3-0.1 3 0.7 0.2 0.3 0.6 0.3 0.9 0.1 0.7-0.6 1.4-1.2 1.9-1.9 0.2-0.3 0.2-0.7-0.1-0.9 -0.8-0.8-1.1-2-0.7-3 0.4-1 1.4-1.6 2.5-1.6l0.1 0c0.3 0 0.7-0.2 0.7-0.6C24 12.5 24 11.6 23.9 10.7zM12 18c-3.3 0-6-2.7-6-6s2.7-6 6-6c3.3 0 6 2.7 6 6S15.3 18 12 18zM12 16\"\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        <div class={this.state.isOpen ? s.menuOpen : s.menu}>\r\n          <span class={s.menuItemTitle}>Mode</span>\r\n          {hasReplay ? (\r\n            <span\r\n              class={\r\n                this.props.game.mode === PlayerMode.REPLAY\r\n                  ? s.menuItemSelected\r\n                  : s.menuItem\r\n              }\r\n              onClick={this.onReplayModeClick}\r\n            >\r\n              Replay\r\n            </span>\r\n          ) : (\r\n            <span />\r\n          )}\r\n          <span\r\n            class={\r\n              this.props.game.mode === PlayerMode.FREE\r\n                ? s.menuItemSelected\r\n                : s.menuItem\r\n            }\r\n            onClick={this.onFreeModeClick}\r\n          >\r\n            Free\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { classes } from 'typestyle'\r\nimport { Fullscreen } from '../../../Fullscreen'\r\nimport { FullscreenButtonStyle as s } from './style'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\ninterface FullscreenButtonProps {\r\n  active: boolean\r\n  root: Element\r\n}\r\n\r\ninterface FullscreenButtonState {\r\n  isInFullscreen: boolean\r\n}\r\n\r\nexport class FullscreenButton extends Component<\r\n  FullscreenButtonProps,\r\n  FullscreenButtonState\r\n> {\r\n  state: FullscreenButtonState = {\r\n    isInFullscreen: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    Fullscreen.onChange(this.onFullscreen)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Fullscreen.onChangeRemove(this.onFullscreen)\r\n  }\r\n\r\n  onClick = () => {\r\n    if (Fullscreen.isInFullscreen()) {\r\n      Fullscreen.exit()\r\n    } else {\r\n      Fullscreen.enter(this.props.root)\r\n    }\r\n  }\r\n\r\n  onFullscreen = () => {\r\n    this.setState({\r\n      isInFullscreen: Fullscreen.isInFullscreen()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class={classes(cs.button, s.button)} onClick={this.onClick}>\r\n        {this.state.isInFullscreen ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 64 64\"\r\n            fill=\"currentcolor\"\r\n          >\r\n            <path d=\"M0 22 L22 22 L22 0 L14 0 L14 14 L0 14 M42 0 L42 22 L64 22 L64 14 L50 14 L50 0 M14 50 L0 50 L0 42 L22 42 L22 64 L14 64 M42 64 L42 42 L64 42 L64 50 L50 50 L50 64 Z\" />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 64 64\"\r\n            fill=\"currentcolor\"\r\n          >\r\n            <path d=\"M0 22 L8 22 L8 8 L22 8 L22 0 L0 0 M42 0 L42 8 L56 8 L56 22 L64 22 L64 0 M0 64 L0 42 L8 42 L8 56 L22 56 L22 64 M64 64 L42 64 L42 56 L56 56 L56 42 L64 42 Z\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const apis = [\r\n  {\r\n    enabled: 'fullscreenEnabled',\r\n    element: 'fullscreenElement',\r\n    request: 'requestFullscreen',\r\n    exit: 'exitFullscreen',\r\n    change: 'fullscreenchange',\r\n    error: 'fullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'mozFullScreenEnabled',\r\n    element: 'mozFullScreenElement',\r\n    request: 'mozRequestFullScreen',\r\n    exit: 'mozCancelFullScreen',\r\n    change: 'mozfullscreenchange',\r\n    error: 'mozfullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'webkitFullscreenEnabled',\r\n    element: 'webkitCurrentFullScreenElement',\r\n    request: 'webkitRequestFullscreen',\r\n    exit: 'webkitExitFullscreen',\r\n    change: 'webkitfullscreenchange',\r\n    error: 'webkitfullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'msFullscreenEnabled',\r\n    element: 'msFullscreenElement',\r\n    request: 'msRequestFullscreen',\r\n    exit: 'msExitFullscreen',\r\n    change: 'MSFullscreenChange',\r\n    error: 'MSFullscreenError'\r\n  }\r\n]\r\n\r\nlet apiIdx = 0\r\n\r\ninterface Doc {\r\n  [key: string]: any\r\n}\r\nconst doc: Doc = document\r\n\r\nfor (let i = 0; i < apis.length; ++i) {\r\n  if (typeof doc[apis[i].enabled] !== 'undefined') {\r\n    apiIdx = i\r\n    break\r\n  }\r\n}\r\n\r\nexport class Fullscreen {\r\n  static element() {\r\n    return doc[apis[apiIdx].element]\r\n  }\r\n\r\n  static enabled() {\r\n    return doc[apis[apiIdx].enabled]\r\n  }\r\n\r\n  static isInFullscreen() {\r\n    return Fullscreen.element() !== null\r\n  }\r\n\r\n  static enter(node: any) {\r\n    node[apis[apiIdx].request]()\r\n  }\r\n\r\n  static exit() {\r\n    doc[apis[apiIdx].exit]()\r\n  }\r\n\r\n  static onChange(callback: () => void) {\r\n    return window.addEventListener(apis[apiIdx].change, callback)\r\n  }\r\n\r\n  static onChangeRemove(callback: () => void) {\r\n    window.removeEventListener(apis[apiIdx].change, callback)\r\n  }\r\n\r\n  static onError(callback: () => void) {\r\n    return window.addEventListener(apis[apiIdx].error, callback)\r\n  }\r\n}\r\n","import { Game } from './Game'\r\nimport { Config } from './Config'\r\nimport { PlayerInterface } from './PlayerInterface/index'\r\n\r\ndeclare var VERSION: string\r\n\r\nclass HLV {\r\n  public static readonly VERSION = VERSION\r\n\r\n  private game: Game\r\n\r\n  constructor(game: Game) {\r\n    this.game = game\r\n  }\r\n\r\n  load(name: string) {\r\n    this.game.load(name)\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.game.setTitle(title)\r\n  }\r\n\r\n  getTitle() {\r\n    return this.game.getTitle()\r\n  }\r\n}\r\n\r\nnamespace HLViewer {\r\n  export function init(rootSelector: string, params: Config | string) {\r\n    const node = document.querySelector(rootSelector)\r\n    if (!node) {\r\n      return null\r\n    }\r\n\r\n    const config = Config.init(params)\r\n    const result = Game.init(config)\r\n    if (result.status === 'success') {\r\n      const game = result.game\r\n      const ui = new PlayerInterface(game, node)\r\n\r\n      ui.draw()\r\n      game.draw()\r\n\r\n      return new HLV(game)\r\n    }\r\n\r\n    return null\r\n  }\r\n}\r\n\r\nexport = HLViewer\r\n","import { createNanoEvents, Emitter as EventEmitter } from 'nanoevents'\r\nimport { Bsp } from './Bsp'\r\nimport { Sound } from './Sound'\r\nimport { extname } from './Util'\r\nimport { Config } from './Config'\r\nimport { Tga } from './Parsers/Tga'\r\nimport { Wad } from './Parsers/Wad'\r\nimport { Replay } from './Replay/Replay'\r\nimport { Sprite } from './Parsers/Sprite'\r\nimport { ProgressCallback, xhr } from './Xhr'\r\nimport { BspParser } from './Parsers/BspParser'\r\n\r\nenum LoadItemStatus {\r\n  Loading = 1,\r\n  Skipped = 2,\r\n  Error = 3,\r\n  Done = 4\r\n}\r\n\r\nclass LoadItemBase<T> {\r\n  name: string\r\n  progress: number\r\n  status: LoadItemStatus\r\n  data: T | null\r\n\r\n  constructor(name: string) {\r\n    this.name = name\r\n    this.progress = 0\r\n    this.status = LoadItemStatus.Loading\r\n    this.data = null\r\n  }\r\n\r\n  isLoading() {\r\n    return this.status === LoadItemStatus.Loading\r\n  }\r\n\r\n  skip() {\r\n    this.status = LoadItemStatus.Skipped\r\n  }\r\n\r\n  isSkipped() {\r\n    return this.status === LoadItemStatus.Skipped\r\n  }\r\n\r\n  // TODO: Add error reason\r\n  error() {\r\n    this.status = LoadItemStatus.Error\r\n  }\r\n\r\n  isError() {\r\n    return this.status === LoadItemStatus.Error\r\n  }\r\n\r\n  done(data: T) {\r\n    this.status = LoadItemStatus.Done\r\n    this.data = data\r\n  }\r\n\r\n  isDone() {\r\n    return this.status === LoadItemStatus.Done\r\n  }\r\n}\r\n\r\nclass LoadItemReplay extends LoadItemBase<any> {\r\n  type: 'replay' = 'replay'\r\n}\r\n\r\nclass LoadItemBsp extends LoadItemBase<Bsp> {\r\n  type: 'bsp' = 'bsp'\r\n}\r\n\r\nclass LoadItemSky extends LoadItemBase<Tga> {\r\n  type: 'sky' = 'sky'\r\n}\r\n\r\nclass LoadItemWad extends LoadItemBase<Wad> {\r\n  type: 'wad' = 'wad'\r\n}\r\n\r\nclass LoadItemSound extends LoadItemBase<Sound> {\r\n  type: 'sound' = 'sound'\r\n}\r\n\r\nclass LoadItemSprite extends LoadItemBase<Sprite> {\r\n  type: 'sprite' = 'sprite'\r\n}\r\n\r\nexport type LoadItem =\r\n  | LoadItemReplay\r\n  | LoadItemBsp\r\n  | LoadItemSky\r\n  | LoadItemWad\r\n  | LoadItemSound\r\n  | LoadItemSprite\r\n\r\nexport class Loader {\r\n  config: Config\r\n\r\n  replay?: LoadItemReplay\r\n  map?: LoadItemBsp\r\n  skies: LoadItemSky[]\r\n  wads: LoadItemWad[]\r\n  sounds: LoadItemSound[]\r\n  sprites: { [name: string]: LoadItemSprite } = {}\r\n  events: EventEmitter\r\n\r\n  constructor(config: Config) {\r\n    this.config = config\r\n\r\n    this.replay = undefined\r\n    this.map = undefined\r\n    this.skies = []\r\n    this.wads = []\r\n    this.sounds = []\r\n\r\n    this.events = createNanoEvents()\r\n    this.events.on('error', (err: any) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  clear() {\r\n    this.replay = undefined\r\n    this.map = undefined\r\n    this.skies.length = 0\r\n    this.wads.length = 0\r\n    this.sounds.length = 0\r\n    this.sprites = {}\r\n  }\r\n\r\n  checkStatus() {\r\n    if (this.replay && !this.replay.isDone()) {\r\n      return\r\n    }\r\n\r\n    if (this.map && !this.map.isDone()) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0; i < this.skies.length; ++i) {\r\n      if (this.skies[i].isLoading()) {\r\n        return\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.wads.length; ++i) {\r\n      if (this.wads[i].isLoading()) {\r\n        return\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.sounds.length; ++i) {\r\n      if (this.sounds[i].isLoading()) {\r\n        return\r\n      }\r\n    }\r\n\r\n    const sprites = Object.entries(this.sprites)\r\n    for (let i = 0; i < sprites.length; ++i) {\r\n      if (sprites[i][1].isLoading()) {\r\n        return\r\n      }\r\n    }\r\n\r\n    this.events.emit('loadall', this)\r\n  }\r\n\r\n  load(name: string) {\r\n    const extension = extname(name)\r\n    if (extension === '.dem') {\r\n      this.loadReplay(name)\r\n    } else if (extension === '.bsp') {\r\n      this.loadMap(name)\r\n    } else {\r\n      this.events.emit('error', 'Invalid file extension', name)\r\n    }\r\n  }\r\n\r\n  async loadReplay(name: string) {\r\n    this.replay = new LoadItemReplay(name)\r\n    this.events.emit('loadstart', this.replay)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      if (this.replay) {\r\n        this.replay.progress = progress\r\n      }\r\n\r\n      this.events.emit('progress', this.replay)\r\n    }\r\n\r\n    const replayPath = this.config.getReplaysPath()\r\n    const buffer = await xhr(`${replayPath}/${name}`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch((err: any) => {\r\n      if (this.replay) {\r\n        this.replay.error()\r\n      }\r\n      this.events.emit('error', err, this.replay)\r\n    })\r\n\r\n    if (this.replay.isError()) {\r\n      return\r\n    }\r\n\r\n    const replay = await Replay.parseIntoChunks(buffer)\r\n    this.replay.done(replay)\r\n\r\n    this.loadMap(replay.maps[0].name + '.bsp')\r\n\r\n    const sounds = replay.maps[0].resources.sounds\r\n    sounds.forEach((sound: any) => {\r\n      if (sound.used) {\r\n        this.loadSound(sound.name, sound.index)\r\n      }\r\n    })\r\n\r\n    this.events.emit('load', this.replay)\r\n    this.checkStatus()\r\n  }\r\n\r\n  async loadMap(name: string) {\r\n    this.map = new LoadItemBsp(name)\r\n    this.events.emit('loadstart', this.map)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      if (this.map) {\r\n        this.map.progress = progress\r\n      }\r\n\r\n      this.events.emit('progress', this.map)\r\n    }\r\n\r\n    const mapsPath = this.config.getMapsPath()\r\n    const buffer = await xhr(`${mapsPath}/${name}`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch(err => {\r\n      if (this.map) {\r\n        this.map.error()\r\n      }\r\n\r\n      this.events.emit('error', err, this.map)\r\n    })\r\n\r\n    if (this.map.isError()) {\r\n      return\r\n    }\r\n\r\n    const map = await BspParser.parse(name, buffer)\r\n    this.map.done(map)\r\n\r\n    map.entities\r\n      .map((e: any) => {\r\n        if (typeof e.model === 'string' && e.model.indexOf('.spr') > -1) {\r\n          return e.model as string\r\n        }\r\n        return undefined\r\n      })\r\n      .filter(\r\n        (a: string | undefined, pos: number, arr: (string | undefined)[]) =>\r\n          a && arr.indexOf(a) === pos\r\n      )\r\n      .forEach(a => a && this.loadSprite(a))\r\n\r\n    const skyname = map.entities[0].skyname\r\n    if (skyname) {\r\n      const sides = ['bk', 'dn', 'ft', 'lf', 'rt', 'up']\r\n      sides.map(a => `${skyname}${a}`).forEach(a => this.loadSky(a))\r\n    }\r\n\r\n    // check if there is at least one missing texture\r\n    // if yes then load wad files (textures should be there)\r\n    if (map.textures.find(a => a.isExternal)) {\r\n      const wads = map.entities[0].wad\r\n      const wadPromises = wads.map((w: string) => this.loadWad(w))\r\n      await Promise.all(wadPromises)\r\n    }\r\n\r\n    this.events.emit('load', this.map)\r\n    this.checkStatus()\r\n  }\r\n\r\n  async loadSprite(name: string) {\r\n    const item = new LoadItemSprite(name)\r\n    this.sprites[name] = item\r\n    this.events.emit('loadstart', item)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      item.progress = progress\r\n      this.events.emit('progress', item)\r\n    }\r\n\r\n    const buffer = await xhr(`${this.config.getBasePath()}/${name}`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch((err: any) => {\r\n      item.error()\r\n      this.events.emit('error', err, item)\r\n      this.checkStatus()\r\n    })\r\n\r\n    if (item.isError()) {\r\n      return\r\n    }\r\n\r\n    const sprite = Sprite.parse(buffer)\r\n    item.done(sprite)\r\n    this.events.emit('load', item)\r\n    this.checkStatus()\r\n  }\r\n\r\n  async loadSky(name: string) {\r\n    const item = new LoadItemSky(name)\r\n    this.skies.push(item)\r\n    this.events.emit('loadstart', item)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      item.progress = progress\r\n      this.events.emit('progress', item)\r\n    }\r\n\r\n    const skiesPath = this.config.getSkiesPath()\r\n    const buffer = await xhr(`${skiesPath}/${name}.tga`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch((err: any) => {\r\n      item.error()\r\n      this.events.emit('error', err, item)\r\n      this.checkStatus()\r\n    })\r\n\r\n    if (item.isError()) {\r\n      return\r\n    }\r\n\r\n    const skyImage = Tga.parse(buffer, name)\r\n    item.done(skyImage)\r\n    this.events.emit('load', item)\r\n    this.checkStatus()\r\n  }\r\n\r\n  async loadWad(name: string) {\r\n    const wadItem = new LoadItemWad(name)\r\n    this.wads.push(wadItem)\r\n    this.events.emit('loadstart', wadItem)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      wadItem.progress = progress\r\n      this.events.emit('progress', wadItem)\r\n    }\r\n\r\n    const wadsPath = this.config.getWadsPath()\r\n    const buffer = await xhr(`${wadsPath}/${name}`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch((err: any) => {\r\n      wadItem.error()\r\n      this.events.emit('error', err, wadItem)\r\n      this.checkStatus()\r\n    })\r\n\r\n    if (wadItem.isError()) {\r\n      return\r\n    }\r\n\r\n    const wad = await Wad.parse(buffer)\r\n    wadItem.done(wad)\r\n\r\n    if (!this.map || !this.map.data) {\r\n      return\r\n    }\r\n\r\n    const map = this.map.data\r\n    const cmp = (a: any, b: any) => a.toLowerCase() === b.toLowerCase()\r\n    wad.entries.forEach(entry => {\r\n      if (entry.type !== 'texture') {\r\n        return\r\n      }\r\n\r\n      map.textures.forEach(texture => {\r\n        if (cmp(entry.name, texture.name)) {\r\n          texture.width = entry.width\r\n          texture.height = entry.height\r\n          texture.data = entry.data\r\n        }\r\n      })\r\n    })\r\n\r\n    this.events.emit('load', wadItem)\r\n    this.checkStatus()\r\n  }\r\n\r\n  async loadSound(name: string, index: number) {\r\n    const sound = new LoadItemSound(name)\r\n    this.sounds.push(sound)\r\n    this.events.emit('loadstart', sound)\r\n\r\n    const progressCallback: ProgressCallback = (_1, progress) => {\r\n      sound.progress = progress\r\n      this.events.emit('progress', sound)\r\n    }\r\n\r\n    const soundsPath = this.config.getSoundsPath()\r\n    const buffer = await xhr(`${soundsPath}/${name}`, {\r\n      method: 'GET',\r\n      isBinary: true,\r\n      progressCallback\r\n    }).catch((err: any) => {\r\n      sound.error()\r\n      this.events.emit('error', err, sound)\r\n      this.checkStatus()\r\n    })\r\n\r\n    if (sound.isError()) {\r\n      return\r\n    }\r\n\r\n    const data = await Sound.create(buffer).catch((err: any) => {\r\n      sound.error()\r\n      this.events.emit('error', err, sound)\r\n      this.checkStatus()\r\n    })\r\n\r\n    if (!data || sound.isError()) {\r\n      return\r\n    }\r\n\r\n    data.index = index\r\n    data.name = name\r\n    sound.done(data)\r\n    this.events.emit('load', sound)\r\n    this.checkStatus()\r\n  }\r\n}\r\n","import { SoundSystem } from './SoundSystem'\r\n\r\nexport class Sound {\r\n  index: number\r\n  name: string\r\n  buffer: AudioBuffer\r\n\r\n  constructor(buffer: AudioBuffer) {\r\n    this.index = -1\r\n    this.name = ''\r\n    this.buffer = buffer\r\n  }\r\n\r\n  static create(buffer: ArrayBuffer): Promise<Sound> {\r\n    return new Promise<Sound>((resolve, reject) => {\r\n      SoundSystem.getContext().decodeAudioData(\r\n        buffer,\r\n        (buffer: AudioBuffer) => {\r\n          resolve(new Sound(buffer))\r\n        },\r\n        (err: any) => {\r\n          reject(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n","import { Reader, ReaderDataType } from '../Reader'\r\n\r\nexport class Tga {\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n\r\n  constructor(name: string, width: number, height: number, data: Uint8Array) {\r\n    this.name = name\r\n    this.width = width\r\n    this.height = height\r\n    this.data = data\r\n  }\r\n\r\n  static parse(buffer: ArrayBuffer, name: string) {\r\n    let r = new Reader(buffer)\r\n\r\n    let header = {\r\n      idLength: r.ub(),\r\n      colorMapType: r.ub(),\r\n      imageType: r.ub(),\r\n      colorMap: {\r\n        firstEntryIndex: r.us(),\r\n        length: r.us(),\r\n        size: r.ub()\r\n      },\r\n      image: {\r\n        xOrigin: r.us(),\r\n        yOrigin: r.us(),\r\n        width: r.us(),\r\n        height: r.us(),\r\n        depth: r.ub(),\r\n        descriptor: r.ub()\r\n      }\r\n    }\r\n\r\n    // let imageId\r\n    if (header.idLength) {\r\n      // imageId = r.arrx(header.idLength, Reader.Type.UByte)\r\n      r.arrx(header.idLength, ReaderDataType.UByte)\r\n    }\r\n\r\n    if (header.colorMapType) {\r\n      throw new Error('Not implemented')\r\n    }\r\n\r\n    let w = header.image.width\r\n    let h = header.image.height\r\n    let pixelCount = w * h\r\n    let imageData\r\n\r\n    if (header.imageType === 0x02) {\r\n      let byteCount = (pixelCount * header.image.depth) / 8\r\n      imageData = r.arrx(byteCount, ReaderDataType.UByte)\r\n      if (header.image.depth === 24) {\r\n        let temp = new Uint8Array(pixelCount * 4)\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w; ++j) {\r\n            let dst = (h - 1 - i) * w + j\r\n            temp[dst * 4] = imageData[(i * w + j) * 3 + 2]\r\n            temp[dst * 4 + 1] = imageData[(i * w + j) * 3 + 1]\r\n            temp[dst * 4 + 2] = imageData[(i * w + j) * 3]\r\n            temp[dst * 4 + 3] = 255\r\n          }\r\n        }\r\n        imageData = temp\r\n      } else if (header.image.depth === 32) {\r\n        let temp = new Uint8Array(pixelCount * 4)\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w; ++j) {\r\n            let dst = (h - 1 - i) * w + j\r\n            temp[dst * 4] = imageData[(i * w + j) * 4 + 2]\r\n            temp[dst * 4 + 1] = imageData[(i * w + j) * 4 + 1]\r\n            temp[dst * 4 + 2] = imageData[(i * w + j) * 4]\r\n            temp[dst * 4 + 3] = 255\r\n          }\r\n        }\r\n        imageData = temp\r\n      }\r\n    } else if (header.imageType === 0x0a) {\r\n      imageData = new Uint8Array(pixelCount * 4)\r\n      if (header.image.depth === 24) {\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w /*++j*/; ) {\r\n            let repCount = r.ub()\r\n            if (repCount & 0x80) {\r\n              repCount = (repCount & 0x7f) + 1\r\n              let bl = r.ub()\r\n              let gr = r.ub()\r\n              let rd = r.ub()\r\n              while (j < w && repCount) {\r\n                let dst = (h - 1 - i) * w + j\r\n                imageData[dst * 4] = rd\r\n                imageData[dst * 4 + 1] = gr\r\n                imageData[dst * 4 + 2] = bl\r\n                imageData[dst * 4 + 3] = 255\r\n                ++j\r\n                --repCount\r\n              }\r\n            } else {\r\n              repCount = (repCount & 0x7f) + 1\r\n              while (j < w && repCount) {\r\n                let dst = (h - 1 - i) * w + j\r\n                imageData[dst * 4 + 2] = r.ub()\r\n                imageData[dst * 4 + 1] = r.ub()\r\n                imageData[dst * 4] = r.ub()\r\n                imageData[dst * 4 + 3] = 255\r\n                ++j\r\n                --repCount\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return new Tga(name, header.image.width, header.image.height, imageData)\r\n  }\r\n}\r\n","import { Reader, ReaderDataType } from '../Reader'\r\nimport { paletteToRGBA, paletteWithLastTransToRGBA } from './Util'\r\n\r\nfunction parseDecal(r: Reader): WadDecal {\r\n  const name = r.nstr(16)\r\n\r\n  const width = r.ui()\r\n  const height = r.ui()\r\n\r\n  r.skip(4 * 4) // skip mipmap offsets\r\n\r\n  // read largest mipmap data\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  // skip other 3 mipmaps\r\n  r.skip(21 * (pixelCount / 64))\r\n\r\n  r.skip(2) // skip padding bytes\r\n\r\n  const palette = r.arrx(768, ReaderDataType.UByte)\r\n\r\n  const data =\r\n    name[0] === '{'\r\n      ? paletteWithLastTransToRGBA(pixels, palette)\r\n      : paletteToRGBA(pixels, palette)\r\n\r\n  return {\r\n    type: 'decal',\r\n    name,\r\n    width,\r\n    height,\r\n    data\r\n  }\r\n}\r\n\r\nconst parseCache = (_r: Reader, metadata: WadEntryMetadata): WadCache => ({\r\n  type: 'cache',\r\n  name: metadata.name\r\n})\r\n\r\nfunction parseTexture(r: Reader): WadTexture {\r\n  const name = r.nstr(16)\r\n\r\n  const width = r.ui()\r\n  const height = r.ui()\r\n\r\n  r.skip(4 * 4) // skip mipmap offsets\r\n\r\n  // read largest mipmap data\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  // skip other 3 mipmaps\r\n  r.skip(21 * (pixelCount / 64))\r\n\r\n  r.skip(2) // skip padding bytes\r\n\r\n  const palette = r.arrx(768, ReaderDataType.UByte)\r\n\r\n  const data =\r\n    name[0] === '{'\r\n      ? paletteWithLastTransToRGBA(pixels, palette)\r\n      : paletteToRGBA(pixels, palette)\r\n\r\n  return {\r\n    type: 'texture',\r\n    name,\r\n    width,\r\n    height,\r\n    data\r\n  }\r\n}\r\n\r\nfunction parseFont(r: Reader, metadata: WadEntryMetadata): WadFont {\r\n  // TODO: figure out why width is incorrect\r\n  const width = r.ui() && 256 // NOTE: fonts are lying about their width\r\n  const height = r.ui()\r\n  const rowCount = r.ui()\r\n  const rowHeight = r.ui()\r\n\r\n  const glyphs = []\r\n  // hardcoded 256 number of glyphs\r\n  for (let i = 0; i < 256; ++i) {\r\n    const glyphOffset = r.us()\r\n    const glyphWidth = r.us()\r\n\r\n    glyphs.push({\r\n      x: glyphOffset % width,\r\n      y: (Math.floor(glyphOffset / width) / rowHeight) * rowHeight,\r\n      width: glyphWidth,\r\n      height: rowHeight\r\n    })\r\n  }\r\n\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  r.skip(2)\r\n\r\n  const palette = r.arrx(256 * 3, ReaderDataType.UByte)\r\n\r\n  return {\r\n    type: 'font',\r\n    name: metadata.name,\r\n    width,\r\n    height,\r\n    rowCount,\r\n    rowHeight,\r\n    glyphs,\r\n    data: paletteWithLastTransToRGBA(pixels, palette)\r\n  }\r\n}\r\n\r\nconst parseUnknown = (r: Reader, metadata: WadEntryMetadata): WadUnknown => ({\r\n  type: 'unknown',\r\n  name: metadata.name,\r\n  data: r.arrx(metadata.length, ReaderDataType.UByte)\r\n})\r\n\r\nfunction parseEntry(r: Reader, metadata: WadEntryMetadata): WadEntry {\r\n  r.seek(metadata.offset)\r\n  switch (metadata.type) {\r\n    case 0x40: {\r\n      return parseDecal(r)\r\n    }\r\n    case 0x42: {\r\n      return parseCache(r, metadata)\r\n    }\r\n    case 0x43: {\r\n      return parseTexture(r)\r\n    }\r\n    case 0x46: {\r\n      return parseFont(r, metadata)\r\n    }\r\n\r\n    default: {\r\n      // unknown data type; return array of bytes\r\n      return parseUnknown(r, metadata)\r\n    }\r\n  }\r\n}\r\n\r\nexport interface WadTexture {\r\n  type: 'texture'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadDecal {\r\n  type: 'decal'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadCache {\r\n  type: 'cache'\r\n  name: string\r\n}\r\n\r\nexport interface WadFont {\r\n  type: 'font'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  rowCount: number\r\n  rowHeight: number\r\n  glyphs: {\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n  }[]\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadUnknown {\r\n  type: 'unknown'\r\n  name: string\r\n  data: Uint8Array\r\n}\r\n\r\nexport type WadEntry = WadTexture | WadDecal | WadCache | WadFont | WadUnknown\r\n\r\ninterface WadEntryMetadata {\r\n  offset: number\r\n  diskLength: number\r\n  length: number\r\n  type: number\r\n  isCompressed: number\r\n  name: string\r\n}\r\n\r\nexport class Wad {\r\n  entries: WadEntry[]\r\n\r\n  constructor(entries: WadEntry[]) {\r\n    this.entries = entries\r\n  }\r\n\r\n  static parse(buffer: ArrayBuffer) {\r\n    const r = new Reader(buffer)\r\n\r\n    const magic = r.nstr(4)\r\n    if (magic !== 'WAD3') {\r\n      throw new Error('Invalid WAD file format')\r\n    }\r\n\r\n    const entryCount = r.ui()\r\n    const directoryOffset = r.ui()\r\n    r.seek(directoryOffset)\r\n    const entriesMetadata: WadEntryMetadata[] = []\r\n    for (let i = 0; i < entryCount; ++i) {\r\n      const entry: WadEntryMetadata = {\r\n        offset: r.ui(),\r\n        diskLength: r.ui(),\r\n        length: r.ui(),\r\n        type: r.b(),\r\n        isCompressed: r.b(),\r\n        name: ''\r\n      }\r\n      r.skip(2)\r\n      entry.name = r.nstr(16)\r\n      entriesMetadata.push(entry)\r\n    }\r\n\r\n    const entries: WadEntry[] = entriesMetadata.map(e => parseEntry(r, e))\r\n\r\n    return new Wad(entries)\r\n  }\r\n}\r\n","import { basename } from '../Util'\r\nimport { ReplayChunk } from './ReplayChunk'\r\n\r\nexport class ReplayMap {\r\n  name: string\r\n  chunks: ReplayChunk[]\r\n  resources: any\r\n\r\n  constructor(mapFilePath: string) {\r\n    this.name = basename(mapFilePath, '.bsp')\r\n    this.chunks = []\r\n    this.resources = {\r\n      sounds: [],\r\n      skins: [],\r\n      models: [],\r\n      decals: [],\r\n      custom: [],\r\n      events: []\r\n    }\r\n  }\r\n\r\n  setResources(resources: any[]) {\r\n    resources.forEach(res => {\r\n      switch (res.type) {\r\n        case 0: {\r\n          res.used = false\r\n          this.resources.sounds.push(res)\r\n          break\r\n        }\r\n        case 1: {\r\n          this.resources.skins.push(res)\r\n          break\r\n        }\r\n        case 2: {\r\n          this.resources.models.push(res)\r\n          break\r\n        }\r\n        case 3: {\r\n          this.resources.decals.push(res)\r\n          break\r\n        }\r\n        case 4: {\r\n          this.resources.custom.push(res)\r\n          break\r\n        }\r\n        case 5: {\r\n          this.resources.events.push(res)\r\n          break\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  addChunk(chunk: ReplayChunk) {\r\n    this.chunks.push(chunk)\r\n  }\r\n}\r\n","import { Reader } from '../Reader'\r\nimport { ReplayState } from './ReplayState'\r\n\r\nexport class ReplayChunk {\r\n  state: ReplayState\r\n  startTime: number\r\n  timeLength: number\r\n  data: Uint8Array | null\r\n  reader: Reader | null\r\n\r\n  constructor(initialState: ReplayState, startTime: number) {\r\n    this.state = initialState.clone()\r\n    this.startTime = startTime\r\n    this.timeLength = 10\r\n    this.data = null\r\n    this.reader = null\r\n  }\r\n\r\n  setData(data: Uint8Array) {\r\n    this.data = new Uint8Array(data.length)\r\n    for (let i = 0; i < data.length; ++i) {\r\n      this.data[i] = data[i]\r\n    }\r\n\r\n    this.reader = new Reader(this.data.buffer as ArrayBuffer)\r\n  }\r\n}\r\n","import { readCoord } from './readCoord'\r\nimport { readDelta } from './readDelta'\r\nimport { BitStream } from '../BitReader'\r\nimport { DeltaDecoderTable } from './DeltaDecoder'\r\nimport { Reader, ReaderDataType } from '../Reader'\r\n\r\ntype FrameDataHandler = (r: Reader, deltaDecoder: DeltaDecoderTable) => any\r\n\r\nexport class FrameDataReader {\r\n  static bad() {\r\n    throw new Error('Invalid message type')\r\n  }\r\n\r\n  static nop(): null {\r\n    return null\r\n  }\r\n\r\n  static disconnect(r: Reader) {\r\n    return {\r\n      reason: r.str()\r\n    }\r\n  }\r\n\r\n  static event(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    type Event = {\r\n      index: number\r\n      packetIndex?: number\r\n      fireTime?: number\r\n      delta?: { [name: string]: any }\r\n    }\r\n\r\n    let events: Event[] = []\r\n    let eventCount = bs.readBits(5)\r\n    for (let i = 0; i < eventCount; ++i) {\r\n      let event: Event = {\r\n        index: bs.readBits(10)\r\n      }\r\n      let packetIndexBit = bs.readBits(1)\r\n      if (packetIndexBit) {\r\n        event.packetIndex = bs.readBits(11)\r\n        let deltaBit = bs.readBits(1)\r\n        if (deltaBit) {\r\n          event.delta = readDelta(bs, deltaDecoders['event_t'])\r\n        }\r\n      }\r\n      let fireTimeBit = bs.readBits(1)\r\n      if (fireTimeBit) {\r\n        event.fireTime = bs.readBits(16)\r\n      }\r\n\r\n      events.push(event)\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return { events }\r\n  }\r\n\r\n  static version(r: Reader) {\r\n    return {\r\n      version: r.ui()\r\n    }\r\n  }\r\n\r\n  static setView(r: Reader) {\r\n    return {\r\n      entityIndex: r.s()\r\n    }\r\n  }\r\n\r\n  static sound(r: Reader) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let flags = bs.readBits(9)\r\n\r\n    let volume = 1\r\n    if ((flags & 1) !== 0) {\r\n      volume = bs.readBits(8) / 255\r\n    }\r\n\r\n    let attenuation = 1\r\n    if ((flags & 2) !== 0) {\r\n      attenuation = bs.readBits(8) / 64\r\n    }\r\n\r\n    let channel = bs.readBits(3)\r\n    let entityIndex = bs.readBits(11)\r\n\r\n    let soundIndex\r\n    if ((flags & 4) !== 0) {\r\n      soundIndex = bs.readBits(16)\r\n    } else {\r\n      soundIndex = bs.readBits(8)\r\n    }\r\n\r\n    let xFlag = bs.readBits(1)\r\n    let yFlag = bs.readBits(1)\r\n    let zFlag = bs.readBits(1)\r\n    let xPosition\r\n    let yPosition\r\n    let zPosition\r\n    if (xFlag) {\r\n      xPosition = readCoord(bs)\r\n    }\r\n    if (yFlag) {\r\n      yPosition = readCoord(bs)\r\n    }\r\n    if (zFlag) {\r\n      zPosition = readCoord(bs)\r\n    }\r\n\r\n    let pitch = 1\r\n    if ((flags & 8) !== 0) {\r\n      pitch = bs.readBits(8)\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return {\r\n      flags,\r\n      volume,\r\n      attenuation,\r\n      channel,\r\n      entityIndex,\r\n      soundIndex,\r\n      xPosition,\r\n      yPosition,\r\n      zPosition,\r\n      pitch\r\n    }\r\n  }\r\n\r\n  static time(r: Reader) {\r\n    return {\r\n      time: r.f()\r\n    }\r\n  }\r\n\r\n  static print(r: Reader) {\r\n    return {\r\n      message: r.str()\r\n    }\r\n  }\r\n\r\n  static stuffText(r: Reader) {\r\n    let message = r.str()\r\n    let commands = message.split(';').map(command => {\r\n      let args = command\r\n        .split(/\\s*(\"[^\"]+\"|[^\\s\"]+)/)\r\n        .map(arg => arg.replace(/^\"(.*)\"$/, '$1').trim())\r\n        .filter(arg => arg)\r\n\r\n      let func = args[0]\r\n      let params = args.slice(1)\r\n\r\n      return { func, params }\r\n    })\r\n\r\n    return { commands }\r\n  }\r\n\r\n  static setAngle(r: Reader) {\r\n    return {\r\n      pitch: r.s(),\r\n      yaw: r.s(),\r\n      roll: r.s()\r\n    }\r\n  }\r\n\r\n  static serverInfo(r: Reader) {\r\n    let info = {\r\n      protocol: r.i(),\r\n      spawnCount: r.i(), // map change count\r\n      mapCrc: r.i(),\r\n      clientDllHash: r.arrx(16, ReaderDataType.UByte),\r\n      maxPlayers: r.ub(),\r\n      playerIndex: r.ub(),\r\n      isDeathmatch: r.ub(),\r\n      gameDir: r.str(),\r\n      hostName: r.str(),\r\n      mapFileName: r.str(), // path to map relative in mod directory\r\n      mapCycle: r.str()\r\n    }\r\n    r.skip(1) // skip padding\r\n\r\n    return info\r\n  }\r\n\r\n  static lightStyle(r: Reader) {\r\n    return {\r\n      index: r.ub(),\r\n      lightInfo: r.str()\r\n    }\r\n  }\r\n\r\n  static updateUserInfo(r: Reader) {\r\n    return {\r\n      clientIndex: r.ub(),\r\n      clientUserId: r.ui(),\r\n      clientUserInfo: r.str(),\r\n      clientCdKeyHash: r.arrx(16, ReaderDataType.UByte)\r\n    }\r\n  }\r\n\r\n  static deltaDescription(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let data: {\r\n      name: string\r\n      fields: { [name: string]: any }[]\r\n    } = {\r\n      name: r.str(),\r\n      fields: []\r\n    }\r\n\r\n    let bs = new BitStream(r.data.buffer)\r\n    let fieldCount = r.us()\r\n    bs.index = r.tell() * 8\r\n    for (let i = 0; i < fieldCount; ++i) {\r\n      data.fields.push(readDelta(bs, deltaDecoders['delta_description_t']))\r\n    }\r\n    deltaDecoders[data.name] = data.fields as any\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  static clientData(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let deltaSequence = bs.readBits(1)\r\n    if (deltaSequence) {\r\n      // delta update mask\r\n      bs.index += 8\r\n    }\r\n\r\n    let clientDataDecoder = deltaDecoders['clientdata_t']\r\n    let clientData = readDelta(bs, clientDataDecoder)\r\n\r\n    // TODO: weapon data\r\n    let weaponDataDecoder = deltaDecoders['weapon_data_t']\r\n    while (bs.readBits(1)) {\r\n      bs.index += 6 // weapon index\r\n      readDelta(bs, weaponDataDecoder) // weapon data\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return {\r\n      clientData\r\n    }\r\n  }\r\n\r\n  static stopSound(r: Reader) {\r\n    return {\r\n      entityIndex: r.s()\r\n    }\r\n  }\r\n\r\n  static pings(r: Reader) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let pings = []\r\n    while (bs.readBits(1)) {\r\n      pings.push({\r\n        slot: bs.readBits(8),\r\n        ping: bs.readBits(8),\r\n        loss: bs.readBits(8)\r\n      })\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return pings\r\n  }\r\n\r\n  static particle(r: Reader) {\r\n    return {\r\n      position: [r.s() / 8, r.s() / 8, r.s() / 8],\r\n      direction: [r.b(), r.b(), r.b()],\r\n      count: r.ub(),\r\n      color: r.ub()\r\n    }\r\n  }\r\n\r\n  static damage(): null {\r\n    // unused\r\n    return null\r\n  }\r\n\r\n  static spawnStatic(r: Reader) {\r\n    let data: any = {\r\n      modelIndex: r.s(),\r\n      sequence: r.b(),\r\n      frame: r.b(),\r\n      colorMap: r.s(),\r\n      skin: r.b(),\r\n      position: [],\r\n      rotation: []\r\n    }\r\n    data.position[0] = r.s() / 8\r\n    data.rotation[0] = r.b() * (360 / 256)\r\n    data.position[1] = r.s() / 8\r\n    data.rotation[1] = r.b() * (360 / 256)\r\n    data.position[2] = r.s() / 8\r\n    data.rotation[2] = r.b() * (360 / 256)\r\n    data.renderMode = r.b()\r\n    if (data.renderMode) {\r\n      data.renderAmt = r.b()\r\n      data.renderColor = [r.ub(), r.ub(), r.ub()]\r\n      data.renderFx = r.b()\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  static eventReliable(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let eventIndex = bs.readBits(10)\r\n    let eventData = readDelta(bs, deltaDecoders['event_t'])\r\n    let delayBit = bs.readBits(1)\r\n    let delay\r\n    if (delayBit) {\r\n      delay = bs.readBits(16)\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return {\r\n      eventIndex,\r\n      eventData,\r\n      delayBit,\r\n      delay\r\n    }\r\n  }\r\n\r\n  static spawnBaseLine(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let entities = []\r\n    while (true) {\r\n      let entityIdx = bs.readBits(11)\r\n      if (entityIdx === (1 << 11) - 1) {\r\n        break\r\n      }\r\n\r\n      let entityType = bs.readBits(2)\r\n      let entityTypeString\r\n      if (entityType & 1) {\r\n        if (entityIdx > 0 && entityIdx <= 32) {\r\n          entityTypeString = 'entity_state_player_t'\r\n        } else {\r\n          entityTypeString = 'entity_state_t'\r\n        }\r\n      } else {\r\n        entityTypeString = 'custom_entity_state_t'\r\n      }\r\n\r\n      entities[entityIdx] = readDelta(bs, deltaDecoders[entityTypeString])\r\n    }\r\n\r\n    let footer = bs.readBits(5)\r\n    if (footer !== (1 << 5) - 1) {\r\n      throw new Error('Bad spawnbaseline')\r\n    }\r\n\r\n    let nExtraData = bs.readBits(6)\r\n    let extraData = []\r\n    for (let i = 0; i < nExtraData; ++i) {\r\n      extraData.push(readDelta(bs, deltaDecoders['entity_state_t']))\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return {\r\n      entities,\r\n      extraData\r\n    }\r\n  }\r\n\r\n  static tempEntity(r: Reader) {\r\n    const TE_BEAMPOINTS = 0 // Beam effect between two points\r\n    const TE_BEAMENTPOINT = 1 // Beam effect between point and entity\r\n    const TE_GUNSHOT = 2 // Particle effect plus ricochet sound\r\n    const TE_EXPLOSION = 3 // Additive sprite, 2 dynamic lights, flickering particles, explosion sound, move vertically 8 pps\r\n    const TE_TAREXPLOSION = 4 // Quake1 \"tarbaby\" explosion with sound\r\n    const TE_SMOKE = 5 // Alphablend sprite, move vertically 30 pps\r\n    const TE_TRACER = 6 // Tracer effect from point to point\r\n    const TE_LIGHTNING = 7 // TE_BEAMPOINTS with simplified parameters\r\n    const TE_BEAMENTS = 8\r\n    const TE_SPARKS = 9 // 8 random tracers with gravity, ricochet sprite\r\n    const TE_LAVASPLASH = 10 // Quake1 lava splash\r\n    const TE_TELEPORT = 11 // Quake1 teleport splash\r\n    const TE_EXPLOSION2 = 12 // Quake1 colormaped (base palette) particle explosion with sound\r\n    const TE_BSPDECAL = 13 // Decal from the .BSP file\r\n    const TE_IMPLOSION = 14 // Tracers moving toward a point\r\n    const TE_SPRITETRAIL = 15 // Line of moving glow sprites with gravity, fadeout, and collisions\r\n    const TE_SPRITE = 17 // Additive sprite, plays 1 cycle\r\n    const TE_BEAMSPRITE = 18 // A beam with a sprite at the end\r\n    const TE_BEAMTORUS = 19 // Screen aligned beam ring, expands to max radius over lifetime\r\n    const TE_BEAMDISK = 20 // Disk that expands to max radius over lifetime\r\n    const TE_BEAMCYLINDER = 21 // Cylinder that expands to max radius over lifetime\r\n    const TE_BEAMFOLLOW = 22 // Create a line of decaying beam segments until entity stops moving\r\n    const TE_GLOWSPRITE = 23\r\n    const TE_BEAMRING = 24 // Connect a beam ring to two entities\r\n    const TE_STREAK_SPLASH = 25 // Oriented shower of tracers\r\n    const TE_DLIGHT = 27 // Dynamic light, effect world, minor entity effect\r\n    const TE_ELIGHT = 28 // Point entity light, no world effect\r\n    const TE_TEXTMESSAGE = 29\r\n    const TE_LINE = 30\r\n    const TE_BOX = 31\r\n    const TE_KILLBEAM = 99 // Kill all beams attached to entity\r\n    const TE_LARGEFUNNEL = 100\r\n    const TE_BLOODSTREAM = 101 // Particle spray\r\n    const TE_SHOWLINE = 102 // Line of particles every 5 units, dies in 30 seconds\r\n    const TE_BLOOD = 103 // Particle spray\r\n    const TE_DECAL = 104 // Decal applied to a brush entity (not the world)\r\n    const TE_FIZZ = 105 // Create alpha sprites inside of entity, float upwards\r\n    const TE_MODEL = 106 // Create a moving model that bounces and makes a sound when it hits\r\n    const TE_EXPLODEMODEL = 107 // Spherical shower of models, picks from set\r\n    const TE_BREAKMODEL = 108 // Box of models or sprites\r\n    const TE_GUNSHOTDECAL = 109 // Decal and ricochet sound\r\n    const TE_SPRITE_SPRAY = 110 // Spray of alpha sprites\r\n    const TE_ARMOR_RICOCHET = 111 // Quick spark sprite, client ricochet sound.\r\n    const TE_PLAYERDECAL = 112\r\n    const TE_BUBBLES = 113 // Create alpha sprites inside of box, float upwards\r\n    const TE_BUBBLETRAIL = 114 // Create alpha sprites along a line, float upwards\r\n    const TE_BLOODSPRITE = 115 // Spray of opaque sprite1's that fall, single sprite2 for 1..2 secs (this is a high-priority tent)\r\n    const TE_WORLDDECAL = 116 // Decal applied to the world brush\r\n    const TE_WORLDDECALHIGH = 117 // Decal (with texture index > 256) applied to world brush\r\n    const TE_DECALHIGH = 118 // Same as TE_DECAL, but the texture index was greater than 256\r\n    const TE_PROJECTILE = 119 // Makes a projectile (like a nail) (this is a high-priority tent)\r\n    const TE_SPRAY = 120 // Throws a shower of sprites or models\r\n    const TE_PLAYERSPRITES = 121 // Sprites emit from a player's bounding box (ONLY use for players!)\r\n    const TE_PARTICLEBURST = 122 // Very similar to lavasplash\r\n    const TE_FIREFIELD = 123 // Makes a field of fire\r\n    const TE_PLAYERATTACHMENT = 124 // Attaches a TENT to a player (this is a high-priority tent)\r\n    const TE_KILLPLAYERATTACHMENTS = 125 // Will expire all TENTS attached to a player.\r\n    const TE_MULTIGUNSHOT = 126 // Much more compact shotgun message\r\n    const TE_USERTRACER = 127 // Larger message than the standard tracer, but allows some customization.\r\n\r\n    let type = r.ub()\r\n    let data: any = {}\r\n    switch (type) {\r\n      case TE_BEAMPOINTS: {\r\n        r.skip(24)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMENTPOINT: {\r\n        r.skip(20)\r\n        break\r\n      }\r\n\r\n      case TE_GUNSHOT: {\r\n        r.skip(6)\r\n        break\r\n      }\r\n\r\n      case TE_EXPLOSION: {\r\n        r.skip(11)\r\n        break\r\n      }\r\n\r\n      case TE_TAREXPLOSION: {\r\n        r.skip(6)\r\n        break\r\n      }\r\n\r\n      case TE_SMOKE: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_TRACER: {\r\n        r.skip(12)\r\n        break\r\n      }\r\n\r\n      case TE_LIGHTNING: {\r\n        r.skip(17)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMENTS: {\r\n        r.skip(16)\r\n        break\r\n      }\r\n\r\n      case TE_SPARKS: {\r\n        r.skip(6)\r\n        break\r\n      }\r\n\r\n      case TE_LAVASPLASH: {\r\n        r.skip(6)\r\n        break\r\n      }\r\n\r\n      case TE_TELEPORT: {\r\n        r.skip(6)\r\n        break\r\n      }\r\n\r\n      case TE_EXPLOSION2: {\r\n        r.skip(8)\r\n        break\r\n      }\r\n\r\n      case TE_BSPDECAL: {\r\n        r.skip(8)\r\n        let entityIndex = r.s()\r\n        if (entityIndex) {\r\n          r.skip(2)\r\n        }\r\n        break\r\n      }\r\n\r\n      case TE_IMPLOSION: {\r\n        r.skip(9)\r\n        break\r\n      }\r\n\r\n      case TE_SPRITETRAIL: {\r\n        r.skip(19)\r\n        break\r\n      }\r\n\r\n      case TE_SPRITE: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMSPRITE: {\r\n        r.skip(16)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMTORUS: {\r\n        r.skip(24)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMDISK: {\r\n        r.skip(24)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMCYLINDER: {\r\n        r.skip(24)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMFOLLOW: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_GLOWSPRITE: {\r\n        r.skip(11)\r\n        break\r\n      }\r\n\r\n      case TE_BEAMRING: {\r\n        r.skip(16)\r\n        break\r\n      }\r\n\r\n      case TE_STREAK_SPLASH: {\r\n        r.skip(19)\r\n        break\r\n      }\r\n\r\n      case TE_DLIGHT: {\r\n        r.skip(12)\r\n        break\r\n      }\r\n\r\n      case TE_ELIGHT: {\r\n        r.skip(16)\r\n        break\r\n      }\r\n\r\n      case TE_TEXTMESSAGE: {\r\n        data.channel = r.b()\r\n        data.x = r.s()\r\n        data.y = r.s()\r\n        data.effect = r.b()\r\n        data.textColor = [r.ub(), r.ub(), r.ub(), r.ub()]\r\n        data.effectColor = [r.ub(), r.ub(), r.ub(), r.ub()]\r\n        data.fadeInTime = r.s()\r\n        data.fadeOutTime = r.s()\r\n        data.holdTime = r.s()\r\n        if (data.effect) {\r\n          data.effectTime = r.s()\r\n        }\r\n        data.message = r.str()\r\n        break\r\n      }\r\n\r\n      case TE_LINE: {\r\n        r.skip(17)\r\n        break\r\n      }\r\n\r\n      case TE_BOX: {\r\n        r.skip(17)\r\n        break\r\n      }\r\n\r\n      case TE_KILLBEAM: {\r\n        r.skip(2)\r\n        break\r\n      }\r\n\r\n      case TE_LARGEFUNNEL: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_BLOODSTREAM: {\r\n        r.skip(14)\r\n        break\r\n      }\r\n\r\n      case TE_SHOWLINE: {\r\n        r.skip(12)\r\n        break\r\n      }\r\n\r\n      case TE_BLOOD: {\r\n        r.skip(14)\r\n        break\r\n      }\r\n\r\n      case TE_DECAL: {\r\n        r.skip(9)\r\n        break\r\n      }\r\n\r\n      case TE_FIZZ: {\r\n        r.skip(5)\r\n        break\r\n      }\r\n\r\n      case TE_MODEL: {\r\n        r.skip(17)\r\n        break\r\n      }\r\n\r\n      case TE_EXPLODEMODEL: {\r\n        r.skip(13)\r\n        break\r\n      }\r\n\r\n      case TE_BREAKMODEL: {\r\n        r.skip(24)\r\n        break\r\n      }\r\n\r\n      case TE_GUNSHOTDECAL: {\r\n        r.skip(9)\r\n        break\r\n      }\r\n\r\n      case TE_SPRITE_SPRAY: {\r\n        r.skip(17)\r\n        break\r\n      }\r\n\r\n      case TE_ARMOR_RICOCHET: {\r\n        r.skip(7)\r\n        break\r\n      }\r\n\r\n      case TE_PLAYERDECAL: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_BUBBLES: {\r\n        r.skip(19)\r\n        break\r\n      }\r\n\r\n      case TE_BUBBLETRAIL: {\r\n        r.skip(19)\r\n        break\r\n      }\r\n\r\n      case TE_BLOODSPRITE: {\r\n        r.skip(12)\r\n        break\r\n      }\r\n\r\n      case TE_WORLDDECAL: {\r\n        r.skip(7)\r\n        break\r\n      }\r\n\r\n      case TE_WORLDDECALHIGH: {\r\n        r.skip(7)\r\n        break\r\n      }\r\n\r\n      case TE_DECALHIGH: {\r\n        r.skip(9)\r\n        break\r\n      }\r\n\r\n      case TE_PROJECTILE: {\r\n        r.skip(16)\r\n        break\r\n      }\r\n\r\n      case TE_SPRAY: {\r\n        r.skip(18)\r\n        break\r\n      }\r\n\r\n      case TE_PLAYERSPRITES: {\r\n        r.skip(5)\r\n        break\r\n      }\r\n\r\n      case TE_PARTICLEBURST: {\r\n        r.skip(10)\r\n        break\r\n      }\r\n\r\n      case TE_FIREFIELD: {\r\n        r.skip(9)\r\n        break\r\n      }\r\n\r\n      case TE_PLAYERATTACHMENT: {\r\n        r.skip(7)\r\n        break\r\n      }\r\n\r\n      case TE_KILLPLAYERATTACHMENTS: {\r\n        r.skip(1)\r\n        break\r\n      }\r\n\r\n      case TE_MULTIGUNSHOT: {\r\n        r.skip(18)\r\n        break\r\n      }\r\n\r\n      case TE_USERTRACER: {\r\n        r.skip(15)\r\n        break\r\n      }\r\n\r\n      default: {\r\n        throw new Error('Unknown temp entity type')\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  static setPause(r: Reader) {\r\n    return {\r\n      isPaused: r.b()\r\n    }\r\n  }\r\n\r\n  static signOnNum(r: Reader) {\r\n    return {\r\n      sign: r.b()\r\n    }\r\n  }\r\n\r\n  static centerPrint(r: Reader) {\r\n    return {\r\n      message: r.str()\r\n    }\r\n  }\r\n\r\n  static killedMonster(): null {\r\n    // unused\r\n    return null\r\n  }\r\n\r\n  static foundSecret(): null {\r\n    // unused\r\n    return null\r\n  }\r\n\r\n  static spawnStaticSound(r: Reader) {\r\n    return {\r\n      position: [r.s() / 8, r.s() / 8, r.s() / 8],\r\n      soundIndex: r.us(),\r\n      volume: r.ub() / 255,\r\n      attenuation: r.ub() / 64,\r\n      entityIndex: r.us(),\r\n      pitch: r.ub(),\r\n      flags: r.ub()\r\n    }\r\n  }\r\n\r\n  static intermission(): null {\r\n    // has no arguments\r\n    return null\r\n  }\r\n\r\n  static finale(r: Reader) {\r\n    return {\r\n      text: r.str()\r\n    }\r\n  }\r\n\r\n  static cdTrack(r: Reader) {\r\n    return {\r\n      track: r.b(),\r\n      loopTrack: r.b()\r\n    }\r\n  }\r\n\r\n  static restore(r: Reader) {\r\n    let saveName = r.str()\r\n    let mapCount = r.ub()\r\n    let maps = []\r\n    for (let i = 0; i < mapCount; ++i) {\r\n      maps.push(r.str())\r\n    }\r\n\r\n    return { saveName, maps }\r\n  }\r\n\r\n  static cutscene(r: Reader) {\r\n    return {\r\n      text: r.str()\r\n    }\r\n  }\r\n\r\n  static weaponAnim(r: Reader) {\r\n    return {\r\n      sequenceNumber: r.b(),\r\n      weaponModelBodyGroup: r.b()\r\n    }\r\n  }\r\n\r\n  static decalName(r: Reader) {\r\n    return {\r\n      positionIndex: r.ub(),\r\n      decalName: r.str()\r\n    }\r\n  }\r\n\r\n  static roomType(r: Reader) {\r\n    return {\r\n      type: r.us()\r\n    }\r\n  }\r\n\r\n  static addAngle(r: Reader) {\r\n    // NOTE: not sure if (360/65536) or (65536/360)\r\n    return {\r\n      angleToAdd: r.s() / (360 / 65536)\r\n    }\r\n  }\r\n\r\n  static newUserMsg(r: Reader) {\r\n    return {\r\n      index: r.ub(),\r\n      size: r.b(),\r\n      name: r.nstr(16)\r\n    }\r\n  }\r\n\r\n  static packetEntities(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    let entityStates = []\r\n    bs.readBits(16) // skip entity count (unreliable)\r\n    let entityNumber = 0\r\n    while (true) {\r\n      let footer = bs.readBits(16)\r\n      if (footer === 0) {\r\n        break\r\n      }\r\n\r\n      bs.index -= 16\r\n\r\n      let entityNumberIncrement = bs.readBits(1)\r\n      if (!entityNumberIncrement) {\r\n        let absoluteEntityNumber = bs.readBits(1)\r\n        if (absoluteEntityNumber) {\r\n          entityNumber = bs.readBits(11)\r\n        } else {\r\n          entityNumber += bs.readBits(6)\r\n        }\r\n      } else {\r\n        entityNumber++\r\n      }\r\n\r\n      let custom = bs.readBits(1)\r\n      let useBaseline = bs.readBits(1)\r\n      if (useBaseline) {\r\n        bs.index += 6 // baseline index\r\n      }\r\n\r\n      let entityType = 'entity_state_t'\r\n      if (entityNumber > 0 && entityNumber <= 32) {\r\n        entityType = 'entity_state_player_t'\r\n      } else if (custom) {\r\n        entityType = 'custom_entity_state_t'\r\n      }\r\n\r\n      entityStates.push(readDelta(bs, deltaDecoders[entityType]))\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return { entityStates }\r\n  }\r\n\r\n  static deltaPacketEntities(r: Reader, deltaDecoders: DeltaDecoderTable) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    bs.readBits(16) // skip entity count (unreliable)\r\n    bs.index += 8 // either updatemask or delta sequence number\r\n\r\n    let entityStates = []\r\n    let entityIdx = 0\r\n    while (true) {\r\n      let footer = bs.readBits(16)\r\n      if (footer === 0) {\r\n        break\r\n      }\r\n\r\n      bs.index -= 16\r\n\r\n      let removeEntity = bs.readBits(1)\r\n      let absoluteEntityNumber = bs.readBits(1)\r\n      if (absoluteEntityNumber) {\r\n        entityIdx = bs.readBits(11)\r\n      } else {\r\n        entityIdx += bs.readBits(6)\r\n      }\r\n\r\n      if (removeEntity) {\r\n        continue\r\n      }\r\n\r\n      let custom = bs.readBits(1)\r\n      let entityType = 'entity_state_t'\r\n      if (entityIdx > 0 && entityIdx < 32) {\r\n        entityType = 'entity_state_player_t'\r\n      } else if (custom) {\r\n        entityType = 'custom_entity_state_t'\r\n      }\r\n\r\n      entityStates[entityIdx] = readDelta(bs, deltaDecoders[entityType])\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return { entityStates }\r\n  }\r\n\r\n  static choke(): null {\r\n    // no arguments\r\n    return null\r\n  }\r\n\r\n  static resourceList(r: Reader) {\r\n    let bs = new BitStream(r.data.buffer)\r\n    bs.index = r.tell() * 8\r\n\r\n    // TODO: extract more data???\r\n\r\n    let entries = []\r\n    let entryCount = bs.readBits(12)\r\n    for (let i = 0; i < entryCount; ++i) {\r\n      let entry: any = {}\r\n      entry.type = bs.readBits(4)\r\n      entry.name = bs.readString()\r\n      entry.index = bs.readBits(12)\r\n      entry.size = bs.readBits(24)\r\n\r\n      let flags = bs.readBits(3)\r\n      if (flags & 4) {\r\n        // TODO: entry.md5hash = read 128 bits\r\n        bs.index += 128\r\n      }\r\n\r\n      // 1 bit = boolean hasExtraInfo\r\n      if (bs.readBits(1)) {\r\n        // 32 bytes extraInfo\r\n        bs.index += 256\r\n      }\r\n\r\n      entries.push(entry)\r\n    }\r\n\r\n    if (bs.readBits(1)) {\r\n      while (bs.readBits(1)) {\r\n        let nBits = bs.readBits(1) ? 5 : 10\r\n        bs.index += nBits\r\n      }\r\n    }\r\n\r\n    if (bs.index % 8 > 0) {\r\n      r.seek(Math.floor(bs.index / 8) + 1)\r\n    } else {\r\n      r.seek(bs.index / 8)\r\n    }\r\n\r\n    return entries\r\n  }\r\n\r\n  static newMoveVars(r: Reader) {\r\n    return {\r\n      gravity: r.f(),\r\n      stopSpeed: r.f(),\r\n      maxSpeed: r.f(),\r\n      spectatorMaxSpeed: r.f(),\r\n      acceleration: r.f(),\r\n      airAcceleration: r.f(),\r\n      waterAcceleration: r.f(),\r\n      friction: r.f(),\r\n      edgeFriction: r.f(),\r\n      waterFriction: r.f(),\r\n      entityGravity: r.f(),\r\n      bounce: r.f(),\r\n      stepSize: r.f(),\r\n      maxVelocity: r.f(),\r\n      zMax: r.f(),\r\n      waveHeight: r.f(),\r\n      footsteps: r.b(),\r\n      rollAngle: r.f(),\r\n      rollSpeed: r.f(),\r\n      skyColor: [r.f(), r.f(), r.f()],\r\n      skyVec: [r.f(), r.f(), r.f()],\r\n      skyName: r.str()\r\n    }\r\n  }\r\n\r\n  static resourceRequest(r: Reader) {\r\n    let data = {\r\n      spawnCount: r.i()\r\n    }\r\n    r.skip(4) // unknown (always 0)\r\n\r\n    return data\r\n  }\r\n\r\n  static customization(r: Reader) {\r\n    let playerIndex = r.ub()\r\n    let type = r.ub()\r\n    let name = r.str()\r\n    let index = r.us()\r\n    let downloadSize = r.ui()\r\n    let flags = r.ub()\r\n    let md5hash\r\n    if (flags & 4) {\r\n      md5hash = [r.i(), r.i(), r.i(), r.i()]\r\n    }\r\n\r\n    return {\r\n      playerIndex,\r\n      type,\r\n      name,\r\n      index,\r\n      downloadSize,\r\n      flags,\r\n      md5hash\r\n    }\r\n  }\r\n\r\n  static crosshairAngle(r: Reader) {\r\n    return {\r\n      pitch: r.b(),\r\n      yaw: r.b()\r\n    }\r\n  }\r\n\r\n  static soundFade(r: Reader) {\r\n    return {\r\n      initialPercent: r.ub(),\r\n      holdTime: r.ub(),\r\n      fadeOutTime: r.ub(),\r\n      fadeInTime: r.ub()\r\n    }\r\n  }\r\n\r\n  static fileTxferFailed(r: Reader) {\r\n    return {\r\n      filename: r.str()\r\n    }\r\n  }\r\n\r\n  static hltv(r: Reader) {\r\n    return {\r\n      mode: r.ub()\r\n    }\r\n  }\r\n\r\n  static director(r: Reader) {\r\n    let length = r.ub()\r\n    return {\r\n      flag: r.ub(),\r\n      message: r.nstr(length - 1)\r\n    }\r\n  }\r\n\r\n  static voiceInit(r: Reader) {\r\n    return {\r\n      codecName: r.str(),\r\n      quality: r.b()\r\n    }\r\n  }\r\n\r\n  static voiceData(r: Reader) {\r\n    let playerIndex = r.ub()\r\n    let size = r.us()\r\n    let data = r.arrx(size, ReaderDataType.UByte)\r\n    return { playerIndex, data }\r\n  }\r\n\r\n  static sendExtraInfo(r: Reader) {\r\n    return {\r\n      fallbackDir: r.str(),\r\n      canCheat: r.ub()\r\n    }\r\n  }\r\n\r\n  static timeScale(r: Reader) {\r\n    return {\r\n      timeScale: r.f()\r\n    }\r\n  }\r\n\r\n  static resourceLocation(r: Reader) {\r\n    return {\r\n      url: r.str()\r\n    }\r\n  }\r\n\r\n  static sendCvarValue(r: Reader) {\r\n    // deprecated\r\n    return {\r\n      name: r.str()\r\n    }\r\n  }\r\n\r\n  static sendCvarValue2(r: Reader) {\r\n    return {\r\n      requestId: r.ui(),\r\n      name: r.str()\r\n    }\r\n  }\r\n\r\n  static read(r: Reader, type: number, deltaDecoders: DeltaDecoderTable) {\r\n    if (type === 0) {\r\n      // SVC_BAD shouldn't happen\r\n      return null\r\n    }\r\n\r\n    const handler = FrameDataReader.handlers[type]\r\n    if (handler) {\r\n      return handler(r, deltaDecoders)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // prettier-ignore\r\n  static readonly handlers: FrameDataHandler[] = [\r\n    FrameDataReader.bad,                 // SVC_BAD                      0\r\n    FrameDataReader.nop,                 // SVC_NOP                      1\r\n    FrameDataReader.disconnect,          // SVC_DISCONNECT               2\r\n    FrameDataReader.event,               // SVC_EVENT                    3\r\n    FrameDataReader.version,             // SVC_VERSION                  4\r\n    FrameDataReader.setView,             // SVC_SETVIEW                  5\r\n    FrameDataReader.sound,               // SVC_SOUND                    6\r\n    FrameDataReader.time,                // SVC_TIME                     7\r\n    FrameDataReader.print,               // SVC_PRINT                    8\r\n    FrameDataReader.stuffText,           // SVC_STUFFTEXT                9\r\n    FrameDataReader.setAngle,            // SVC_SETANGLE                10\r\n    FrameDataReader.serverInfo,          // SVC_SERVERINFO              11\r\n    FrameDataReader.lightStyle,          // SVC_LIGHTSTYLE              12\r\n    FrameDataReader.updateUserInfo,      // SVC_UPDATEUSERINFO          13\r\n    FrameDataReader.deltaDescription,    // SVC_DELTADESCRIPTION        14\r\n    FrameDataReader.clientData,          // SVC_CLIENTDATA              15\r\n    FrameDataReader.stopSound,           // SVC_STOPSOUND               16\r\n    FrameDataReader.pings,               // SVC_PINGS                   17\r\n    FrameDataReader.particle,            // SVC_PARTICLE                18\r\n    FrameDataReader.damage,              // SVC_DAMAGE                  19\r\n    FrameDataReader.spawnStatic,         // SVC_SPAWNSTATIC             20\r\n    FrameDataReader.eventReliable,       // SVC_EVENT_RELIABLE          21\r\n    FrameDataReader.spawnBaseLine,       // SVC_SPAWNBASELINE           22\r\n    FrameDataReader.tempEntity,          // SVC_TEMPENTITY              23\r\n    FrameDataReader.setPause,            // SVC_SETPAUSE                24\r\n    FrameDataReader.signOnNum,           // SVC_SIGNONNUM               25\r\n    FrameDataReader.centerPrint,         // SVC_CENTERPRINT             26\r\n    FrameDataReader.killedMonster,       // SVC_KILLEDMONSTER           27\r\n    FrameDataReader.foundSecret,         // SVC_FOUNDSECRET             28\r\n    FrameDataReader.spawnStaticSound,    // SVC_SPAWNSTATICSOUND        29\r\n    FrameDataReader.intermission,        // SVC_INTERMISSION            30\r\n    FrameDataReader.finale,              // SVC_FINALE                  31\r\n    FrameDataReader.cdTrack,             // SVC_CDTRACK                 32\r\n    FrameDataReader.restore,             // SVC_RESTORE                 33\r\n    FrameDataReader.cutscene,            // SVC_CUTSCENE                34\r\n    FrameDataReader.weaponAnim,          // SVC_WEAPONANIM              35\r\n    FrameDataReader.decalName,           // SVC_DECALNAME               36\r\n    FrameDataReader.roomType,            // SVC_ROOMTYPE                37\r\n    FrameDataReader.addAngle,            // SVC_ADDANGLE                38\r\n    FrameDataReader.newUserMsg,          // SVC_NEWUSERMSG              39\r\n    FrameDataReader.packetEntities,      // SVC_PACKETENTITIES          40\r\n    FrameDataReader.deltaPacketEntities, // SVC_DELTAPACKETENTITIES     41\r\n    FrameDataReader.choke,               // SVC_CHOKE                   42\r\n    FrameDataReader.resourceList,        // SVC_RESOURCELIST            43\r\n    FrameDataReader.newMoveVars,         // SVC_NEWMOVEVARS             44\r\n    FrameDataReader.resourceRequest,     // SVC_RESOURCEREQUEST         45\r\n    FrameDataReader.customization,       // SVC_CUSTOMIZATION           46\r\n    FrameDataReader.crosshairAngle,      // SVC_CROSSHAIRANGLE          47\r\n    FrameDataReader.soundFade,           // SVC_SOUNDFADE               48\r\n    FrameDataReader.fileTxferFailed,     // SVC_FILETXFERFAILED         49\r\n    FrameDataReader.hltv,                // SVC_HLTV                    50\r\n    FrameDataReader.director,            // SVC_DIRECTOR                51\r\n    FrameDataReader.voiceInit,           // SVC_VOICEINIT               52\r\n    FrameDataReader.voiceData,           // SVC_VOICEDATA               53\r\n    FrameDataReader.sendExtraInfo,       // SVC_SENDEXTRAINFO           54\r\n    FrameDataReader.timeScale,           // SVC_TIMESCALE               55\r\n    FrameDataReader.resourceLocation,    // SVC_RESOURCELOCATION        56\r\n    FrameDataReader.sendCvarValue,       // SVC_SENDCVARVALUE           57\r\n    FrameDataReader.sendCvarValue2       // SVC_SENDCVARVALUE2          58\r\n  ]\r\n}\r\n\r\nexport namespace FrameDataReader {\r\n  export enum SVC {\r\n    BAD = 0,\r\n    NOP = 1,\r\n    DISCONNECT = 2,\r\n    EVENT = 3,\r\n    VERSION = 4,\r\n    SETVIEW = 5,\r\n    SOUND = 6,\r\n    TIME = 7,\r\n    PRINT = 8,\r\n    STUFFTEXT = 9,\r\n    SETANGLE = 10,\r\n    SERVERINFO = 11,\r\n    LIGHTSTYLE = 12,\r\n    UPDATEUSERINFO = 13,\r\n    DELTADESCRIPTION = 14,\r\n    CLIENTDATA = 15,\r\n    STOPSOUND = 16,\r\n    PINGS = 17,\r\n    PARTICLE = 18,\r\n    DAMAGE = 19,\r\n    SPAWNSTATIC = 20,\r\n    EVENT_RELIABLE = 21,\r\n    SPAWNBASELINE = 22,\r\n    TEMPENTITY = 23,\r\n    SETPAUSE = 24,\r\n    SIGNONNUM = 25,\r\n    CENTERPRINT = 26,\r\n    KILLEDMONSTER = 27,\r\n    FOUNDSECRET = 28,\r\n    SPAWNSTATICSOUND = 29,\r\n    INTERMISSION = 30,\r\n    FINALE = 31,\r\n    CDTRACK = 32,\r\n    RESTORE = 33,\r\n    CUTSCENE = 34,\r\n    WEAPONANIM = 35,\r\n    DECALNAME = 36,\r\n    ROOMTYPE = 37,\r\n    ADDANGLE = 38,\r\n    NEWUSERMSG = 39,\r\n    PACKETENTITIES = 40,\r\n    DELTAPACKETENTITIES = 41,\r\n    CHOKE = 42,\r\n    RESOURCELIST = 43,\r\n    NEWMOVEVARS = 44,\r\n    RESOURCEREQUEST = 45,\r\n    CUSTOMIZATION = 46,\r\n    CROSSHAIRANGLE = 47,\r\n    SOUNDFADE = 48,\r\n    FILETXFERFAILED = 49,\r\n    HLTV = 50,\r\n    DIRECTOR = 51,\r\n    VOICEINIT = 52,\r\n    VOICEDATA = 53,\r\n    SENDEXTRAINFO = 54,\r\n    TIMESCALE = 55,\r\n    RESOURCELOCATION = 56,\r\n    SENDCVARVALUE = 57,\r\n    SENDCVARVALUE2 = 58\r\n  }\r\n}\r\n","import { BitStream } from '../BitReader'\r\n\r\nexport function readCoord(bs: BitStream) {\r\n  let intFlag = bs.readBits(1)\r\n  let fractionFlag = bs.readBits(1)\r\n\r\n  if (!intFlag && !fractionFlag) {\r\n    return 0\r\n  }\r\n\r\n  let sign = bs.readBits(1)\r\n  let intValue = 0\r\n  let fractionValue = 0\r\n  if (intFlag) {\r\n    intValue = bs.readBits(12)\r\n  }\r\n  if (fractionFlag) {\r\n    fractionValue = bs.readBits(3)\r\n  }\r\n\r\n  let value = intValue + fractionValue / 32\r\n  if (sign) {\r\n    value = -value\r\n  }\r\n\r\n  return value\r\n}\r\n","export enum DeltaType {\r\n  DT_BYTE = 1,\r\n  DT_SHORT = 1 << 1,\r\n  DT_FLOAT = 1 << 2,\r\n  DT_INTEGER = 1 << 3,\r\n  DT_ANGLE = 1 << 4,\r\n  DT_TIMEWINDOW_8 = 1 << 5,\r\n  DT_TIMEWINDOW_BIG = 1 << 6,\r\n  DT_STRING = 1 << 7,\r\n  DT_SIGNED = 1 << 31\r\n}\r\n","export class BitView {\r\n  static scratch = new DataView(new ArrayBuffer(8))\r\n\r\n  private view: Uint8Array\r\n\r\n  constructor(buffer: ArrayBuffer) {\r\n    this.view = new Uint8Array(buffer, 0, buffer.byteLength)\r\n  }\r\n\r\n  getBits(offset: number, bits: number, signed = false) {\r\n    const available = this.view.length * 8 - offset\r\n\r\n    if (bits > available) {\r\n      throw new Error('Bits out of bounds')\r\n    }\r\n\r\n    let value = 0\r\n    for (let i = 0; i < bits; ) {\r\n      const remaining = bits - i\r\n      const bitOffset = offset & 7\r\n      const currentByte = this.view[offset >> 3]\r\n\r\n      // the max number of bits we can read from the current byte\r\n      const read = Math.min(remaining, 8 - bitOffset)\r\n\r\n      // create a mask with the correct bit width\r\n      const mask = (1 << read) - 1\r\n      // shift bits we want to the start of the byte and mask of the rest\r\n      const readBits = (currentByte >> bitOffset) & mask\r\n      value |= readBits << i\r\n\r\n      offset += read\r\n      i += read\r\n    }\r\n\r\n    if (signed) {\r\n      // If we're not working with a full 32 bits, check the\r\n      // imaginary MSB for this bit count and convert to a\r\n      // valid 32-bit signed value if set.\r\n      if (bits !== 32 && value & (1 << (bits - 1))) {\r\n        value |= -1 ^ ((1 << bits) - 1)\r\n      }\r\n\r\n      return value\r\n    }\r\n\r\n    return value >>> 0\r\n  }\r\n\r\n  getInt8(offset: number) {\r\n    return this.getBits(offset, 8, true)\r\n  }\r\n\r\n  getUint8(offset: number) {\r\n    return this.getBits(offset, 8, false)\r\n  }\r\n\r\n  getInt16(offset: number) {\r\n    return this.getBits(offset, 16, true)\r\n  }\r\n\r\n  getUint16(offset: number) {\r\n    return this.getBits(offset, 16, false)\r\n  }\r\n\r\n  getInt32(offset: number) {\r\n    return this.getBits(offset, 32, true)\r\n  }\r\n\r\n  getUint32(offset: number) {\r\n    return this.getBits(offset, 32, false)\r\n  }\r\n\r\n  getFloat32(offset: number) {\r\n    BitView.scratch.setUint32(0, this.getUint32(offset))\r\n    return BitView.scratch.getFloat32(0)\r\n  }\r\n\r\n  getFloat64(offset: number) {\r\n    BitView.scratch.setUint32(0, this.getUint32(offset))\r\n    // DataView offset is in bytes.\r\n    BitView.scratch.setUint32(4, this.getUint32(offset + 32))\r\n    return BitView.scratch.getFloat64(0)\r\n  }\r\n}\r\n\r\nexport class BitStream {\r\n  private view: BitView\r\n  index: number\r\n\r\n  constructor(source: ArrayBuffer) {\r\n    this.view = new BitView(source)\r\n    this.index = 0\r\n  }\r\n\r\n  readBits(bits: number, signed = false) {\r\n    const val = this.view.getBits(this.index, bits, signed)\r\n    this.index += bits\r\n    return val\r\n  }\r\n\r\n  readInt8() {\r\n    const val = this.view.getInt8(this.index)\r\n    this.index += 8\r\n    return val\r\n  }\r\n\r\n  readUint8() {\r\n    const val = this.view.getUint8(this.index)\r\n    this.index += 8\r\n    return val\r\n  }\r\n\r\n  readInt16() {\r\n    const val = this.view.getInt16(this.index)\r\n    this.index += 16\r\n    return val\r\n  }\r\n\r\n  readUint16() {\r\n    const val = this.view.getUint16(this.index)\r\n    this.index += 16\r\n    return val\r\n  }\r\n\r\n  readInt32() {\r\n    const val = this.view.getInt32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readUint32() {\r\n    const val = this.view.getUint32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readFloat32() {\r\n    const val = this.view.getFloat32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readFloat64() {\r\n    const val = this.view.getFloat64(this.index)\r\n    this.index += 64\r\n    return val\r\n  }\r\n\r\n  readString(bytes = 0, utf8 = false) {\r\n    let i = 0\r\n    const chars = []\r\n    let append = true\r\n\r\n    // Read while we still have space available, or until we've\r\n    // hit the fixed byte length passed in.\r\n    while (!bytes || (bytes && i < bytes)) {\r\n      const c = this.readUint8()\r\n\r\n      // Stop appending chars once we hit 0x00\r\n      if (c === 0x00) {\r\n        append = false\r\n\r\n        // If we don't have a fixed length to read, break out now.\r\n        if (!bytes) {\r\n          break\r\n        }\r\n      }\r\n      if (append) {\r\n        chars.push(c)\r\n      }\r\n\r\n      i++\r\n    }\r\n\r\n    const string = String.fromCharCode.apply(null, chars)\r\n    if (utf8) {\r\n      try {\r\n        // https://stackoverflow.com/a/17192845\r\n        return decodeURIComponent(string)\r\n      } catch (e) {\r\n        return string\r\n      }\r\n    } else {\r\n      return string\r\n    }\r\n  }\r\n}\r\n\r\n","export interface ProgressCallback {\r\n  (request: XMLHttpRequest, progress: number): void\r\n}\r\n\r\nexport interface XhrParams {\r\n  method: string\r\n  isBinary: boolean\r\n  progressCallback: ProgressCallback\r\n}\r\n\r\nexport function xhr(url: string, params: XhrParams): Promise<any> {\r\n  let method = params.method || 'GET'\r\n  let isBinary = params.isBinary\r\n  let progressCallback = params.progressCallback\r\n\r\n  if (!url) {\r\n    throw new Error('Url parameter missing')\r\n  }\r\n\r\n  return new Promise<string>((resolve, reject) => {\r\n    let request = new XMLHttpRequest()\r\n\r\n    if (isBinary) {\r\n      request.responseType = 'arraybuffer'\r\n    }\r\n\r\n    if (isBinary && progressCallback) {\r\n      request.addEventListener('progress', event => {\r\n        if (event.lengthComputable) {\r\n          progressCallback(request, event.loaded / event.total)\r\n        } else {\r\n          // HACK!\r\n          let totalStr = request.getResponseHeader('content-length')\r\n          let total = 0\r\n          if (totalStr) {\r\n            total = parseFloat(totalStr)\r\n          }\r\n          let encoding = request.getResponseHeader('content-encoding')\r\n          if (total && encoding && encoding.indexOf('gzip') > -1) {\r\n            // assuming average gzip compression ratio to be 25%\r\n            total *= 4\r\n            let loadedPercent = Math.min(0.99, event.loaded / total)\r\n            progressCallback(request, loadedPercent)\r\n            // END OF HACK\r\n          } else {\r\n            progressCallback(request, 0)\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    request.addEventListener('readystatechange', (event: any) => {\r\n      if (event.target.readyState !== 4) {\r\n        return\r\n      }\r\n\r\n      if (event.target.status === 200) {\r\n        if (progressCallback) {\r\n          progressCallback(request, 1)\r\n        }\r\n\r\n        resolve(event.target.response)\r\n      } else {\r\n        reject({\r\n          status: event.target.status\r\n        })\r\n      }\r\n    })\r\n\r\n    request.open(method, url, true)\r\n    request.send()\r\n  })\r\n}\r\n","import { basename } from '../Util'\r\nimport { vdf } from '../Parsers/Vdf'\r\nimport { BspTexture, Bsp } from '../Bsp'\r\nimport { Reader, ReaderDataType } from '../Reader'\r\nimport { BspLightmapParser } from '../Parsers/BspLightmapParser'\r\nimport { paletteWithLastTransToRGBA, paletteToRGBA } from './Util'\r\n\r\nexport function parseModels(\r\n  models: BspLumpModel[],\r\n  faces: BspLumpFace[],\r\n  edges: BspLumpEdge[],\r\n  surfEdges: BspLumpSurfedge[],\r\n  vertices: BspLumpVertex[],\r\n  texinfo: BspLumpTexInfo[],\r\n  textures: BspTexture[],\r\n  lightmap: BspLightmapParser\r\n) {\r\n  const parsedModels = []\r\n\r\n  for (let i = 0; i < models.length; ++i) {\r\n    const model = models[i]\r\n\r\n    const _faces: {\r\n      buffer: Float32Array\r\n      textureIndex: number\r\n    }[] = []\r\n\r\n    const v0 = new Float32Array(3)\r\n    const v1 = new Float32Array(3)\r\n    const v2 = new Float32Array(3)\r\n    const uv0 = new Float32Array(2)\r\n    const uv1 = new Float32Array(2)\r\n    const uv2 = new Float32Array(2)\r\n    const luv0 = new Float32Array(2)\r\n    const luv1 = new Float32Array(2)\r\n    const luv2 = new Float32Array(2)\r\n\r\n    let origin =\r\n      i === 0\r\n        ? [0, 0, 0]\r\n        : [0, 0, 0].map(\r\n            (_, i) => (model.maxs[i] - model.mins[i]) / 2 + model.mins[i]\r\n          )\r\n\r\n    for (let i = model.firstFace; i < model.firstFace + model.faceCount; ++i) {\r\n      const faceData = {\r\n        // 3 floats vertices | 2 floats uvs | 2 floats luvs\r\n        buffer: new Float32Array((faces[i].edgeCount - 2) * 21),\r\n        textureIndex: -1\r\n      }\r\n\r\n      const faceTexInfo = texinfo[faces[i].textureInfo]\r\n      const faceTexture = textures[faceTexInfo.textureIndex]\r\n      const faceSurfEdges = surfEdges.slice(\r\n        faces[i].firstEdge,\r\n        faces[i].firstEdge + faces[i].edgeCount\r\n      )\r\n\r\n      const v0idx =\r\n        edges[Math.abs(faceSurfEdges[0])][faceSurfEdges[0] > 0 ? 0 : 1]\r\n      v0[0] = vertices[v0idx][0]\r\n      v0[1] = vertices[v0idx][1]\r\n      v0[2] = vertices[v0idx][2]\r\n\r\n      uv0[0] =\r\n        v0[0] * faceTexInfo.s[0] +\r\n        v0[1] * faceTexInfo.s[1] +\r\n        v0[2] * faceTexInfo.s[2] +\r\n        faceTexInfo.sShift\r\n      uv0[1] =\r\n        v0[0] * faceTexInfo.t[0] +\r\n        v0[1] * faceTexInfo.t[1] +\r\n        v0[2] * faceTexInfo.t[2] +\r\n        faceTexInfo.tShift\r\n\r\n      luv0[0] = 0\r\n      luv0[1] = 0\r\n\r\n      const v1idx =\r\n        edges[Math.abs(faceSurfEdges[1])][faceSurfEdges[1] > 0 ? 0 : 1]\r\n      v1[0] = vertices[v1idx][0]\r\n      v1[1] = vertices[v1idx][1]\r\n      v1[2] = vertices[v1idx][2]\r\n\r\n      uv1[0] =\r\n        v1[0] * faceTexInfo.s[0] +\r\n        v1[1] * faceTexInfo.s[1] +\r\n        v1[2] * faceTexInfo.s[2] +\r\n        faceTexInfo.sShift\r\n      uv1[1] =\r\n        v1[0] * faceTexInfo.t[0] +\r\n        v1[1] * faceTexInfo.t[1] +\r\n        v1[2] * faceTexInfo.t[2] +\r\n        faceTexInfo.tShift\r\n      luv1[0] = 0\r\n      luv1[1] = 0.999\r\n\r\n      let compIndex = 0\r\n      for (let j = 2; j < faces[i].edgeCount; ++j) {\r\n        const v2idx =\r\n          edges[Math.abs(faceSurfEdges[j])][faceSurfEdges[j] > 0 ? 0 : 1]\r\n        v2[0] = vertices[v2idx][0]\r\n        v2[1] = vertices[v2idx][1]\r\n        v2[2] = vertices[v2idx][2]\r\n        uv2[0] =\r\n          v2[0] * faceTexInfo.s[0] +\r\n          v2[1] * faceTexInfo.s[1] +\r\n          v2[2] * faceTexInfo.s[2] +\r\n          faceTexInfo.sShift\r\n        uv2[1] =\r\n          v2[0] * faceTexInfo.t[0] +\r\n          v2[1] * faceTexInfo.t[1] +\r\n          v2[2] * faceTexInfo.t[2] +\r\n          faceTexInfo.tShift\r\n        luv2[0] = 0.999\r\n        luv2[1] = 0.999\r\n\r\n        // vert1: coord, uv and luv\r\n        faceData.buffer[compIndex++] = v0[0]\r\n        faceData.buffer[compIndex++] = v0[1]\r\n        faceData.buffer[compIndex++] = v0[2]\r\n        faceData.buffer[compIndex++] = uv0[0]\r\n        faceData.buffer[compIndex++] = uv0[1]\r\n        faceData.buffer[compIndex++] = luv0[0]\r\n        faceData.buffer[compIndex++] = luv0[1]\r\n\r\n        // vert2\r\n        faceData.buffer[compIndex++] = v1[0]\r\n        faceData.buffer[compIndex++] = v1[1]\r\n        faceData.buffer[compIndex++] = v1[2]\r\n        faceData.buffer[compIndex++] = uv1[0]\r\n        faceData.buffer[compIndex++] = uv1[1]\r\n        faceData.buffer[compIndex++] = luv1[0]\r\n        faceData.buffer[compIndex++] = luv1[1]\r\n\r\n        // vert2\r\n        faceData.buffer[compIndex++] = v2[0]\r\n        faceData.buffer[compIndex++] = v2[1]\r\n        faceData.buffer[compIndex++] = v2[2]\r\n        faceData.buffer[compIndex++] = uv2[0]\r\n        faceData.buffer[compIndex++] = uv2[1]\r\n        faceData.buffer[compIndex++] = luv2[0]\r\n        faceData.buffer[compIndex++] = luv2[1]\r\n\r\n        v1[0] = v2[0]\r\n        v1[1] = v2[1]\r\n        v1[2] = v2[2]\r\n        uv1[0] = uv2[0]\r\n        uv1[1] = uv2[1]\r\n        luv1[0] = luv2[0]\r\n        luv1[1] = luv2[1]\r\n      }\r\n\r\n      // face has a lightmap if flag is equal to 0\r\n      if (faceTexInfo.flags === 0 || faceTexInfo.flags === -65536) {\r\n        lightmap.processFace(\r\n          faceData.buffer,\r\n          faceTexInfo,\r\n          faces[i].lightmapOffset\r\n        )\r\n      }\r\n\r\n      faceData.textureIndex = faceTexInfo.textureIndex\r\n\r\n      for (let j = 0; j < faceData.buffer.length / 7; ++j) {\r\n        faceData.buffer[j * 7] -= origin[0]\r\n        faceData.buffer[j * 7 + 1] -= origin[1]\r\n        faceData.buffer[j * 7 + 2] -= origin[2]\r\n        faceData.buffer[j * 7 + 3] /= faceTexture.width\r\n        faceData.buffer[j * 7 + 4] /= faceTexture.height\r\n      }\r\n\r\n      _faces.push(faceData)\r\n    }\r\n\r\n    parsedModels.push({\r\n      origin,\r\n      faces: _faces\r\n    })\r\n  }\r\n\r\n  return parsedModels\r\n}\r\n\r\nexport enum BspLumpIndex {\r\n  Entities = 0,\r\n  Planes = 1,\r\n  Textures = 2,\r\n  Vertices = 3,\r\n  Visibility = 4,\r\n  Nodes = 5,\r\n  TexInfo = 6,\r\n  Faces = 7,\r\n  Lighting = 8,\r\n  ClipNodes = 9,\r\n  Leaves = 10,\r\n  MarkSurfaces = 11,\r\n  Edges = 12,\r\n  SurfEdges = 13,\r\n  Models = 14\r\n}\r\n\r\nexport interface BspLump {\r\n  offset: number\r\n  length: number\r\n}\r\n\r\nexport interface BspLumpFace {\r\n  plane: number\r\n  planeSide: number\r\n  firstEdge: number\r\n  edgeCount: number\r\n  textureInfo: number\r\n  styles: number[]\r\n  lightmapOffset: number\r\n}\r\n\r\nexport interface BspLumpModel {\r\n  mins: number[]\r\n  maxs: number[]\r\n  origin: number[]\r\n  headNodes: number[]\r\n  visLeaves: number\r\n  firstFace: number\r\n  faceCount: number\r\n}\r\n\r\nexport type BspLumpEdge = number[]\r\n\r\nexport type BspLumpSurfedge = number\r\n\r\nexport type BspLumpVertex = number[]\r\n\r\nexport interface BspLumpTexInfo {\r\n  s: number[]\r\n  sShift: number\r\n  t: number[]\r\n  tShift: number\r\n  textureIndex: number\r\n  flags: number\r\n}\r\n\r\nexport type BspLumpLightmap = Uint8Array\r\n\r\nexport class BspParser {\r\n  static parse(name: string, buffer: ArrayBuffer): Bsp {\r\n    const r = new Reader(buffer)\r\n    const version = r.ui()\r\n    if (version !== 30) {\r\n      throw new Error('Invalid map version')\r\n    }\r\n\r\n    const lumps: BspLump[] = []\r\n    for (let i = 0; i < 15; ++i) {\r\n      lumps.push({\r\n        offset: r.ui(),\r\n        length: r.ui()\r\n      })\r\n    }\r\n\r\n    const entities = this.loadEntities(\r\n      r,\r\n      lumps[BspLumpIndex.Entities].offset,\r\n      lumps[BspLumpIndex.Entities].length\r\n    )\r\n\r\n    const textures = this.loadTextures(r, lumps[BspLumpIndex.Textures].offset)\r\n\r\n    const models = this.loadModels(\r\n      r,\r\n      lumps[BspLumpIndex.Models].offset,\r\n      lumps[BspLumpIndex.Models].length\r\n    )\r\n\r\n    const faces = this.loadFaces(\r\n      r,\r\n      lumps[BspLumpIndex.Faces].offset,\r\n      lumps[BspLumpIndex.Faces].length\r\n    )\r\n\r\n    const edges = this.loadEdges(\r\n      r,\r\n      lumps[BspLumpIndex.Edges].offset,\r\n      lumps[BspLumpIndex.Edges].length\r\n    )\r\n\r\n    const surfEdges = this.loadSurfEdges(\r\n      r,\r\n      lumps[BspLumpIndex.SurfEdges].offset,\r\n      lumps[BspLumpIndex.SurfEdges].length\r\n    )\r\n\r\n    const vertices = this.loadVertices(\r\n      r,\r\n      lumps[BspLumpIndex.Vertices].offset,\r\n      lumps[BspLumpIndex.Vertices].length\r\n    )\r\n\r\n    const texinfo = this.loadTexInfo(\r\n      r,\r\n      lumps[BspLumpIndex.TexInfo].offset,\r\n      lumps[BspLumpIndex.TexInfo].length\r\n    )\r\n\r\n    const lightmap = this.loadLightmap(\r\n      r,\r\n      lumps[BspLumpIndex.Lighting].offset,\r\n      lumps[BspLumpIndex.Lighting].length\r\n    )\r\n\r\n    const parsedLightmap = BspLightmapParser.init(lightmap)\r\n\r\n    const parsedModels = parseModels(\r\n      models,\r\n      faces,\r\n      edges,\r\n      surfEdges,\r\n      vertices,\r\n      texinfo,\r\n      textures,\r\n      parsedLightmap\r\n    )\r\n\r\n    return new Bsp(name, entities, textures, parsedModels, {\r\n      width: BspLightmapParser.TEXTURE_SIZE,\r\n      height: BspLightmapParser.TEXTURE_SIZE,\r\n      data: parsedLightmap.getTexture()\r\n    })\r\n  }\r\n\r\n  private static loadFaces(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpFace[] {\r\n    r.seek(offset)\r\n\r\n    const faces = []\r\n    for (let i = 0; i < length / 20; ++i) {\r\n      faces.push({\r\n        plane: r.us(),\r\n        planeSide: r.us(),\r\n        firstEdge: r.ui(),\r\n        edgeCount: r.us(),\r\n        textureInfo: r.us(),\r\n        styles: [r.ub(), r.ub(), r.ub(), r.ub()],\r\n        lightmapOffset: r.ui()\r\n      })\r\n    }\r\n    return faces\r\n  }\r\n\r\n  private static loadModels(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpModel[] {\r\n    r.seek(offset)\r\n\r\n    const models = []\r\n    for (let i = 0; i < length / 64; ++i) {\r\n      models.push({\r\n        mins: [r.f(), r.f(), r.f()],\r\n        maxs: [r.f(), r.f(), r.f()],\r\n        origin: [r.f(), r.f(), r.f()],\r\n        headNodes: [r.i(), r.i(), r.i(), r.i()],\r\n        visLeaves: r.i(),\r\n        firstFace: r.i(),\r\n        faceCount: r.i()\r\n      })\r\n    }\r\n    return models\r\n  }\r\n\r\n  private static loadEdges(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpEdge[] {\r\n    r.seek(offset)\r\n\r\n    const edges = []\r\n    for (let i = 0; i < length / 4; ++i) {\r\n      edges.push([r.us(), r.us()])\r\n    }\r\n    return edges\r\n  }\r\n\r\n  private static loadSurfEdges(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpSurfedge[] {\r\n    r.seek(offset)\r\n\r\n    const surfEdges = []\r\n    for (let i = 0; i < length / 4; ++i) {\r\n      surfEdges.push(r.i())\r\n    }\r\n    return surfEdges\r\n  }\r\n\r\n  private static loadVertices(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpVertex[] {\r\n    r.seek(offset)\r\n\r\n    const vertices = []\r\n    for (let i = 0; i < length / 12; ++i) {\r\n      vertices.push([r.f(), r.f(), r.f()])\r\n    }\r\n    return vertices\r\n  }\r\n\r\n  private static loadTexInfo(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpTexInfo[] {\r\n    r.seek(offset)\r\n\r\n    const texinfo: BspLumpTexInfo[] = []\r\n    for (let i = 0; i < length / 40; ++i) {\r\n      texinfo.push({\r\n        s: [r.f(), r.f(), r.f()],\r\n        sShift: r.f(),\r\n        t: [r.f(), r.f(), r.f()],\r\n        tShift: r.f(),\r\n        textureIndex: r.i(),\r\n        flags: r.i()\r\n      })\r\n    }\r\n    return texinfo\r\n  }\r\n\r\n  private static loadLightmap(\r\n    r: Reader,\r\n    offset: number,\r\n    length: number\r\n  ): BspLumpLightmap {\r\n    r.seek(offset)\r\n    return r.arrx(length, ReaderDataType.UByte)\r\n  }\r\n\r\n  private static loadTextureData(r: Reader) {\r\n    const name = r.nstr(16)\r\n    const width = r.ui()\r\n    const height = r.ui()\r\n\r\n    const isExternal = !r.ui() // if mipmap offset == 0\r\n    if (isExternal) {\r\n      const data = new Uint8Array(4)\r\n      data[0] = data[1] = data[2] = data[3] = 255\r\n\r\n      return { name, width, height, data, isExternal }\r\n    } else {\r\n      r.skip(3 * 4) // skip mipmap offsets\r\n\r\n      // read largest mipmap data\r\n      const pixelCount = width * height\r\n      const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n      // skip other 3 mipmaps\r\n      r.skip(21 * (pixelCount / 64))\r\n\r\n      r.skip(2) // skip padding bytes\r\n\r\n      const palette = r.arrx(768, ReaderDataType.UByte)\r\n\r\n      const data =\r\n        name[0] === '{'\r\n          ? paletteWithLastTransToRGBA(pixels, palette)\r\n          : paletteToRGBA(pixels, palette)\r\n\r\n      return { name, width, height, data, isExternal }\r\n    }\r\n  }\r\n\r\n  private static loadTextures(r: Reader, offset: number) {\r\n    r.seek(offset)\r\n\r\n    const count = r.ui()\r\n    const offsets = []\r\n    for (let i = 0; i < count; ++i) {\r\n      offsets.push(r.ui())\r\n    }\r\n\r\n    const textures: BspTexture[] = []\r\n    for (let i = 0; i < count; ++i) {\r\n      if (offsets[i] === 0xffffffff) {\r\n        textures.push({\r\n          name: 'ERROR404',\r\n          width: 1,\r\n          height: 1,\r\n          data: new Uint8Array([0, 255, 0, 255]),\r\n          isExternal: false\r\n        })\r\n      } else {\r\n        r.seek(offset + offsets[i])\r\n        textures.push(this.loadTextureData(r))\r\n      }\r\n    }\r\n\r\n    return textures\r\n  }\r\n\r\n  private static loadEntities(r: Reader, offset: number, length: number) {\r\n    r.seek(offset)\r\n    const entities: any[] = vdf(r.nstr(length)) as any\r\n\r\n    const VECTOR_ATTRS = [\r\n      'origin',\r\n      'angles',\r\n      '_diffuse_light',\r\n      '_light',\r\n      'rendercolor',\r\n      'avelocity'\r\n    ]\r\n    const NUMBER_ATTRS = ['renderamt', 'rendermode', 'scale']\r\n\r\n    const worldSpawn = entities[0]\r\n    if (worldSpawn.classname === 'worldspawn') {\r\n      worldSpawn.model = '*0'\r\n      worldSpawn.wad = worldSpawn.wad || ''\r\n      worldSpawn.wad = worldSpawn.wad\r\n        .split(';')\r\n        .filter((w: string) => w.length)\r\n        .map((w: string) => w.replace(/\\\\/g, '/'))\r\n        .map((w: string) => basename(w))\r\n    }\r\n\r\n    entities.forEach(e => {\r\n      if (e.model) {\r\n        if (typeof e.renderamt === 'undefined') {\r\n          e.renderamt = 0\r\n        }\r\n\r\n        if (typeof e.rendermode === 'undefined') {\r\n          e.rendermode = 0\r\n        }\r\n\r\n        if (typeof e.renderfx === 'undefined') {\r\n          e.renderfx = 0\r\n        }\r\n\r\n        if (typeof e.rendercolor === 'undefined') {\r\n          e.rendercolor = '0 0 0'\r\n        }\r\n      }\r\n\r\n      VECTOR_ATTRS.forEach(attr => {\r\n        if (e[attr]) {\r\n          e[attr] = e[attr].split(' ').map((v: string) => Number.parseFloat(v))\r\n        }\r\n      })\r\n\r\n      NUMBER_ATTRS.forEach(attr => {\r\n        if (e[attr]) {\r\n          e[attr] = Number.parseFloat(e[attr])\r\n        }\r\n      })\r\n    })\r\n\r\n    return entities\r\n  }\r\n}\r\n","export function vdf(input: string): {[name: string]: any}[] {\r\n  let state = 0\r\n  let key: string = ''\r\n  let val: string = ''\r\n  const objects: any[] = []\r\n\r\n  for (let i = 0; i < input.length; ++i) {\r\n    const c = input[i]\r\n\r\n    switch (state) {\r\n      case 0: {\r\n        // ROOT\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        } else if (c === '{') {\r\n          objects.push({})\r\n          state = 1\r\n        } else {\r\n          return []\r\n        }\r\n        break\r\n      }\r\n\r\n      case 1: {\r\n        // OBJECT\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        } else if (c === '}') {\r\n          state = 0\r\n        } else if (c === '\"') {\r\n          key = ''\r\n          state = 2\r\n        } else {\r\n          return []\r\n        }\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        // KEY\r\n        if (c === '\"') {\r\n          state = 3\r\n        } else {\r\n          key += c\r\n        }\r\n        break\r\n      }\r\n\r\n      case 3: {\r\n        // BETWEEN KEY AND VALUE\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        } else if (c === '\"') {\r\n          val = ''\r\n          state = 4\r\n        }\r\n        break\r\n      }\r\n\r\n      case 4: {\r\n        // VALUE\r\n        if (c === '\"') {\r\n          objects[objects.length - 1][key] = val\r\n          state = 1\r\n        } else {\r\n          val += c\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  return objects\r\n}\r\n","import { Tga } from './Parsers/Tga'\r\nimport { Sprite } from './Parsers/Sprite'\r\nimport { BspLightmap } from './BspLightmap'\r\n\r\nexport interface BspTexture {\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n  isExternal: boolean\r\n}\r\n\r\nexport interface BspModel {\r\n  origin: number[]\r\n  faces: {\r\n    buffer: Float32Array\r\n    textureIndex: number\r\n  }[]\r\n}\r\n\r\nexport class Bsp {\r\n  name: string\r\n  entities: any[]\r\n  textures: BspTexture[]\r\n  models: BspModel[]\r\n  lightmap: BspLightmap\r\n  skies: Tga[] = []\r\n  sprites: { [name: string]: Sprite } = {}\r\n\r\n  constructor(\r\n    name: string,\r\n    entities: any[],\r\n    textures: BspTexture[],\r\n    models: BspModel[],\r\n    lightmap: BspLightmap\r\n  ) {\r\n    this.name = name\r\n    this.entities = entities\r\n    this.textures = textures\r\n    this.models = models\r\n    this.lightmap = lightmap\r\n  }\r\n}\r\n","export interface BspLightmapNode {\r\n  children: BspLightmapNode[]\r\n  isFilled: boolean\r\n  x: number\r\n  y: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport class BspLightmapParser {\r\n  static TEXTURE_SIZE = 1024\r\n\r\n  static init(lightmap: Uint8Array) {\r\n    return new BspLightmapParser(lightmap)\r\n  }\r\n\r\n  private lightmap: Uint8Array // entire lightmap of the bsp map\r\n  private texture: Uint8Array\r\n  private block = new Uint16Array(BspLightmapParser.TEXTURE_SIZE)\r\n\r\n  private constructor(lightmap: Uint8Array) {\r\n    this.lightmap = lightmap\r\n\r\n    this.texture = new Uint8Array(\r\n      BspLightmapParser.TEXTURE_SIZE * BspLightmapParser.TEXTURE_SIZE * 4\r\n    )\r\n    this.texture[this.texture.length - 4] = 255\r\n    this.texture[this.texture.length - 3] = 255\r\n    this.texture[this.texture.length - 2] = 255\r\n    this.texture[this.texture.length - 1] = 255\r\n  }\r\n\r\n  getTexture() {\r\n    return this.texture\r\n  }\r\n\r\n  processFace(\r\n    faceData: Float32Array,\r\n    texinfo: {\r\n      // TODO: MapTexInfo interface\r\n      s: number[]\r\n      sShift: number\r\n      t: number[]\r\n      tShift: number\r\n      textureIndex: number\r\n      flags: number\r\n    },\r\n    offset: number\r\n  ) {\r\n    const size = this.getDimensions(faceData)\r\n    const rect = this.readLightmap(offset, size.width, size.height)\r\n    if (rect) {\r\n      // Determine the correct TexCoords for the lightmap (I think this bit is bugged too)\r\n      for (let i = 0; i < faceData.length / 7; ++i) {\r\n        let lu =\r\n          faceData[i * 7] * texinfo.s[0] +\r\n          faceData[i * 7 + 1] * texinfo.s[1] +\r\n          faceData[i * 7 + 2] * texinfo.s[2] +\r\n          texinfo.sShift -\r\n          size.minU\r\n        lu += rect.x * 16 + 8\r\n        lu /= BspLightmapParser.TEXTURE_SIZE * 16\r\n\r\n        let lv =\r\n          faceData[i * 7] * texinfo.t[0] +\r\n          faceData[i * 7 + 1] * texinfo.t[1] +\r\n          faceData[i * 7 + 2] * texinfo.t[2] +\r\n          texinfo.tShift -\r\n          size.minV\r\n        lv += rect.y * 16 + 8\r\n        lv /= BspLightmapParser.TEXTURE_SIZE * 16\r\n\r\n        faceData[i * 7 + 5] = lu\r\n        faceData[i * 7 + 6] = lv\r\n      }\r\n    }\r\n  }\r\n\r\n  private getDimensions(faceData: Float32Array) {\r\n    // find the min and max UV's for a face\r\n    let minU = Math.floor(faceData[3])\r\n    let minV = Math.floor(faceData[4])\r\n    let maxU = Math.floor(faceData[3])\r\n    let maxV = Math.floor(faceData[4])\r\n\r\n    for (let i = 1; i < faceData.length / 7; ++i) {\r\n      if (Math.floor(faceData[i * 7 + 3]) < minU) {\r\n        minU = Math.floor(faceData[i * 7 + 3])\r\n      }\r\n      if (Math.floor(faceData[i * 7 + 4]) < minV) {\r\n        minV = Math.floor(faceData[i * 7 + 4])\r\n      }\r\n      if (Math.floor(faceData[i * 7 + 3]) > maxU) {\r\n        maxU = Math.floor(faceData[i * 7 + 3])\r\n      }\r\n      if (Math.floor(faceData[i * 7 + 4]) > maxV) {\r\n        maxV = Math.floor(faceData[i * 7 + 4])\r\n      }\r\n    }\r\n\r\n    // calculate the lightmap dimensions\r\n    return {\r\n      width: Math.ceil(maxU / 16) - Math.floor(minU / 16) + 1,\r\n      height: Math.ceil(maxV / 16) - Math.floor(minV / 16) + 1,\r\n      minU: Math.floor(minU),\r\n      minV: Math.floor(minV)\r\n    }\r\n  }\r\n\r\n  private readLightmap(\r\n    offset: number,\r\n    width: number,\r\n    height: number\r\n  ): {x: number, y: number} | null {\r\n    if (height <= 0 || width <= 0) {\r\n      return null\r\n    }\r\n\r\n    const block = this.findFreeSpace(width, height)\r\n\r\n    if (block) {\r\n      const o = [block.x, block.y]\r\n      const s = [width, height]\r\n      const d = [BspLightmapParser.TEXTURE_SIZE, BspLightmapParser.TEXTURE_SIZE]\r\n      const count = width * height\r\n      for (let i = 0; i < count; ++i) {\r\n        const p = o[1] * d[0] + o[0] + d[0] * Math.floor(i / s[0]) + (i % s[0])\r\n        this.texture[p * 4] = Math.min(255, this.lightmap[offset + i * 3] * 2)\r\n        this.texture[p * 4 + 1] = Math.min(\r\n          255,\r\n          this.lightmap[offset + i * 3 + 1] * 2\r\n        )\r\n        this.texture[p * 4 + 2] = Math.min(\r\n          255,\r\n          this.lightmap[offset + i * 3 + 2] * 2\r\n        )\r\n        this.texture[p * 4 + 3] = 255\r\n      }\r\n    }\r\n\r\n    return block\r\n  }\r\n\r\n  private findFreeSpace(w: number, h: number): { x: number; y: number } | null {\r\n    let x = 0\r\n    let y = 0\r\n\r\n    let bestHeight = BspLightmapParser.TEXTURE_SIZE\r\n    for (let i = 0; i < this.block.length - w; ++i) {\r\n      let tentativeHeight = 0\r\n\r\n      let j\r\n      for (j = 0; j < w; ++j) {\r\n        if (this.block[i + j] >= bestHeight) {\r\n          break\r\n        }\r\n        if (this.block[i + j] > tentativeHeight) {\r\n          tentativeHeight = this.block[i + j]\r\n        }\r\n      }\r\n\r\n      if (j === w) {\r\n        x = i\r\n        y = bestHeight = tentativeHeight\r\n      }\r\n    }\r\n\r\n    if (bestHeight + h > BspLightmapParser.TEXTURE_SIZE) {\r\n      return null\r\n    }\r\n\r\n    for (let i = 0; i < w; ++i) {\r\n      this.block[x + i] = bestHeight + h\r\n    }\r\n\r\n    return { x, y }\r\n  }\r\n}\r\n","import { vec2 } from 'gl-matrix'\r\n\r\nexport class Mouse {\r\n  click: boolean = false\r\n  leftClick: boolean = false\r\n  rightClick: boolean = false\r\n  position: vec2 = vec2.create()\r\n  delta: vec2 = vec2.create()\r\n}\r\n","import { vec2 } from 'gl-matrix'\r\n\r\nexport class Touch {\r\n  pressed: boolean = false\r\n  position: vec2 = vec2.create()\r\n  delta: vec2 = vec2.create()\r\n}\r\n","import { glMatrix, vec3, mat4 } from 'gl-matrix'\r\n\r\nexport class Camera {\r\n  static init(aspect: number) {\r\n    return new Camera(aspect)\r\n  }\r\n\r\n  projectionMatrix: mat4 = mat4.create()\r\n  aspect: number\r\n  fov: number = glMatrix.toRadian(60)\r\n  near: number = 1.0\r\n  far: number = 8192.0\r\n\r\n  viewMatrix: mat4 = mat4.create()\r\n  position = vec3.create()\r\n  rotation = vec3.create()\r\n\r\n  private constructor(aspect: number) {\r\n    this.aspect = aspect\r\n    this.updateProjectionMatrix()\r\n  }\r\n\r\n  updateProjectionMatrix() {\r\n    mat4.perspective(\r\n      this.projectionMatrix,\r\n      this.fov,\r\n      this.aspect,\r\n      this.near,\r\n      this.far\r\n    )\r\n  }\r\n\r\n  updateViewMatrix() {\r\n    mat4.identity(this.viewMatrix)\r\n    mat4.rotateX(\r\n      this.viewMatrix,\r\n      this.viewMatrix,\r\n      this.rotation[0] - Math.PI / 2\r\n    )\r\n    mat4.rotateZ(\r\n      this.viewMatrix,\r\n      this.viewMatrix,\r\n      Math.PI / 2 - this.rotation[1]\r\n    )\r\n    mat4.translate(this.viewMatrix, this.viewMatrix, [\r\n      -this.position[0],\r\n      -this.position[1],\r\n      -this.position[2]\r\n    ])\r\n  }\r\n}\r\n","export class Keyboard {\r\n  keys: Uint8Array\r\n\r\n  constructor() {\r\n    this.keys = new Uint8Array(256)\r\n    for (let i = 0; i < 256; ++i) {\r\n      this.keys[0] = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace Keyboard {\r\n  export enum KEYS {\r\n    A = 'A'.charCodeAt(0),\r\n    B = 'B'.charCodeAt(0),\r\n    C = 'C'.charCodeAt(0),\r\n    D = 'D'.charCodeAt(0),\r\n    E = 'E'.charCodeAt(0),\r\n    F = 'F'.charCodeAt(0),\r\n    G = 'G'.charCodeAt(0),\r\n    H = 'H'.charCodeAt(0),\r\n    I = 'I'.charCodeAt(0),\r\n    J = 'J'.charCodeAt(0),\r\n    K = 'K'.charCodeAt(0),\r\n    L = 'L'.charCodeAt(0),\r\n    M = 'M'.charCodeAt(0),\r\n    N = 'N'.charCodeAt(0),\r\n    O = 'O'.charCodeAt(0),\r\n    P = 'P'.charCodeAt(0),\r\n    Q = 'Q'.charCodeAt(0),\r\n    R = 'R'.charCodeAt(0),\r\n    S = 'S'.charCodeAt(0),\r\n    T = 'T'.charCodeAt(0),\r\n    U = 'U'.charCodeAt(0),\r\n    V = 'V'.charCodeAt(0),\r\n    W = 'W'.charCodeAt(0),\r\n    X = 'X'.charCodeAt(0),\r\n    Y = 'Y'.charCodeAt(0),\r\n    Z = 'Z'.charCodeAt(0),\r\n    CTRL = 17,\r\n    ALT = 18,\r\n    SPACE = 32\r\n  }\r\n}\r\n","export interface Program {\r\n  handle: WebGLProgram\r\n  attributes: { [name: string]: number }\r\n  uniforms: { [name: string]: WebGLUniformLocation }\r\n}\r\n\r\nexport enum ShaderType {\r\n  VERTEX,\r\n  FRAGMENT\r\n}\r\n\r\nexport class Context {\r\n  public static init(canvas: HTMLCanvasElement) {\r\n    const gl = canvas.getContext('webgl', {\r\n      alpha: false\r\n    })\r\n    if (!gl) {\r\n      console.error('Failed to get WebGL context')\r\n      return null\r\n    }\r\n    return new Context(gl)\r\n  }\r\n\r\n  public static checkWebGLSupport() {\r\n    const MESSAGES = {\r\n      BAD_BROWSER: 'Your browser does not seem to support WebGL',\r\n      BAD_GPU: 'Your graphics card does not seem to support WebGL'\r\n    }\r\n\r\n    const wnd: any = window\r\n    if (!wnd.WebGLRenderingContext) {\r\n      return {\r\n        hasSupport: false,\r\n        message: MESSAGES.BAD_BROWSER\r\n      }\r\n    }\r\n\r\n    const c = document.createElement('canvas')\r\n    try {\r\n      const ctx = c.getContext('webgl') || c.getContext('experimental-webgl')\r\n      if (ctx) {\r\n        return {\r\n          hasSupport: true,\r\n          message: ''\r\n        }\r\n      } else {\r\n        return {\r\n          hasSupport: false,\r\n          message: MESSAGES.BAD_GPU\r\n        }\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        hasSupport: false,\r\n        message: MESSAGES.BAD_GPU\r\n      }\r\n    }\r\n  }\r\n\r\n  readonly gl: WebGLRenderingContext\r\n\r\n  private constructor(gl: WebGLRenderingContext) {\r\n    this.gl = gl\r\n  }\r\n\r\n  createProgram(params: {\r\n    vertexShaderSrc: string\r\n    fragmentShaderSrc: string\r\n    attributeNames: string[]\r\n    uniformNames: string[]\r\n  }): Program | null {\r\n    const gl = this.gl\r\n    var program = gl.createProgram()\r\n    if (!program) {\r\n      console.error('Failed to create WebGL program')\r\n      return null\r\n    }\r\n\r\n    const vertexShader = this.createShader({\r\n      source: params.vertexShaderSrc,\r\n      type: ShaderType.VERTEX\r\n    })\r\n    if (!vertexShader) {\r\n      console.error('Failed to compile vertex shader')\r\n      return null\r\n    }\r\n    const fragmentShader = this.createShader({\r\n      source: params.fragmentShaderSrc,\r\n      type: ShaderType.FRAGMENT\r\n    })\r\n    if (!fragmentShader) {\r\n      console.error('Failed to compile fragment shader')\r\n      return null\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n    gl.validateProgram(program)\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      gl.deleteProgram(program)\r\n      gl.deleteShader(vertexShader)\r\n      gl.deleteShader(fragmentShader)\r\n\r\n      const reason = gl.getProgramInfoLog(program)\r\n      console.error(`Could not initialize shader: ${reason}`)\r\n      return null\r\n    }\r\n\r\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n      gl.deleteProgram(program)\r\n      gl.deleteShader(vertexShader)\r\n      gl.deleteShader(fragmentShader)\r\n\r\n      const reason = gl.getProgramInfoLog(program)\r\n      console.error(`Could not initialize shader: ${reason}`)\r\n      return null\r\n    }\r\n\r\n    gl.useProgram(program)\r\n\r\n    const attributes: { [name: string]: number } = {}\r\n    for (let i = 0; i < params.attributeNames.length; ++i) {\r\n      const name = params.attributeNames[i]\r\n      const attr = gl.getAttribLocation(program, name)\r\n      if (attr === -1) {\r\n        console.error(`gl.getAttribLocation failed for attrib named \"${name}\"`)\r\n        gl.deleteProgram(program)\r\n        return null\r\n      }\r\n      attributes[name] = attr\r\n    }\r\n\r\n    const uniforms: { [name: string]: WebGLUniformLocation } = {}\r\n    for (let i = 0; i < params.uniformNames.length; ++i) {\r\n      const name = params.uniformNames[i]\r\n      const uniform = gl.getUniformLocation(program, name)\r\n      if (uniform === null) {\r\n        console.error(\r\n          `gl.getUniformLocation failed for uniform named \"${name}\"`\r\n        )\r\n        gl.deleteProgram(program)\r\n        return null\r\n      }\r\n      uniforms[name] = uniform\r\n    }\r\n\r\n    return {\r\n      handle: program,\r\n      attributes,\r\n      uniforms\r\n    }\r\n  }\r\n\r\n  createShader(params: { source: string; type: ShaderType }) {\r\n    const gl = this.gl\r\n    const shader =\r\n      params.type === ShaderType.VERTEX\r\n        ? gl.createShader(gl.VERTEX_SHADER)\r\n        : gl.createShader(gl.FRAGMENT_SHADER)\r\n    if (!shader) {\r\n      console.error('Failed to create shader program')\r\n      return null\r\n    }\r\n    gl.shaderSource(shader, params.source)\r\n    gl.compileShader(shader)\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error(gl.getShaderInfoLog(shader))\r\n      gl.deleteShader(shader)\r\n      return null\r\n    }\r\n\r\n    return shader\r\n  }\r\n\r\n  getAnisotropyExtension(): EXT_texture_filter_anisotropic | null {\r\n    return (\r\n      this.gl.getExtension('EXT_texture_filter_anisotropic') ||\r\n      this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic') ||\r\n      this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')\r\n    )\r\n  }\r\n\r\n  getMaxAnisotropy(extension: EXT_texture_filter_anisotropic) {\r\n    return this.gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT)\r\n  }\r\n}\r\n","import { glMatrix } from 'gl-matrix'\r\nimport { createNanoEvents, Emitter as EventEmitter } from 'nanoevents'\r\nimport { Game } from './Game'\r\nimport { Replay } from './Replay/Replay'\r\nimport { ReplayState } from './Replay/ReplayState'\r\n\r\nconst updateGame = (game: Game, state: ReplayState) => {\r\n  game.camera.position[0] = state.cameraPos[0]\r\n  game.camera.position[1] = state.cameraPos[1]\r\n  game.camera.position[2] = state.cameraPos[2]\r\n  game.camera.rotation[0] = glMatrix.toRadian(state.cameraRot[0])\r\n  game.camera.rotation[1] = glMatrix.toRadian(state.cameraRot[1])\r\n  game.camera.rotation[2] = glMatrix.toRadian(state.cameraRot[2])\r\n}\r\n\r\nexport class ReplayPlayer {\r\n  game: Game\r\n  state: ReplayState\r\n  replay: any\r\n  events: EventEmitter\r\n\r\n  currentMap: number = 0\r\n  currentChunk: number = 0\r\n  currentTime: number = 0\r\n  currentTick: number = 0\r\n  isPlaying: boolean = false\r\n  isPaused: boolean = false\r\n  speed: number = 1\r\n\r\n  constructor(game: Game) {\r\n    this.reset()\r\n    this.game = game\r\n    this.state = new ReplayState()\r\n    this.replay = null\r\n    this.events = createNanoEvents()\r\n  }\r\n\r\n  reset() {\r\n    this.currentMap = 0\r\n    this.currentChunk = 0\r\n    this.currentTime = 0\r\n    this.currentTick = 0\r\n\r\n    this.isPlaying = false\r\n    this.isPaused = false\r\n    this.speed = 1\r\n\r\n    if (this.replay) {\r\n      let firstChunk = this.replay.maps[0].chunks[0]\r\n      firstChunk.reader.seek(0)\r\n      this.state = firstChunk.state.clone()\r\n    }\r\n  }\r\n\r\n  changeReplay(replay: Replay) {\r\n    this.replay = replay\r\n    this.reset()\r\n  }\r\n\r\n  play() {\r\n    if (!this.isPlaying) {\r\n      this.isPlaying = true\r\n    } else if (this.isPaused) {\r\n      this.isPaused = false\r\n    }\r\n\r\n    this.events.emit('play')\r\n  }\r\n\r\n  pause() {\r\n    if (this.isPlaying) {\r\n      this.isPaused = true\r\n    }\r\n\r\n    this.events.emit('pause')\r\n  }\r\n\r\n  stop() {\r\n    this.reset()\r\n    this.events.emit('stop')\r\n  }\r\n\r\n  speedUp() {\r\n    this.speed = Math.min(this.speed * 2, 4)\r\n  }\r\n\r\n  speedDown() {\r\n    this.speed = Math.max(this.speed / 2, 0.25)\r\n  }\r\n\r\n  seek(value: number) {\r\n    let t = Math.max(0, Math.min(this.replay.length, value))\r\n\r\n    let maps = this.replay.maps\r\n    for (let i = 0; i < maps.length; ++i) {\r\n      let chunks = maps[i].chunks\r\n      for (let j = 0; j < chunks.length; ++j) {\r\n        let chunk = chunks[j]\r\n        let startTime = chunk.startTime\r\n        let timeLimit = startTime + chunk.timeLength\r\n        if (t >= startTime && t < timeLimit) {\r\n          this.currentMap = i\r\n          this.currentChunk = j\r\n          this.currentTime = t\r\n\r\n          this.state = chunk.state.clone()\r\n          let deltaDecoders = this.replay.deltaDecoders\r\n          let customMessages = this.replay.customMessages\r\n          let r = chunk.reader\r\n          r.seek(0)\r\n          while (true) {\r\n            let offset = r.tell()\r\n            let frame = Replay.readFrame(r, deltaDecoders, customMessages)\r\n            if (frame.time <= t) {\r\n              this.state.feedFrame(frame)\r\n              this.currentTick = frame.tick\r\n            } else {\r\n              r.seek(offset)\r\n              break\r\n            }\r\n          }\r\n\r\n          updateGame(this.game, this.state)\r\n\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  seekByPercent(value: number) {\r\n    value = Math.max(0, Math.min(value, 100)) / 100\r\n    value *= this.replay.length\r\n    this.seek(value)\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (!this.isPlaying || this.isPaused) {\r\n      return\r\n    }\r\n\r\n    let deltaDecoders = this.replay.deltaDecoders\r\n    let customMessages = this.replay.customMessages\r\n\r\n    let map = this.replay.maps[this.currentMap]\r\n    let chunk = map.chunks[this.currentChunk]\r\n    let r = chunk.reader\r\n\r\n    let endTime = this.currentTime + dt * this.speed\r\n\r\n    let hitStop = false\r\n\r\n    while (true) {\r\n      let offset = r.tell()\r\n      if (offset >= chunk.data.length) {\r\n        if (this.currentChunk === map.chunks.length - 1) {\r\n          if (this.currentMap === this.replay.maps.length - 1) {\r\n            hitStop = true\r\n            break\r\n          } else {\r\n            this.currentChunk = 0\r\n            this.currentMap++\r\n            map = this.replay.maps[this.currentMap]\r\n            chunk = map.chunks[this.currentChunk]\r\n          }\r\n        } else {\r\n          this.currentChunk++\r\n          chunk = map.chunks[this.currentChunk]\r\n        }\r\n\r\n        r = chunk.reader\r\n        r.seek(0)\r\n        offset = 0\r\n\r\n        continue\r\n      }\r\n\r\n      let sounds: any[] = this.game.sounds\r\n      let frame: any = Replay.readFrame(r, deltaDecoders, customMessages)\r\n      if (frame.type < 2) {\r\n        for (let i = 0; i < frame.data.length; ++i) {\r\n          let message = frame.data[i]\r\n          if (message.type === 6) {\r\n            // TODO: Magic number SVC_SOUND\r\n            let msgSound = message.data\r\n            let sound = sounds.find((s: any) => s.index === msgSound.soundIndex)\r\n            if (sound && sound.name !== 'common/null.wav') {\r\n              let channel = msgSound.channel\r\n              let volume = msgSound.volume\r\n              // TODO: Positional audio\r\n              this.game.soundSystem.play(sound, channel, volume)\r\n            }\r\n          } else if (message.type === 29) {\r\n            // TODO: Magic number\r\n            let msgSound = message.data\r\n            let sound = sounds.find((s: any) => s.index === msgSound.soundIndex)\r\n            if (sound && sound.name !== 'common/null.wav') {\r\n              // TODO: Use after implementing positional audio\r\n              // let volume = msgSound.volume\r\n              // this.game.soundSystem.play(sound, 6, volume)\r\n            }\r\n          } else if (message.type === 9) {\r\n            message.data.commands.forEach((command: any) => {\r\n              switch (command.func) {\r\n                case 'speak':\r\n                case 'spk':\r\n                case 'play': {\r\n                  let soundName = command.params[0] + '.wav'\r\n                  let sound = sounds.find((s: any) => s.name === soundName)\r\n                  if (!sound) {\r\n                    return\r\n                  }\r\n\r\n                  this.game.soundSystem.play(sound, 1, 0.7)\r\n                  break\r\n                }\r\n                case 'playvol': {\r\n                  let soundName = command.params[0] + '.wav'\r\n                  let volume\r\n                  if (isNaN(command.params[1])) {\r\n                    volume = 1\r\n                  } else {\r\n                    volume = parseFloat(command.params[1])\r\n                  }\r\n                  let sound = sounds.find((s: any) => s.name === soundName)\r\n                  if (!sound) {\r\n                    return\r\n                  }\r\n\r\n                  this.game.soundSystem.play(sound, 1, volume)\r\n                  break\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n      } else if (frame.type === 8) {\r\n        let sample = frame.sound.sample\r\n        let sound = sounds.find(s => s.name === sample)\r\n        if (sound && sound.name !== 'common/null.wav') {\r\n          let channel = frame.sound.channel\r\n          let volume = frame.sound.volume\r\n          this.game.soundSystem.play(sound, channel, volume)\r\n        }\r\n      }\r\n      if (frame.time <= endTime) {\r\n        this.state.feedFrame(frame)\r\n        this.currentTick = frame.tick\r\n      } else {\r\n        r.seek(offset)\r\n        break\r\n      }\r\n    }\r\n\r\n    updateGame(this.game, this.state)\r\n\r\n    this.currentTime = endTime\r\n\r\n    if (hitStop) {\r\n      this.stop()\r\n    }\r\n  }\r\n}\r\n","import { Context } from './Context'\r\n\r\nexport class Renderer {\r\n  static init(context: Context): Renderer | null {\r\n    const gl = context.gl\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0)\r\n    gl.clearDepth(1.0)\r\n    gl.enable(gl.DEPTH_TEST)\r\n    gl.depthFunc(gl.LEQUAL)\r\n\r\n    gl.enable(gl.BLEND)\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n\r\n    gl.enable(gl.CULL_FACE)\r\n    gl.cullFace(gl.FRONT)\r\n\r\n    return new Renderer({ context })\r\n  }\r\n\r\n  private context: Context\r\n\r\n  private constructor(params: { context: Context }) {\r\n    this.context = params.context\r\n  }\r\n\r\n  draw = () => {\r\n    const gl = this.context.gl\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n  }\r\n}\r\n","import { Bsp } from '../Bsp'\r\nimport { Tga } from '../Parsers/Tga'\r\nimport { Camera } from './Camera'\r\nimport { Context } from './Context'\r\nimport { SkyShader } from './SkyShader/SkyShader'\r\n\r\nexport class SkyScene {\r\n  static init(context: Context): SkyScene | null {\r\n    const shader = SkyShader.init(context)\r\n    if (!shader) {\r\n      console.error(\"skyscenen't\")\r\n      return null\r\n    }\r\n\r\n    return new SkyScene({ context, shader })\r\n  }\r\n\r\n  private context: Context\r\n  private shader: SkyShader\r\n  private vertexBuffer: WebGLBuffer | null = null\r\n  private indexBuffer: WebGLBuffer | null = null\r\n  private texture: WebGLTexture | null = null\r\n  private isReady: boolean = false\r\n\r\n  private constructor(params: { context: Context; shader: SkyShader }) {\r\n    this.context = params.context\r\n    this.shader = params.shader\r\n  }\r\n\r\n  changeMap(bsp: Bsp) {\r\n    if (bsp.skies.length !== 6) {\r\n      this.isReady = false\r\n      return\r\n    }\r\n\r\n    const gl = this.context.gl\r\n    const vertexBuffer = gl.createBuffer()\r\n    const indexBuffer = gl.createBuffer()\r\n    const texture = gl.createTexture()\r\n    if (!vertexBuffer || !indexBuffer || !texture) {\r\n      // TODO\r\n      throw new Error('shouldnt happen')\r\n    }\r\n\r\n    // prettier-ignore\r\n    const indices = new Uint8Array([\r\n      0,  1,  2,      0,  2,  3,    // front\r\n      4,  5,  6,      4,  6,  7,    // back\r\n      8,  9,  10,     8,  10, 11,   // top\r\n      12, 13, 14,     12, 14, 15,   // bottom\r\n      16, 17, 18,     16, 18, 19,   // right\r\n      20, 21, 22,     20, 22, 23,   // left\r\n    ])\r\n    // prettier-ignore\r\n    const vertices = new Float32Array([\r\n      // Top face\r\n      -1.0, -1.0,  1.0, 0.499, 0.001,\r\n       1.0, -1.0,  1.0, 0.499, 0.249,\r\n       1.0,  1.0,  1.0, 0.001, 0.249,\r\n      -1.0,  1.0,  1.0, 0.001, 0.001,\r\n\r\n      // Bottom face\r\n      -1.0, -1.0, -1.0, 0.499, 0.749,\r\n      -1.0,  1.0, -1.0, 0.001, 0.749,\r\n       1.0,  1.0, -1.0, 0.001, 0.501,\r\n       1.0, -1.0, -1.0, 0.499, 0.501,\r\n\r\n      // Front face\r\n      -1.0,  1.0, -1.0, 0.501, 0.749,\r\n      -1.0,  1.0,  1.0, 0.501, 0.501,\r\n       1.0,  1.0,  1.0, 0.999, 0.501,\r\n       1.0,  1.0, -1.0, 0.999, 0.749,\r\n\r\n      // Back face\r\n      -1.0, -1.0, -1.0, 0.999, 0.249,\r\n       1.0, -1.0, -1.0, 0.501, 0.249,\r\n       1.0, -1.0,  1.0, 0.501, 0.001,\r\n      -1.0, -1.0,  1.0, 0.999, 0.001,\r\n\r\n      // Right face\r\n       1.0, -1.0, -1.0, 0.499, 0.499,\r\n       1.0,  1.0, -1.0, 0.001, 0.499,\r\n       1.0,  1.0,  1.0, 0.001, 0.251,\r\n       1.0, -1.0,  1.0, 0.499, 0.251,\r\n\r\n      // Left face\r\n      -1.0, -1.0, -1.0, 0.501, 0.499,\r\n      -1.0, -1.0,  1.0, 0.501, 0.251,\r\n      -1.0,  1.0,  1.0, 0.999, 0.251,\r\n      -1.0,  1.0, -1.0, 0.999, 0.499\r\n    ].map((a, i) => ((i % 5) < 3) ? a * 4096 : a))\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\r\n    gl.enableVertexAttribArray(0)\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\r\n\r\n    const canvas = document.createElement('canvas')\r\n    canvas.width = 512\r\n    canvas.height = 1024\r\n    const ctx = canvas.getContext('2d')\r\n    if (!ctx) {\r\n      throw new Error('sky ctx fail')\r\n    }\r\n\r\n    const coords: { [name: string]: number[] } = {\r\n      up: [0, 0],\r\n      rt: [0, 256],\r\n      dn: [0, 512],\r\n      ft: [256, 0],\r\n      lf: [256, 256],\r\n      bk: [256, 512]\r\n    }\r\n\r\n    bsp.skies.forEach((sky: Tga) => {\r\n      const smc = document.createElement('canvas')\r\n      const smctx = smc.getContext('2d')\r\n      if (!smctx) {\r\n        throw new Error('Runtime error.')\r\n      }\r\n      smc.width = sky.width\r\n      smc.height = sky.height\r\n      const imageData = smctx.getImageData(0, 0, smc.width, smc.height)\r\n      for (let i = 0; i < sky.data.length; ++i) {\r\n        imageData.data[i] = sky.data[i]\r\n      }\r\n      smctx.putImageData(imageData, 0, 0)\r\n\r\n      const side = sky.name.slice(-2)\r\n      const c = coords[side] ? coords[side] : []\r\n\r\n      // TODO: remove this check\r\n      if (!ctx) {\r\n        throw new Error('Runtime error.')\r\n      }\r\n      ctx.drawImage(smc, c[0], c[1])\r\n    })\r\n\r\n    const pixelData = ctx.getImageData(0, 0, 512, 1024).data\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      0,\r\n      gl.RGBA,\r\n      512,\r\n      1024,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      new Uint8Array(pixelData)\r\n    )\r\n    gl.generateMipmap(gl.TEXTURE_2D)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\r\n    gl.texParameteri(\r\n      gl.TEXTURE_2D,\r\n      gl.TEXTURE_MIN_FILTER,\r\n      gl.LINEAR_MIPMAP_LINEAR\r\n    )\r\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n    const anisotropy = this.context.getAnisotropyExtension()\r\n    if (anisotropy) {\r\n      gl.texParameteri(\r\n        gl.TEXTURE_2D,\r\n        anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\r\n        this.context.getMaxAnisotropy(anisotropy)\r\n      )\r\n    }\r\n\r\n    this.vertexBuffer = vertexBuffer\r\n    this.indexBuffer = indexBuffer\r\n    this.texture = texture\r\n    this.isReady = true\r\n  }\r\n\r\n  draw(camera: Camera) {\r\n    if (!this.isReady) {\r\n      return\r\n    }\r\n\r\n    const gl = this.context.gl\r\n    const shader = this.shader\r\n\r\n    shader.useProgram(gl)\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\r\n    shader.enableVertexAttribs(gl)\r\n    shader.setVertexAttribPointers(gl)\r\n    shader.setDiffuse(gl, 0)\r\n\r\n    const x = camera.position[0]\r\n    const y = camera.position[1]\r\n    const z = camera.position[2]\r\n    camera.position[0] = 0\r\n    camera.position[1] = 0\r\n    camera.position[2] = 0\r\n    camera.updateViewMatrix()\r\n    camera.position[0] = x\r\n    camera.position[1] = y\r\n    camera.position[2] = z\r\n\r\n    shader.setViewMatrix(gl, camera.viewMatrix)\r\n    shader.setProjectionMatrix(gl, camera.projectionMatrix)\r\n\r\n    gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_BYTE, 0)\r\n    gl.clear(gl.DEPTH_BUFFER_BIT)\r\n  }\r\n}\r\n","import { mat4 } from 'gl-matrix'\r\nimport { Context, Program } from '../Context'\r\n\r\nconst fragmentSrc = `#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\nuniform sampler2D diffuse;\r\n\r\nvarying vec2 vTexCoord;\r\n\r\nvoid main(void) {\r\n  vec4 diffuseColor = texture2D(diffuse, vTexCoord);\r\n  gl_FragColor = vec4(diffuseColor.rgb, 1.0);\r\n}`\r\n\r\nconst vertexSrc = `#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\nattribute vec3 position;\r\nattribute vec2 texCoord;\r\n\r\nvarying vec2 vTexCoord;\r\n\r\nuniform mat4 viewMatrix;\r\nuniform mat4 projectionMatrix;\r\n\r\nvoid main(void) {\r\n  vTexCoord = texCoord;\r\n  gl_Position = projectionMatrix * viewMatrix * vec4(position, 1);\r\n}`\r\n\r\nexport class SkyShader {\r\n  static init(context: Context): SkyShader | null {\r\n    const attributeNames = ['position', 'texCoord']\r\n    const uniformNames: string[] = ['viewMatrix', 'projectionMatrix', 'diffuse']\r\n    const program = context.createProgram({\r\n      vertexShaderSrc: vertexSrc,\r\n      fragmentShaderSrc: fragmentSrc,\r\n      attributeNames,\r\n      uniformNames\r\n    })\r\n    if (!program) {\r\n      console.error(`Failed to create sky shader program`)\r\n      return null\r\n    }\r\n\r\n    return new SkyShader(program)\r\n  }\r\n\r\n  private program: WebGLProgram\r\n  private aPosition: number\r\n  private aTexCoord: number\r\n  private uViewMx: WebGLUniformLocation\r\n  private uProjectionMx: WebGLUniformLocation\r\n  private uDiffuse: WebGLUniformLocation\r\n\r\n  private constructor(program: Program) {\r\n    this.program = program.handle\r\n    this.aPosition = program.attributes['position']\r\n    this.aTexCoord = program.attributes['texCoord']\r\n    this.uViewMx = program.uniforms['viewMatrix']\r\n    this.uProjectionMx = program.uniforms['projectionMatrix']\r\n    this.uDiffuse = program.uniforms['diffuse']\r\n  }\r\n\r\n  useProgram(gl: WebGLRenderingContext) {\r\n    gl.useProgram(this.program)\r\n  }\r\n\r\n  setViewMatrix(gl: WebGLRenderingContext, matrix: mat4) {\r\n    gl.uniformMatrix4fv(this.uViewMx, false, matrix)\r\n  }\r\n\r\n  setProjectionMatrix(gl: WebGLRenderingContext, matrix: mat4) {\r\n    gl.uniformMatrix4fv(this.uProjectionMx, false, matrix)\r\n  }\r\n\r\n  setDiffuse(gl: WebGLRenderingContext, value: number) {\r\n    gl.uniform1i(this.uDiffuse, value)\r\n  }\r\n\r\n  enableVertexAttribs(gl: WebGLRenderingContext) {\r\n    gl.enableVertexAttribArray(this.aPosition)\r\n    gl.enableVertexAttribArray(this.aTexCoord)\r\n  }\r\n\r\n  setVertexAttribPointers(gl: WebGLRenderingContext) {\r\n    gl.vertexAttribPointer(this.aPosition, 3, gl.FLOAT, false, 5 * 4, 0)\r\n    gl.vertexAttribPointer(this.aTexCoord, 2, gl.FLOAT, false, 5 * 4, 3 * 4)\r\n  }\r\n}\r\n","import { mat4, vec3 } from 'gl-matrix'\r\nimport { Bsp } from '../Bsp'\r\nimport { Camera } from './Camera'\r\nimport { Context } from './Context'\r\nimport { MainShader } from './WorldShader/WorldShader'\r\nimport { RenderMode } from '../Parsers/BspEntityParser'\r\nimport { Sprite, SpriteType } from '../Parsers/Sprite'\r\nimport { isPowerOfTwo, nextPowerOfTwo, resizeTexture } from './Util'\r\n\r\ntype FaceInfo = {\r\n  offset: number\r\n  length: number\r\n  textureIndex: number\r\n}\r\ntype ModelInfo = {\r\n  origin: number[]\r\n  offset: number\r\n  length: number\r\n  isTransparent: boolean\r\n  faces: FaceInfo[]\r\n}\r\ntype SceneInfo = {\r\n  length: number\r\n  data: Float32Array\r\n  models: ModelInfo[]\r\n}\r\n\r\nexport class WorldScene {\r\n  static init(context: Context) {\r\n    const shader = MainShader.init(context)\r\n    if (!shader) {\r\n      console.error('Failed to init MainShader')\r\n      return null\r\n    }\r\n\r\n    shader.useProgram(context.gl)\r\n\r\n    const buffer = context.gl.createBuffer()\r\n    if (!buffer) {\r\n      console.error('Failed to create WebGL buffer')\r\n      return null\r\n    }\r\n\r\n    return new WorldScene({ buffer, context, shader })\r\n  }\r\n\r\n  private buffer: WebGLBuffer\r\n  private context: Context\r\n  private shader: MainShader\r\n  private modelMatrix: mat4 = mat4.create()\r\n\r\n  private sceneInfo: SceneInfo = {\r\n    length: 0,\r\n    data: new Float32Array(0),\r\n    models: []\r\n  }\r\n  private bsp: Bsp | null = null\r\n  private textures: {\r\n    name: string\r\n    width: number\r\n    height: number\r\n    data: Uint8Array\r\n    handle: WebGLTexture\r\n  }[] = []\r\n  private sprites: { [name: string]: Sprite } = {}\r\n  private lightmap: {\r\n    data: Uint8Array\r\n    handle: WebGLTexture\r\n  } | null = null\r\n  private constructor(params: {\r\n    context: Context\r\n    buffer: WebGLBuffer\r\n    shader: MainShader\r\n  }) {\r\n    this.buffer = params.buffer\r\n    this.context = params.context\r\n    this.shader = params.shader\r\n  }\r\n\r\n  changeMap(bsp: Bsp) {\r\n    this.fillBuffer(bsp)\r\n    this.loadTextures(bsp)\r\n    this.loadSpriteTextures(bsp)\r\n    this.loadLightmap(bsp)\r\n    this.bsp = bsp\r\n  }\r\n\r\n  private fillBuffer(bsp: Bsp) {\r\n    const gl = this.context.gl\r\n    const models = bsp.models\r\n\r\n    const INVISIBLE_TEXTURES = [\r\n      'aaatrigger',\r\n      'clip',\r\n      'null',\r\n      'hint',\r\n      'nodraw',\r\n      'invisible',\r\n      'skip',\r\n      'trigger',\r\n      'sky',\r\n      'fog'\r\n    ]\r\n\r\n    // get total buffer size\r\n    let size = 0\r\n    for (let i = 0; i < models.length; ++i) {\r\n      const model = models[i]\r\n      for (let j = 0; j < model.faces.length; ++j) {\r\n        const texture = bsp.textures[model.faces[j].textureIndex]\r\n        if (INVISIBLE_TEXTURES.indexOf(texture.name) > -1) {\r\n          continue\r\n        }\r\n\r\n        size += model.faces[j].buffer.length\r\n      }\r\n    }\r\n\r\n    // add 6 vertex for a single quad that will be used to render sprites\r\n    size += 7 * 6\r\n\r\n    // init scene info structure and buffer with the appropriate size\r\n    const sceneInfo: SceneInfo = {\r\n      length: size,\r\n      data: new Float32Array(size),\r\n      models: []\r\n    }\r\n\r\n    // fill the scene info structure\r\n    let currentVertex = 0\r\n    for (let i = 0; i < bsp.models.length; ++i) {\r\n      const model = bsp.models[i]\r\n      const modelInfo: ModelInfo = {\r\n        origin: model.origin,\r\n        offset: currentVertex,\r\n        length: 0,\r\n        isTransparent: false,\r\n        faces: []\r\n      }\r\n\r\n      for (let j = 0; j < model.faces.length; ++j) {\r\n        const texture = bsp.textures[model.faces[j].textureIndex]\r\n        if (INVISIBLE_TEXTURES.indexOf(texture.name) > -1) {\r\n          continue\r\n        }\r\n\r\n        const faceInfo: FaceInfo = {\r\n          offset: currentVertex,\r\n          length: 0,\r\n          textureIndex: -1\r\n        }\r\n\r\n        for (let k = 0; k < model.faces[j].buffer.length; ++k) {\r\n          sceneInfo.data[currentVertex++] = model.faces[j].buffer[k]\r\n        }\r\n\r\n        if (\r\n          !modelInfo.isTransparent &&\r\n          bsp.textures[model.faces[j].textureIndex].name[0] === '{'\r\n        ) {\r\n          modelInfo.isTransparent = true\r\n        }\r\n\r\n        faceInfo.textureIndex = model.faces[j].textureIndex\r\n        faceInfo.length = currentVertex - faceInfo.offset\r\n        modelInfo.faces.push(faceInfo)\r\n      }\r\n\r\n      modelInfo.length = currentVertex - modelInfo.offset\r\n      sceneInfo.models.push(modelInfo)\r\n    }\r\n\r\n    // set data of the last quad used for rendering sprites\r\n    sceneInfo.models.push({\r\n      origin: [0, 0, 0],\r\n      offset: currentVertex,\r\n      length: 4,\r\n      isTransparent: false, // unused\r\n      faces: [\r\n        {\r\n          offset: currentVertex,\r\n          length: 4,\r\n          textureIndex: 0 // unused\r\n        }\r\n      ]\r\n    })\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = -0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 1\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0.5\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n    sceneInfo.data[currentVertex++] = 0\r\n\r\n    // sort each model's face in scene info structure by texture index\r\n    // and merge faces with same texture to lower draw calls\r\n    currentVertex = 0\r\n    const sortedSceneInfo: SceneInfo = {\r\n      data: new Float32Array(sceneInfo.data),\r\n      length: sceneInfo.length,\r\n      models: sceneInfo.models.map(model => ({\r\n        origin: [...model.origin],\r\n        offset: model.offset,\r\n        length: model.length,\r\n        isTransparent: model.isTransparent,\r\n        faces: model.faces.map(face => ({\r\n          offset: face.offset,\r\n          length: face.length,\r\n          textureIndex: face.textureIndex\r\n        }))\r\n      }))\r\n    }\r\n    for (let i = 0; i < sortedSceneInfo.models.length; ++i) {\r\n      const model = sortedSceneInfo.models[i]\r\n      model.faces.sort((a, b) => a.textureIndex - b.textureIndex)\r\n\r\n      for (let j = 0; j < model.faces.length; ++j) {\r\n        const face = model.faces[j]\r\n        const newOffset = currentVertex\r\n\r\n        for (let k = 0; k < face.length; ++k) {\r\n          sortedSceneInfo.data[currentVertex] = sceneInfo.data[face.offset + k]\r\n          currentVertex += 1\r\n        }\r\n\r\n        face.offset = newOffset\r\n      }\r\n\r\n      const newFaces: FaceInfo[] = []\r\n      let currentTextureIndex = -1\r\n      for (let j = 0; j < model.faces.length; ++j) {\r\n        const face = model.faces[j]\r\n\r\n        if (face.textureIndex === currentTextureIndex) {\r\n          newFaces[newFaces.length - 1].length += face.length\r\n        } else {\r\n          // merge\r\n          newFaces.push({\r\n            offset: face.offset,\r\n            length: face.length,\r\n            textureIndex: face.textureIndex\r\n          })\r\n          currentTextureIndex = face.textureIndex\r\n        }\r\n      }\r\n      model.faces = newFaces\r\n    }\r\n    this.sceneInfo = sortedSceneInfo\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer)\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.sceneInfo.data, gl.STATIC_DRAW)\r\n  }\r\n\r\n  private loadTextures(bsp: Bsp) {\r\n    const gl = this.context.gl\r\n\r\n    for (let i = 0; i < bsp.textures.length; ++i) {\r\n      const glTexture = gl.createTexture()\r\n      if (!glTexture) {\r\n        // shouldnt happen\r\n        // TODO: handle better\r\n        throw new Error('fatal error')\r\n      }\r\n\r\n      const texture = bsp.textures[i]\r\n      if (!isPowerOfTwo(texture.width) || !isPowerOfTwo(texture.height)) {\r\n        const w = texture.width\r\n        const h = texture.height\r\n        const nw = nextPowerOfTwo(texture.width)\r\n        const nh = nextPowerOfTwo(texture.height)\r\n        texture.data = resizeTexture(texture.data, w, h, nw, nh)\r\n        texture.width = nw\r\n        texture.height = nh\r\n      }\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, glTexture)\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        gl.RGBA,\r\n        texture.width,\r\n        texture.height,\r\n        0,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        texture.data\r\n      )\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n      gl.texParameteri(\r\n        gl.TEXTURE_2D,\r\n        gl.TEXTURE_MIN_FILTER,\r\n        gl.LINEAR_MIPMAP_LINEAR\r\n      )\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\r\n      gl.generateMipmap(gl.TEXTURE_2D)\r\n\r\n      const anisotropy = this.context.getAnisotropyExtension()\r\n      if (anisotropy) {\r\n        gl.texParameteri(\r\n          gl.TEXTURE_2D,\r\n          anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\r\n          this.context.getMaxAnisotropy(anisotropy)\r\n        )\r\n      }\r\n\r\n      this.textures.push({\r\n        name: texture.name,\r\n        width: texture.width,\r\n        height: texture.height,\r\n        data: texture.data,\r\n        handle: glTexture\r\n      })\r\n    }\r\n  }\r\n\r\n  private loadSpriteTextures(bsp: Bsp) {\r\n    const gl = this.context.gl\r\n\r\n    for (const [name, sprite] of Object.entries(bsp.sprites)) {\r\n      const glTexture = gl.createTexture()\r\n      if (!glTexture) {\r\n        // shouldnt happen\r\n        // TODO: handle better\r\n        throw new Error('fatal error')\r\n      }\r\n\r\n      const texture = sprite.frames[0]\r\n      if (!isPowerOfTwo(texture.width) || !isPowerOfTwo(texture.height)) {\r\n        const w = texture.width\r\n        const h = texture.height\r\n        const nw = nextPowerOfTwo(texture.width)\r\n        const nh = nextPowerOfTwo(texture.height)\r\n        texture.data = resizeTexture(texture.data, w, h, nw, nh)\r\n        texture.width = nw\r\n        texture.height = nh\r\n      }\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, glTexture)\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        gl.RGBA,\r\n        texture.width,\r\n        texture.height,\r\n        0,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        texture.data\r\n      )\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n      gl.texParameteri(\r\n        gl.TEXTURE_2D,\r\n        gl.TEXTURE_MIN_FILTER,\r\n        gl.LINEAR_MIPMAP_LINEAR\r\n      )\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\r\n      gl.generateMipmap(gl.TEXTURE_2D)\r\n\r\n      const anisotropy = this.context.getAnisotropyExtension()\r\n      if (anisotropy) {\r\n        gl.texParameteri(\r\n          gl.TEXTURE_2D,\r\n          anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\r\n          this.context.getMaxAnisotropy(anisotropy)\r\n        )\r\n      }\r\n\r\n      this.textures.push({\r\n        name: name,\r\n        width: texture.width,\r\n        height: texture.height,\r\n        data: texture.data,\r\n        handle: glTexture\r\n      })\r\n      this.sprites[name] = sprite\r\n    }\r\n  }\r\n\r\n  private loadLightmap(bsp: Bsp) {\r\n    const gl = this.context.gl\r\n\r\n    const glLightmap = gl.createTexture()\r\n    if (!glLightmap) {\r\n      // shouldnt happen\r\n      // TODO: handle better\r\n      throw new Error('fatal error')\r\n    }\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, glLightmap)\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      0,\r\n      gl.RGBA,\r\n      bsp.lightmap.width,\r\n      bsp.lightmap.height,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      bsp.lightmap.data\r\n    )\r\n    gl.generateMipmap(gl.TEXTURE_2D)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n    gl.texParameteri(\r\n      gl.TEXTURE_2D,\r\n      gl.TEXTURE_MIN_FILTER,\r\n      gl.LINEAR_MIPMAP_LINEAR\r\n    )\r\n\r\n    this.lightmap = {\r\n      data: bsp.lightmap.data,\r\n      handle: glLightmap\r\n    }\r\n  }\r\n\r\n  draw(camera: Camera, entities: any[]) {\r\n    if (!this.bsp || !this.lightmap) {\r\n      return\r\n    }\r\n\r\n    const gl = this.context.gl\r\n    const shader = this.shader\r\n\r\n    shader.useProgram(gl)\r\n\r\n    camera.updateProjectionMatrix()\r\n    camera.updateViewMatrix()\r\n\r\n    shader.setViewMatrix(gl, camera.viewMatrix)\r\n    shader.setProjectionMatrix(gl, camera.projectionMatrix)\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer)\r\n    shader.enableVertexAttribs(gl)\r\n    shader.setVertexAttribPointers(gl)\r\n\r\n    shader.setDiffuse(gl, 0)\r\n    shader.setLightmap(gl, 1)\r\n\r\n    gl.activeTexture(gl.TEXTURE1)\r\n    gl.bindTexture(gl.TEXTURE_2D, this.lightmap.handle)\r\n\r\n    gl.activeTexture(gl.TEXTURE0)\r\n\r\n    const opaqueEntities = []\r\n    const transparentEntities = []\r\n    for (let i = 1; i < entities.length; ++i) {\r\n      const e = entities[i]\r\n      if (e.model) {\r\n        if (\r\n          !e.rendermode ||\r\n          e.rendermode == RenderMode.Normal ||\r\n          e.rendermode == RenderMode.Solid\r\n        ) {\r\n          if (e.model[0] === '*') {\r\n            const model = this.sceneInfo.models[parseInt(e.model.substr(1))]\r\n            if (model.isTransparent) {\r\n              transparentEntities.push(e)\r\n              continue\r\n            }\r\n          } else if (e.model.indexOf('.spr') > -1) {\r\n            transparentEntities.push(e)\r\n            continue\r\n          }\r\n\r\n          opaqueEntities.push(e)\r\n        } else if (e.rendermode == RenderMode.Additive) {\r\n          transparentEntities.push(e)\r\n        } else {\r\n          transparentEntities.push(e)\r\n        }\r\n      }\r\n    }\r\n\r\n    shader.setOpacity(gl, 1.0)\r\n    this.renderWorldSpawn()\r\n    this.renderOpaqueEntities(camera, opaqueEntities)\r\n\r\n    if (transparentEntities.length) {\r\n      gl.depthMask(false)\r\n      this.renderTransparentEntities(transparentEntities, camera)\r\n      gl.depthMask(true)\r\n    }\r\n  }\r\n\r\n  private renderWorldSpawn() {\r\n    const model = this.sceneInfo.models[0]\r\n    const gl = this.context.gl\r\n\r\n    mat4.identity(this.modelMatrix)\r\n    this.shader.setModelMatrix(gl, this.modelMatrix)\r\n\r\n    for (let j = 0; j < model.faces.length; ++j) {\r\n      const face = model.faces[j]\r\n      gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\r\n      gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n    }\r\n  }\r\n\r\n  private renderOpaqueEntities(camera: Camera, entities: any[]) {\r\n    const gl = this.context.gl\r\n    const shader = this.shader\r\n    const mmx = this.modelMatrix\r\n\r\n    for (let i = 0; i < entities.length; ++i) {\r\n      const entity = entities[i]\r\n      const modelIndex = parseInt(entity.model.substr(1))\r\n      const model = this.sceneInfo.models[modelIndex]\r\n      if (model) {\r\n        const angles = entity.angles || [0, 0, 0]\r\n        const origin = entity.origin\r\n          ? vec3.fromValues(\r\n              entity.origin[0],\r\n              entity.origin[1],\r\n              entity.origin[2]\r\n            )\r\n          : vec3.create()\r\n        vec3.add(origin, origin, model.origin)\r\n\r\n        // TODO: this seems to work, but needs further research\r\n        mat4.identity(mmx)\r\n        mat4.translate(mmx, mmx, origin)\r\n        // mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180) // dunno this\r\n        mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180)\r\n        mat4.rotateX(\r\n          this.modelMatrix,\r\n          this.modelMatrix,\r\n          (angles[2] * Math.PI) / 180\r\n        )\r\n        shader.setModelMatrix(gl, this.modelMatrix)\r\n\r\n        for (let j = 0; j < model.faces.length; ++j) {\r\n          const face = model.faces[j]\r\n          gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\r\n          gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n        }\r\n      } else if (entity.model.indexOf('.spr') > -1) {\r\n        const texture = this.textures.find(a => a.name === entity.model)\r\n        const sprite = this.sprites[entity.model]\r\n        if (texture && sprite) {\r\n          const origin = entity.origin\r\n            ? vec3.fromValues(\r\n                entity.origin[0],\r\n                entity.origin[1],\r\n                entity.origin[2]\r\n              )\r\n            : vec3.create()\r\n          const scale = vec3.fromValues(texture.width, 1, texture.height)\r\n          const angles = entity.angles\r\n            ? vec3.fromValues(\r\n                entity.angles[0],\r\n                entity.angles[2],\r\n                entity.angles[1]\r\n              )\r\n            : vec3.create()\r\n          vec3.scale(scale, scale, entity.scale || 1)\r\n\r\n          mat4.identity(mmx)\r\n          mat4.translate(mmx, mmx, origin)\r\n\r\n          switch (sprite.header.type) {\r\n            case SpriteType.VP_PARALLEL_UPRIGHT: {\r\n              // TODO: incorrect, but will do for now\r\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.FACING_UPRIGHT: {\r\n              // TODO: fix incorrect\r\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.VP_PARALLEL: {\r\n              mat4.rotateZ(\r\n                mmx,\r\n                mmx,\r\n                Math.atan2(\r\n                  origin[1] - camera.position[1],\r\n                  origin[0] - camera.position[0]\r\n                ) +\r\n                  Math.PI / 2\r\n              )\r\n              mat4.rotateX(\r\n                mmx,\r\n                mmx,\r\n                Math.atan2(\r\n                  camera.position[2] - origin[2],\r\n                  Math.sqrt(\r\n                    Math.pow(camera.position[0] - origin[0], 2) +\r\n                      Math.pow(camera.position[1] - origin[1], 2)\r\n                  )\r\n                )\r\n              )\r\n\r\n              break\r\n            }\r\n            case SpriteType.ORIENTED: {\r\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateX(mmx, mmx, (angles[2] * Math.PI) / 180 - Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.VP_PARALLEL_ORIENTED: {\r\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\r\n              break\r\n            }\r\n            default: {\r\n              throw new Error('Invalid sprite type')\r\n            }\r\n          }\r\n\r\n          mat4.scale(mmx, mmx, scale)\r\n          shader.setModelMatrix(gl, mmx)\r\n          shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n\r\n          const renderMode = entity.rendermode || RenderMode.Normal\r\n          switch (renderMode) {\r\n            case RenderMode.Normal: {\r\n              shader.setOpacity(gl, 1)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Color: {\r\n              // TODO: not properly implemented\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Texture: {\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Glow: {\r\n              // TODO: not properly implemented\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n              break\r\n            }\r\n            case RenderMode.Solid: {\r\n              // TODO: not properly implemented\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Additive: {\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private renderTransparentEntities(entities: any[], camera: Camera) {\r\n    const gl = this.context.gl\r\n    const shader = this.shader\r\n    const mmx = this.modelMatrix\r\n\r\n    // distances of all entities from the camera\r\n    const entityDistances: {\r\n      index: number\r\n      distance: number\r\n    }[] = entities\r\n      .map((e, i) => ({\r\n        index: i,\r\n        distance: vec3.dist(camera.position, e.origin || [0, 0, 0])\r\n      }))\r\n      .sort((a, b) => a.distance - b.distance)\r\n\r\n    for (let i = 0; i < entityDistances.length; ++i) {\r\n      const entity = entities[entityDistances[i].index]\r\n\r\n      const modelIndex = parseInt(entity.model.substr(1))\r\n      const model = this.sceneInfo.models[modelIndex]\r\n      if (model) {\r\n        const angles = entity.angles || [0, 0, 0]\r\n        const origin = entity.origin || [0, 0, 0]\r\n        origin[0] += model.origin[0]\r\n        origin[1] += model.origin[1]\r\n        origin[2] += model.origin[2]\r\n\r\n        // TODO: this seems to work, but needs further research\r\n        mat4.identity(mmx)\r\n        mat4.translate(mmx, mmx, origin)\r\n        mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180)\r\n        // mat4.rotateY(mmx, mmx, (angles[2] * Math.PI) / 180) // dunno this\r\n        mat4.rotateX(\r\n          this.modelMatrix,\r\n          this.modelMatrix,\r\n          (angles[2] * Math.PI) / 180\r\n        )\r\n        shader.setModelMatrix(gl, this.modelMatrix)\r\n\r\n        const renderMode = entity.rendermode || RenderMode.Normal\r\n        switch (renderMode) {\r\n          case RenderMode.Normal: {\r\n            shader.setOpacity(gl, 1)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            break\r\n          }\r\n          case RenderMode.Color: {\r\n            // TODO: not properly implemented\r\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            break\r\n          }\r\n          case RenderMode.Texture: {\r\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            break\r\n          }\r\n          case RenderMode.Glow: {\r\n            // TODO: not properly implemented\r\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            break\r\n          }\r\n          case RenderMode.Solid: {\r\n            // TODO: not properly implemented\r\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            break\r\n          }\r\n          case RenderMode.Additive: {\r\n            gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\r\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n            for (let j = 0; j < model.faces.length; ++j) {\r\n              const face = model.faces[j]\r\n              gl.bindTexture(\r\n                gl.TEXTURE_2D,\r\n                this.textures[face.textureIndex].handle\r\n              )\r\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\r\n            }\r\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n            break\r\n          }\r\n        }\r\n      } else if (entity.model.indexOf('.spr') > -1) {\r\n        const texture = this.textures.find(a => a.name === entity.model)\r\n        const sprite = this.sprites[entity.model]\r\n        if (texture && sprite) {\r\n          const origin = entity.origin\r\n            ? vec3.fromValues(\r\n                entity.origin[0],\r\n                entity.origin[1],\r\n                entity.origin[2]\r\n              )\r\n            : vec3.create()\r\n          const scale = vec3.fromValues(texture.width, 1, texture.height)\r\n          const angles = entity.angles\r\n            ? vec3.fromValues(\r\n                entity.angles[0],\r\n                entity.angles[2],\r\n                entity.angles[1]\r\n              )\r\n            : vec3.create()\r\n          vec3.scale(scale, scale, entity.scale || 1)\r\n\r\n          mat4.identity(mmx)\r\n          mat4.translate(mmx, mmx, origin)\r\n\r\n          switch (sprite.header.type) {\r\n            case SpriteType.VP_PARALLEL_UPRIGHT: {\r\n              // TODO: incorrect, but will do for now\r\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.FACING_UPRIGHT: {\r\n              // TODO: fix incorrect\r\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.VP_PARALLEL: {\r\n              mat4.rotateZ(\r\n                mmx,\r\n                mmx,\r\n                Math.atan2(\r\n                  origin[1] - camera.position[1],\r\n                  origin[0] - camera.position[0]\r\n                ) +\r\n                  Math.PI / 2\r\n              )\r\n              mat4.rotateX(\r\n                mmx,\r\n                mmx,\r\n                Math.atan2(\r\n                  camera.position[2] - origin[2],\r\n                  Math.sqrt(\r\n                    Math.pow(camera.position[0] - origin[0], 2) +\r\n                      Math.pow(camera.position[1] - origin[1], 2)\r\n                  )\r\n                )\r\n              )\r\n\r\n              break\r\n            }\r\n            case SpriteType.ORIENTED: {\r\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateX(mmx, mmx, (angles[2] * Math.PI) / 180 - Math.PI / 2)\r\n              break\r\n            }\r\n            case SpriteType.VP_PARALLEL_ORIENTED: {\r\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\r\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\r\n              break\r\n            }\r\n            default: {\r\n              throw new Error('Invalid sprite type')\r\n            }\r\n          }\r\n\r\n          mat4.scale(mmx, mmx, scale)\r\n          shader.setModelMatrix(gl, mmx)\r\n          shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n\r\n          const renderMode = entity.rendermode || RenderMode.Normal\r\n          switch (renderMode) {\r\n            case RenderMode.Normal: {\r\n              shader.setOpacity(gl, 1)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Color: {\r\n              // TODO: not properly implemented\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Texture: {\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Glow: {\r\n              // TODO: not properly implemented\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n              break\r\n            }\r\n            case RenderMode.Solid: {\r\n              // TODO: not properly implemented\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              break\r\n            }\r\n            case RenderMode.Additive: {\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\r\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\r\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\r\n              gl.drawArrays(\r\n                gl.TRIANGLES,\r\n                this.sceneInfo.models[this.sceneInfo.models.length - 1].offset /\r\n                  7,\r\n                6\r\n              )\r\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { mat4 } from 'gl-matrix'\r\nimport { Context, Program } from '../Context'\r\n\r\nconst fragmentSrc = `#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\nuniform sampler2D diffuse;\r\nuniform sampler2D lightmap;\r\nuniform float opacity;\r\n\r\nvarying vec2 vTexCoord;\r\nvarying vec2 vLightmapCoord;\r\n\r\nvoid main(void) {\r\n  vec4 diffuseColor = texture2D(diffuse, vTexCoord);\r\n  vec4 lightColor = texture2D(lightmap, vLightmapCoord);\r\n\r\n  gl_FragColor = vec4(diffuseColor.rgb * lightColor.rgb, diffuseColor.a * opacity);\r\n}`\r\n\r\nconst vertexSrc = `#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\nattribute vec3 position;\r\nattribute vec2 texCoord;\r\nattribute vec2 texCoord2;\r\n\r\nvarying vec2 vTexCoord;\r\nvarying vec2 vLightmapCoord;\r\n\r\nuniform mat4 modelMatrix;\r\nuniform mat4 viewMatrix;\r\nuniform mat4 projectionMatrix;\r\n\r\nvoid main(void) {\r\n  vTexCoord = texCoord;\r\n  vLightmapCoord = texCoord2;\r\n\r\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1);\r\n}`\r\n\r\nexport class MainShader {\r\n  static init(context: Context): MainShader | null {\r\n    const attributeNames = ['position', 'texCoord', 'texCoord2']\r\n    const uniformNames: string[] = [\r\n      'modelMatrix',\r\n      'viewMatrix',\r\n      'projectionMatrix',\r\n      'diffuse',\r\n      'lightmap',\r\n      'opacity'\r\n    ]\r\n    const program = context.createProgram({\r\n      vertexShaderSrc: vertexSrc,\r\n      fragmentShaderSrc: fragmentSrc,\r\n      attributeNames,\r\n      uniformNames\r\n    })\r\n    if (!program) {\r\n      console.error('Failed to create MainShader program')\r\n      return null\r\n    }\r\n\r\n    return new MainShader(program)\r\n  }\r\n\r\n  private program: WebGLProgram\r\n  private aPosition: number\r\n  private aTexCoord: number\r\n  private aTexCoord2: number\r\n  private uModelMx: WebGLUniformLocation\r\n  private uViewMx: WebGLUniformLocation\r\n  private uProjectionMx: WebGLUniformLocation\r\n  private uDiffuse: WebGLUniformLocation\r\n  private uLightmap: WebGLUniformLocation\r\n  private uOpacity: WebGLUniformLocation\r\n\r\n  private constructor(program: Program) {\r\n    this.program = program.handle\r\n    this.aPosition = program.attributes['position']\r\n    this.aTexCoord = program.attributes['texCoord']\r\n    this.aTexCoord2 = program.attributes['texCoord2']\r\n    this.uModelMx = program.uniforms['modelMatrix']\r\n    this.uViewMx = program.uniforms['viewMatrix']\r\n    this.uProjectionMx = program.uniforms['projectionMatrix']\r\n    this.uDiffuse = program.uniforms['diffuse']\r\n    this.uLightmap = program.uniforms['lightmap']\r\n    this.uOpacity = program.uniforms['opacity']\r\n  }\r\n\r\n  useProgram(gl: WebGLRenderingContext) {\r\n    gl.useProgram(this.program)\r\n  }\r\n\r\n  setModelMatrix(gl: WebGLRenderingContext, matrix: mat4) {\r\n    gl.uniformMatrix4fv(this.uModelMx, false, matrix)\r\n  }\r\n\r\n  setViewMatrix(gl: WebGLRenderingContext, matrix: mat4) {\r\n    gl.uniformMatrix4fv(this.uViewMx, false, matrix)\r\n  }\r\n\r\n  setProjectionMatrix(gl: WebGLRenderingContext, matrix: mat4) {\r\n    gl.uniformMatrix4fv(this.uProjectionMx, false, matrix)\r\n  }\r\n\r\n  setDiffuse(gl: WebGLRenderingContext, value: number) {\r\n    gl.uniform1i(this.uDiffuse, value)\r\n  }\r\n\r\n  setLightmap(gl: WebGLRenderingContext, val: number) {\r\n    gl.uniform1i(this.uLightmap, val)\r\n  }\r\n\r\n  setOpacity(gl: WebGLRenderingContext, val: number) {\r\n    gl.uniform1f(this.uOpacity, val)\r\n  }\r\n\r\n  enableVertexAttribs(gl: WebGLRenderingContext) {\r\n    gl.enableVertexAttribArray(this.aPosition)\r\n    gl.enableVertexAttribArray(this.aTexCoord)\r\n    gl.enableVertexAttribArray(this.aTexCoord2)\r\n  }\r\n\r\n  setVertexAttribPointers(gl: WebGLRenderingContext) {\r\n    gl.vertexAttribPointer(this.aPosition, 3, gl.FLOAT, false, 7 * 4, 0)\r\n    gl.vertexAttribPointer(this.aTexCoord, 2, gl.FLOAT, false, 7 * 4, 3 * 4)\r\n    gl.vertexAttribPointer(this.aTexCoord2, 2, gl.FLOAT, false, 7 * 4, 5 * 4)\r\n  }\r\n}\r\n","export interface WorldSpawn {\r\n  classname: 'worldspawn'\r\n  wad: string[]\r\n  mapversion: number\r\n  skyname: string\r\n  maxRange: number\r\n  message: string\r\n  sounds: number\r\n  light: number\r\n  waveHeight: number\r\n  startDark: WorldSpawnStartDark\r\n  newUnit: WorldSpawnNewUnit\r\n  gameTitle: WorldSpawnGameTitle\r\n  defaultTeam: WorldSpawnDefaultTeam\r\n}\r\nexport enum WorldSpawnStartDark {\r\n  No = 0,\r\n  Yes = 1 // the level will start black with fade in\r\n}\r\nexport enum WorldSpawnGameTitle {\r\n  No = 0,\r\n  Yes = 1 // \"Half-Life\" will be displayed after the map loads\r\n}\r\nexport enum WorldSpawnNewUnit {\r\n  No = 0,\r\n  Yes = 1 // All previous global triggers will be removed\r\n}\r\nexport enum WorldSpawnDefaultTeam {\r\n  FewestPlayers = 0,\r\n  FirstTeam = 1\r\n}\r\n\r\nexport interface AiScriptedSequence {\r\n  classname: 'aiscripted_sequence'\r\n  m_iszEntity: string\r\n\tm_iszPlay: string\r\n\tm_flRadius: number\r\n\tm_flRepeat: number\r\n\tm_fMoveTo: AiScriptedSequenceMoveTo\r\n\tm_iFinishSchedule: AiScriptedSequenceFinishSchedule\r\n\tspawnflags: AiScriptedSequenceSpawnflags\r\n}\r\nexport enum AiScriptedSequenceMoveTo {\r\n  No = 0,\r\n  Walk = 1,\r\n  Run = 2,\r\n  Instantaneous = 4,\r\n  No_TurnToFace = 5\r\n}\r\nexport enum AiScriptedSequenceFinishSchedule {\r\n  DefaultAI = 0,\r\n  Ambush = 1\r\n}\r\nexport enum AiScriptedSequenceSpawnflags {\r\n  Repeatable = 4,\r\n  LeaveCorpse = 8\r\n}\r\n\r\nexport interface AmbientGeneric {\r\n  classname: 'ambient_generic'\r\n  origin: number[]\r\n  targetName: string\r\n  message: string\r\n  health: number\r\n  preset: AmbientGenericPreset\r\n  startVolume: number\r\n  fadeIn: number\r\n  fadeOut: number\r\n  pitch: number\r\n  pitchStart: number\r\n  spinUp: number\r\n  spinDown: number\r\n  lfoType: number\r\n  lfoRate: number\r\n  lfoModPitch: number\r\n  lfoModVolume: number\r\n  cSpinUp: number\r\n  spawnFlags: AmbientGenericSpawnFlags\r\n}\r\nexport enum AmbientGenericPreset {\r\n  None = 0,\r\n  HugeMachine = 1,\r\n  BigMachine = 2,\r\n  Machine = 3,\r\n  SlowFadeIn = 4,\r\n  FadeIn = 5,\r\n  QuickFadeIn = 6,\r\n  SlowPulse = 7,\r\n  Pulse = 8,\r\n  QuickPulse = 9,\r\n  SlowOscillator = 10,\r\n  Oscillator = 11,\r\n\tQuickOscillator = 12,\r\n\tGrungePitch = 13,\r\n\tVeryLowPitch = 14,\r\n\tLowPitch = 15,\r\n\tHighPitch = 16,\r\n\tVeryHighPitch = 17,\r\n\tScreamingPitch = 18,\r\n\tOscillateSpinUpDown = 19,\r\n\tPulseSpinUpDown = 20,\r\n\tRandomPitch = 21,\r\n\tRandomPitchFast = 22,\r\n\tIncrementalSpinup = 23,\r\n\tAlien = 24,\r\n\tBizzare = 25,\r\n\tPlanetX = 26,\r\n\tHaunted = 27\r\n}\r\nexport enum AmbientGenericSpawnFlags {\r\n  PlayEverywhere = 1,\r\n  SmallRadius = 2,\r\n  MediumRadius = 4,\r\n  LargeRadius = 8,\r\n  StartSilent = 16,\r\n  NotToggled = 32\r\n}\r\n\r\nexport interface Ammo357 {\r\n  classname: 'ammo_357'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface Ammo9mmAR {\r\n  classname: 'ammo_9mmAR'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface Ammo9mmBox {\r\n  classname: 'ammo_9mmbox'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface Ammo9mmClip {\r\n  classname: 'ammo_9mmclip'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface AmmoARGrenades {\r\n  classname: 'ammo_ARgrenades'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface AmmoBuckShot {\r\n  classname: 'ammo_buckshot'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface AmmoCrossBox {\r\n  classname: 'ammo_crossbow'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface AmmoGaussClip {\r\n  classname: 'ammo_gaussclip'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface AmmoRPGClip {\r\n  classname: 'ammo_rpgclip'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  delay: number\r\n  killTarget: string\r\n  spawnFlags: number\r\n}\r\n\r\nexport interface ButtonTarget {\r\n  classname: 'button_target'\r\n  target: string\r\n  master: string\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n  zhltLightFlags: ZHLTLightFlags\r\n  lightOrigin: string\r\n  spawnFlags: ButtonTargetSpawnFlags\r\n}\r\nexport enum ButtonTargetSpawnFlags {\r\n  UseActivates = 1,\r\n  StartOn = 2\r\n}\r\n\r\nexport interface Cycler {\r\n  classname: 'cycler'\r\n  origin: number[]\r\n  angles: number[]\r\n  targetName: string\r\n  model: string\r\n  sequence: string\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n}\r\n\r\nexport interface CyclerSprite {\r\n  classname: 'cycler_sprite'\r\n  origin: number[]\r\n  angles: number[]\r\n  targetName: string\r\n  model: string\r\n  framerate: number\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n}\r\n\r\nexport interface CyclerWeapon {\r\n  classname: 'cycler_weapon'\r\n  origin: number[]\r\n  angles: number[]\r\n  target: string\r\n  targetName: string\r\n  triggerTarget: string\r\n  triggerCondition: CyclerWeaponTriggerCondition\r\n  model: string\r\n  sequence: string\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n}\r\n\r\nexport enum CyclerWeaponTriggerCondition {\r\n  NoTrigger = 0,\r\n  SeePlayerMadAtPlayer = 1,\r\n  TakeDamage = 2,\r\n  HalfHealthRemaining = 3,\r\n  Death = 4,\r\n  HearWorld = 7,\r\n  HearPlayer = 8,\r\n  HearCombat = 9,\r\n  SeePlayerUnconditional = 10,\r\n  SeePlayerNotInCombat = 11\r\n}\r\n\r\nexport interface CyclerWreckage {\r\n  classname: 'cycler_wreckage'\r\n  origin: number[]\r\n  angles: number[]\r\n  targetName: string\r\n  model: string\r\n  framerate: number\r\n  scale: number\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n}\r\n\r\nexport interface EnvBeam {\r\n  classname: 'env_beam',\r\n  renderEffect: RenderEffect\r\n  renderMode: RenderMode\r\n  renderAmmount: number\r\n  renderColor: number[]\r\n  radius: number\r\n\tlife: number\r\n\tboltWidth: number\r\n\tnoiseAmplitude: number\r\n\ttexture: string\r\n\ttextureScroll: number\r\n\tframeRate: number\r\n\tframeStart: number\r\n\tstrikeTime: number\r\n\tdamage: number\r\n\tspawnFlags: EnvBeamSpawnFlags\r\n}\r\n\r\nexport enum EnvBeamSpawnFlags {\r\n  StartOn = 1,\r\n  Toggle = 2,\r\n  RandomStrike = 4,\r\n  Ring = 8,\r\n  StartSparks = 16,\r\n  EndSparks = 32,\r\n  DecalEnd = 64,\r\n  FadeStart = 128,\r\n  FadeEnd = 256\r\n}\r\n\r\nexport enum ZHLTLightFlags {\r\n  Normal = 0,\r\n  EmbeddedFix = 1,\r\n  OpaqueBlockLight = 2,\r\n  OpaqueEmbeddedFix = 3,\r\n  OpaqueConcaveFix = 6\r\n}\r\n\r\nexport enum RenderEffect {\r\n  Normal = 0,\r\n\tSlowPulse = 1, //* Additive or Texture mode only.\r\n  FastPulse = 2, //* Additive or Texture mode only.\r\n  SlowWidePulse = 3, //* Additive or Texture mode only.\r\n  FastWidePulse = 4,  //* Additive or Texture mode only.\r\n  SlowFadeAway = 5,\r\n\tFastFadeAway = 6,\r\n  SlowBecomeSolid = 7,\r\n  FastBecomeSolid = 8,\r\n  SlowStrobe = 9,\r\n  FastStrobe = 10,\r\n  FasterStrobe = 11,\r\n  SlowFlicker = 12,\r\n  FastFlicker = 13,\r\n  //* Constant Glow only affects the Glow rendermode. With this setting, Glow mode behaves\r\n  //* exactly like Additive mode - except that (as is usual for Glow mode) the sprite isn't\r\n  //* obscured by intervening sprites or models.\r\n  ConstantGlow = 14,\r\n  DistortModels = 15,\r\n  HologramDistort = 16\r\n}\r\n\r\nexport enum RenderMode {\r\n  Normal = 0,\r\n  Color = 1,\r\n  Texture = 2,\r\n  Glow = 3,\r\n  Solid = 4,\r\n  Additive = 5\r\n}\r\n\r\nconst parseNumberArray = (a: string) => a.split(' ').map(b => parseFloat(b))\r\n\r\nconst parsers: {\r\n  worldspawn: (entityData: {[name: string]: any}) => WorldSpawn\r\n  aiscripted_sequence: (entityData: {[name: string]: any}) => AiScriptedSequence\r\n  ambient_generic: (entityData: {[name: string]: any}) => AmbientGeneric\r\n  ammo_357: (entityData: {[name: string]: any}) => Ammo357\r\n  ammo_9mmAR: (entityData: {[name: string]: any}) => Ammo9mmAR\r\n  ammo_9mmbox: (entityData: {[name: string]: any}) => Ammo9mmBox\r\n  ammo_9mmclip: (entityData: {[name: string]: any}) => Ammo9mmClip\r\n  ammo_ARgrenades: (entityData: {[name: string]: any}) => AmmoARGrenades\r\n  ammo_buckshot: (entityData: {[name: string]: any}) => AmmoBuckShot\r\n  ammo_crossbow: (entityData: {[name: string]: any}) => AmmoCrossBox\r\n  ammo_gaussclip: (entityData: {[name: string]: any}) => AmmoGaussClip\r\n  ammo_rpgclip: (entityData: {[name: string]: any}) => AmmoRPGClip\r\n  button_target: (entityData: {[name: string]: any}) => ButtonTarget\r\n  cycler: (entityData: {[name: string]: any}) => Cycler\r\n  cycler_sprite: (entityData: {[name: string]: any}) => CyclerSprite\r\n  cyclear_weapon: (entityData: {[name: string]: any}) => CyclerWeapon\r\n  cyclear_wreckage: (entityData: {[name: string]: any}) => CyclerWreckage\r\n  env_beam: (entityData: {[name: string]: any}) => EnvBeam\r\n} = {\r\n  worldspawn: (e) => ({\r\n    classname: 'worldspawn',\r\n    wad: e.wad\r\n      .split(';')\r\n      .filter((a: string) => a.length)\r\n      .map((w: string) => w.replace(/\\\\/g, '/')),\r\n    mapversion: parseInt(e.mapversion),\r\n    skyname: e.skyname,\r\n    maxRange: parseFloat(e.MaxRange) || 8192,\r\n    message: e.message || '',\r\n    sounds: parseInt(e.sounds) || 0,\r\n    light: parseInt(e.light) || 0,\r\n    waveHeight: parseFloat(e.WaveHeight) || 0,\r\n    startDark: parseInt(e.startdark) || 0,\r\n    newUnit: parseInt(e.newunit) || 0,\r\n    defaultTeam: parseInt(e.defaultteam) || 0,\r\n    gameTitle: parseInt(e.gametitle) || 0\r\n  }),\r\n  aiscripted_sequence: (e) => ({\r\n    classname: 'aiscripted_sequence',\r\n    spawnflags: parseInt(e.spawnflags),\r\n    m_iszEntity: e.m_iszEntity,\r\n    m_iszPlay: e.m_iszPlay || '',\r\n    m_flRadius: parseInt(e.m_flRadius) || 512,\r\n    m_flRepeat: parseInt(e.m_flRepeat) || 0,\r\n    m_fMoveTo: parseInt(e.m_fMoveTo) || 0,\r\n    m_iFinishSchedule: parseInt(e.m_iFinishSchedule) || 0,\r\n  }),\r\n  ambient_generic: (e) => ({\r\n    classname: 'ambient_generic',\r\n    origin: parseNumberArray(e.origin),\r\n    targetName: e.targetname,\r\n    message: e.message,\r\n    health: parseInt(e.health) || 10,\r\n    preset: parseInt(e.preset) || 0,\r\n    startVolume: parseInt(e.volstart) || 0,\r\n    fadeIn: parseInt(e.fadein),\r\n    fadeOut: parseInt(e.fadeout),\r\n    pitch: parseInt(e.pitch),\r\n    pitchStart: parseInt(e.pitchstart),\r\n    spinUp: parseInt(e.spinup),\r\n    spinDown: parseInt(e.spindown),\r\n    lfoType: parseInt(e.lfotype),\r\n    lfoRate: parseInt(e.lforate),\r\n    lfoModPitch: parseInt(e.lfomodpitch),\r\n    lfoModVolume: parseInt(e.lfomodvolume),\r\n    cSpinUp: parseInt(e.cspinup),\r\n    spawnFlags: parseInt(e.spawnflags)\r\n  }),\r\n  ammo_357: (e) => ({\r\n    classname: 'ammo_357',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_9mmAR: (e) => ({\r\n    classname: 'ammo_9mmAR',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_9mmbox: (e) => ({\r\n    classname: 'ammo_9mmbox',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_9mmclip: (e) => ({\r\n    classname: 'ammo_9mmclip',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_ARgrenades: (e) => ({\r\n    classname: 'ammo_ARgrenades',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_buckshot: (e) => ({\r\n    classname: 'ammo_buckshot',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_crossbow: (e) => ({\r\n    classname: 'ammo_crossbow',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_gaussclip: (e) => ({\r\n    classname: 'ammo_gaussclip',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  ammo_rpgclip: (e) => ({\r\n    classname: 'ammo_rpgclip',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname || '',\r\n    delay: parseInt(e.delay) || 0,\r\n    killTarget: e.killtarget || '',\r\n    spawnFlags: e.spawnflags || 0\r\n  }),\r\n  button_target: (e) => ({\r\n    classname: 'button_target',\r\n    target: e.target,\r\n    master: e.master,\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0'),\r\n    zhltLightFlags: parseInt(e.zhlt_lightflags) || 0,\r\n    lightOrigin: e.light_origin,\r\n    spawnFlags: parseInt(e.spawnflags) || 1\r\n  }),\r\n  cycler: (e) => ({\r\n    classname: 'cycler',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    targetName: e.targetname,\r\n    model: e.model,\r\n    sequence: e.sequence || '',\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\r\n  }),\r\n  cycler_sprite: (e) => ({\r\n    classname: 'cycler_sprite',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    targetName: e.targetname,\r\n    model: e.model,\r\n    framerate: parseInt(e.framerate || '10'),\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\r\n  }),\r\n  cyclear_weapon: (e) => ({\r\n    classname: 'cycler_weapon',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    target: e.target,\r\n    targetName: e.targetname,\r\n    triggerTarget: e.TriggerTarget || '',\r\n    triggerCondition: parseInt(e.TriggerCondition) || 0,\r\n    model: e.model,\r\n    sequence: e.sequence,\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\r\n  }),\r\n  cyclear_wreckage: (e) => ({\r\n    classname: 'cycler_wreckage',\r\n    origin: parseNumberArray(e.origin),\r\n    angles: parseNumberArray(e.angles),\r\n    targetName: e.targetname,\r\n    model: e.model,\r\n    framerate: parseInt(e.framerate) || 10,\r\n    scale: parseFloat(e.scale) || 1.0,\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\r\n  }),\r\n  env_beam: (e) => ({\r\n    classname: 'env_beam',\r\n    renderEffect: parseInt(e.renderfx) || 0,\r\n    renderMode: parseInt(e.rendermode) || 0,\r\n    renderAmmount: parseInt(e.renderamt) || 255,\r\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0'),\r\n    radius: parseFloat(e.Radius) || 256,\r\n    life: parseInt(e.life) || 1,\r\n    boltWidth: parseInt(e.BoltWidth) || 20,\r\n    noiseAmplitude: parseInt(e.NoiseAmplitude) || 0,\r\n    texture: e.texture || 'sprites/laserbeam.spr',\r\n    textureScroll: parseInt(e.TextureScroll) || 35,\r\n    frameRate: parseInt(e.framerate) || 0,\r\n    frameStart: parseInt(e.framestart) || 0,\r\n    strikeTime: parseInt(e.StrikeTime) || 1,\r\n    damage: parseInt(e.damage) || 1,\r\n    spawnFlags: parseInt(e.spawnflags)\r\n  })\r\n}\r\n\r\n// env_beverage (Half-Life)\r\n// env_blood (Half-Life)\r\n// env_bubbles (Half-Life)\r\n// env_explosion (Half-Life)\r\n// env_fade (Half-Life)\r\n// env_funnel (Half-Life)\r\n// env_global (Half-Life)\r\n// env_glow (Half-Life)\r\n// env_laser (Half-Life)\r\n// env_message (Half-Life)\r\n// env_render (Half-Life)\r\n// env_shake (Half-Life)\r\n// env_shooter (Half-Life)\r\n// env_sound (Half-Life)\r\n// env_spark (Half-Life)\r\n// env_sprite (Half-Life)\r\n// func_breakable (Half-Life)\r\n// func_button (Half-Life)\r\n// func_conveyor (Half-Life)\r\n// func_door (Half-Life)\r\n// func_door_rotating (Half-Life)\r\n// func_friction (Half-Life)\r\n// func_guntarget (Half-Life)\r\n// func_healthcharge (Half-Life)\r\n// func_illusionary (Half-Life)\r\n// func_ladder (Half-Life)\r\n// func_minicompo (Half-Life)\r\n// func_monsterclip (Half-Life)\r\n// func_mortar_field (Half-Life)\r\n// func_pendulum (Half-Life)\r\n// func_plat (Half-Life)\r\n// func_platrot (Half-Life)\r\n// func_pushable (Half-Life)\r\n// func_recharge (Half-Life)\r\n// func_rot_button (Half-Life)\r\n// func_rotating (Half-Life)\r\n// func_tank (Half-Life)\r\n// func_tankcontrols (Half-Life)\r\n// func_tanklaser (Half-Life)\r\n// func_tankmortar (Half-Life)\r\n// func_tankrocket (Half-Life)\r\n// func_trackautochange (Half-Life)\r\n// func_trackchange (Half-Life)\r\n// func_tracktrain (Half-Life)\r\n// func_train (Half-Life)\r\n// func_traincontrols (Half-Life)\r\n// func_wall (Half-Life)\r\n// func_wall_toggle (Half-Life)\r\n// func_water (Half-Life)\r\n// game_counter (Half-Life)\r\n// game_counter_set (Half-Life)\r\n// game_end (Half-Life)\r\n// game_player_equip (Half-Life)\r\n// game_player_hurt (Half-Life)\r\n// game_player_team (Half-Life)\r\n// game_score (Half-Life)\r\n// game_team_master (Half-Life)\r\n// game_team_set (Half-Life)\r\n// game_text (Half-Life)\r\n// game_zone_player (Half-Life)\r\n// gibshooter (Half-Life)\r\n// info_bigmomma (Half-Life)\r\n// info_intermission (Half-Life)\r\n// info_landmark (Half-Life)\r\n// info_node (Half-Life)\r\n// info_node_air (Half-Life)\r\n// info_null (Half-Life)\r\n// info_player_coop (Half-Life)\r\n// info_player_deathmatch (Half-Life)\r\n// info_player_start (Half-Life)\r\n// info_target (Half-Life)\r\n// info_teleport_destination (Half-Life)\r\n// info_texlights (Half-Life)\r\n// infodecal (Half-Life)\r\n// item_airtank (Half-Life)\r\n// item_antidote (Half-Life)\r\n// item_battery (Half-Life)\r\n// item_healthkit (Half-Life)\r\n// item_longjump (Half-Life)\r\n// item_security (Half-Life)\r\n// item_sodacan (Half-Life)\r\n// item_suit (Half-Life)\r\n// light (Half-Life)\r\n// light_environment (Half-Life)\r\n// light_spot (Half-Life)\r\n// momentary_door (Half-Life)\r\n// momentary_rot_button (Half-Life)\r\n// monster_alien_controller (Half-Life)\r\n// monster_alien_grunt (Half-Life)\r\n// monster_alien_slave (Half-Life)\r\n// monster_apache (Half-Life)\r\n// monster_babycrab (Half-Life)\r\n// monster_barnacle (Half-Life)\r\n// monster_barney (Half-Life)\r\n// monster_barney_dead (Half-Life)\r\n// monster_bigmomma (Half-Life)\r\n// monster_bloater (Half-Life)\r\n// monster_bullchicken (Half-Life)\r\n// monster_cockroach (Half-Life)\r\n// monster_flyer_flock (Half-Life)\r\n// monster_furniture (Half-Life)\r\n// monster_gargantua (Half-Life)\r\n// monster_generic (Half-Life)\r\n// monster_gman (Half-Life)\r\n// monster_grunt_repel (Half-Life)\r\n// monster_handgrenade (Half-Life)\r\n// monster_headcrab (Half-Life)\r\n// monster_hevsuit_dead (Half-Life)\r\n// monster_hgrunt_dead (Half-Life)\r\n// monster_houndeye (Half-Life)\r\n// monster_human_assassin (Half-Life)\r\n// monster_human_grunt (Half-Life)\r\n// monster_ichthyosaur (Half-Life)\r\n// monster_leech (Half-Life)\r\n// monster_miniturret (Half-Life)\r\n// monster_nihilanth (Half-Life)\r\n// monster_osprey (Half-Life)\r\n// monster_rat (Half-Life)\r\n// monster_satchelcharge (Half-Life)\r\n// monster_scientist (Half-Life)\r\n// monster_scientist_dead (Half-Life)\r\n// monster_sentry (Half-Life)\r\n// monster_sitting_scientist (Half-Life)\r\n// monster_snark (Half-Life)\r\n// monster_tentacle (Half-Life)\r\n// monster_tripmine (Half-Life)\r\n// monster_turret (Half-Life)\r\n// monster_zombie (Half-Life)\r\n// monstermaker (Half-Life)\r\n// multi_manager (Half-Life)\r\n// multisource (Half-Life)\r\n// path_corner (Half-Life)\r\n// path_track (Half-Life)\r\n// player_loadsaved (Half-Life)\r\n// player_weaponstrip (Half-Life)\r\n// scripted_sentence (Half-Life)\r\n// scripted_sequence (Half-Life)\r\n// speaker (Half-Life)\r\n// target_cdaudio (Half-Life)\r\n// trigger_auto (Half-Life)\r\n// trigger_autosave (Half-Life)\r\n// trigger_camera (Half-Life)\r\n// trigger_cdaudio (Half-Life)\r\n// trigger_changelevel (Half-Life)\r\n// trigger_changetarget (Half-Life)\r\n// trigger_counter (Half-Life)\r\n// trigger_endsection (Half-Life)\r\n// trigger_gravity (Half-Life)\r\n// trigger_hurt (Half-Life)\r\n// trigger_monsterjump (Half-Life)\r\n// trigger_multiple (Half-Life)\r\n// trigger_once (Half-Life)\r\n// trigger_push (Half-Life)\r\n// trigger_relay (Half-Life)\r\n// trigger_teleport (Half-Life)\r\n// trigger_transition (Half-Life)\r\n// weapon_357 (Half-Life)\r\n// weapon_9mmAR (Half-Life)\r\n// weapon_9mmhandgun (Half-Life)\r\n// weapon_crossbow (Half-Life)\r\n// weapon_crowbar (Half-Life)\r\n// weapon_egon (Half-Life)\r\n// weapon_gauss (Half-Life)\r\n// weapon_handgrenade (Half-Life)\r\n// weapon_hornetgun (Half-Life)\r\n// weapon_rpg (Half-Life)\r\n// weapon_satchel (Half-Life)\r\n// weapon_shotgun (Half-Life)\r\n// weapon_snark (Half-Life)\r\n// weapon_tripmine (Half-Life)\r\n// weaponbox (Half-Life)\r\n// world_items (Half-Life)\r\n// worldspawn (Half-Life)\r\n// xen_hair (Half-Life)\r\n// xen_plantlight (Half-Life)\r\n// xen_spore_large (Half-Life)\r\n// xen_spore_medium (Half-Life)\r\n// xen_spore_small (Half-Life)\r\n// xen_tree (Half-Life)\r\n\r\nexport interface FuncBreakable {\r\n  classname: 'func_breakable'\r\n}\r\n\r\nexport interface BadEntity {\r\n  classname: '!'\r\n  data: any\r\n}\r\n\r\nexport interface UnknownEntity {\r\n  classname: '?'\r\n  originalClassname: string\r\n  data: any\r\n}\r\n\r\nexport type Entity = WorldSpawn | FuncBreakable | BadEntity | UnknownEntity\r\n\r\nexport class BspEntityParser {\r\n  static parse(entities: any[]): Entity[] {\r\n    const arr: Entity[] = []\r\n\r\n    for (let i = 0; i < entities.length; ++i) {\r\n      const e = entities[i]\r\n\r\n      if (!e.classname) {\r\n        arr.push({\r\n          classname: '!',\r\n          data: e\r\n        })\r\n      }\r\n\r\n      if ((parsers as any)[e.classname]) {\r\n        arr.push((parsers as any)[e.classname](e))\r\n      } else {\r\n        arr.push({\r\n          classname: '?',\r\n          originalClassname: e.classname,\r\n          data: e\r\n        })\r\n      }\r\n    }\r\n\r\n    return arr\r\n  }\r\n}\r\n","export const resizeTexture = (\r\n  pixels: Uint8Array,\r\n  width: number,\r\n  height: number,\r\n  newWidth: number,\r\n  newHeight: number\r\n) => {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')\r\n  if (!ctx) {\r\n    throw new Error('Runtime error.')\r\n  }\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  const nc = document.createElement('canvas')\r\n  const nctx = nc.getContext('2d')\r\n  if (!nctx) {\r\n    throw new Error('Runtime error.')\r\n  }\r\n  nc.width = newWidth\r\n  nc.height = newHeight\r\n\r\n  const cid = ctx.createImageData(width, height)\r\n  for (let i = 0, size = width * height * 4; i < size; i += 4) {\r\n    cid.data[i] = pixels[i]\r\n    cid.data[i + 1] = pixels[i + 1]\r\n    cid.data[i + 2] = pixels[i + 2]\r\n    cid.data[i + 3] = pixels[i + 3]\r\n  }\r\n  ctx.putImageData(cid, 0, 0)\r\n\r\n  nctx.drawImage(canvas, 0, 0, newWidth, newHeight)\r\n\r\n  return new Uint8Array(nctx.getImageData(0, 0, newWidth, newHeight).data)\r\n}\r\n\r\nexport const isPowerOfTwo = (n: number) => (n & (n - 1)) === 0\r\n\r\nexport const nextPowerOfTwo = (n: number) => {\r\n  --n\r\n  for (let i = 1; i < 32; i <<= 1) {\r\n    n = n | (n >> i)\r\n  }\r\n  return n + 1\r\n}","type ConfigPaths = {\r\n  base: string\r\n  replays: string\r\n  maps: string\r\n  wads: string\r\n  skies: string\r\n  sounds: string\r\n}\r\n\r\nexport class Config {\r\n  public static init(params: any): Config {\r\n    if (typeof params === 'string') {\r\n      return new Config({\r\n        paths: {\r\n          base: params,\r\n          replays: `${params}/replays`,\r\n          maps: `${params}/maps`,\r\n          wads: `${params}/wads`,\r\n          skies: `${params}/skies`,\r\n          sounds: `${params}/sounds`\r\n        }\r\n      })\r\n    } else {\r\n      return new Config({\r\n        paths: {\r\n          base: (params && params.paths && params.paths.base) || '',\r\n          replays: (params && params.paths && params.paths.replays) || '/replays',\r\n          maps: (params && params.paths && params.paths.maps) || '/maps',\r\n          wads: (params && params.paths && params.paths.wads) || '/wads',\r\n          skies: (params && params.paths && params.paths.skies) || '/skies',\r\n          sounds: (params && params.paths && params.paths.sounds) || '/sounds'\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  private paths: ConfigPaths\r\n\r\n  constructor(params: { paths: ConfigPaths }) {\r\n    this.paths = { ...params.paths }\r\n  }\r\n\r\n  getBasePath() {\r\n    return this.paths.base\r\n  }\r\n  getReplaysPath() {\r\n    return this.paths.replays\r\n  }\r\n  getMapsPath() {\r\n    return this.paths.maps\r\n  }\r\n  getWadsPath() {\r\n    return this.paths.wads\r\n  }\r\n  getSkiesPath() {\r\n    return this.paths.skies\r\n  }\r\n  getSoundsPath() {\r\n    return this.paths.sounds\r\n  }\r\n}\r\n","import { h, render } from 'preact'\r\nimport { Game } from '../Game'\r\nimport { Root } from './Root'\r\n\r\nexport class PlayerInterface {\r\n  private game: Game\r\n  private rootNode: Element\r\n\r\n  constructor(game: Game, rootNode: Element) {\r\n    this.game = game\r\n    this.rootNode = rootNode\r\n  }\r\n\r\n  getRootNode() {\r\n    return this.rootNode\r\n  }\r\n\r\n  draw() {\r\n    render(<Root game={this.game} root={this.rootNode} />, this.rootNode)\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { Loading } from './Loading'\r\nimport { FreeMode } from './FreeMode'\r\nimport { ReplayMode } from './ReplayMode'\r\nimport { Fullscreen } from '../Fullscreen'\r\nimport { Game, PlayerMode } from '../Game'\r\nimport { RootStyle as s } from './Root.style'\r\n\r\ninterface RootProps {\r\n  game: Game\r\n  root: Element\r\n}\r\n\r\ninterface RootState {\r\n  title: string\r\n  isActive: boolean\r\n  isLoading: boolean\r\n  isMouseOver: boolean\r\n  isVisible: boolean\r\n}\r\n\r\nexport class Root extends Component<RootProps, RootState> {\r\n  private node: HTMLDivElement | null = null\r\n  private fadeOut: any = 0\r\n  private offLoadStart?: Unsubscribe\r\n  private offLoad?: Unsubscribe\r\n  private offModeChange?: Unsubscribe\r\n  private offTitleChange?: Unsubscribe\r\n\r\n  constructor(props: RootProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      title: props.game.title,\r\n      isActive: false,\r\n      isLoading: false,\r\n      isMouseOver: false,\r\n      isVisible: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.node) {\r\n      return\r\n    }\r\n\r\n    const game = this.props.game\r\n    const root = this.props.root\r\n\r\n    this.node.appendChild(game.getCanvas())\r\n\r\n    this.offLoadStart = game.events.on('loadstart', this.onLoadStart)\r\n    this.offLoad = game.events.on('load', this.onLoadEnd)\r\n    this.offModeChange = game.events.on('modechange', this.onModeChange)\r\n    this.offTitleChange = game.events.on('titlechange', this.onTitleChange)\r\n\r\n    root.addEventListener('click', this.onRootClick)\r\n    window.addEventListener('click', this.onWindowClick)\r\n    window.addEventListener('keydown', this.onKeyDown)\r\n    document.addEventListener(\r\n      'pointerlockchange',\r\n      this.onPointerLockChange,\r\n      false\r\n    )\r\n\r\n    root.addEventListener('mouseover', this.onMouseEnter)\r\n    root.addEventListener('mousemove', this.onMouseMove)\r\n    root.addEventListener('mouseout', this.onMouseLeave)\r\n    root.addEventListener('contextmenu', this.onContextMenu)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const root = this.props.root\r\n\r\n    this.offLoadStart && this.offLoadStart()\r\n    this.offLoad && this.offLoad()\r\n    this.offModeChange && this.onModeChange()\r\n    this.offTitleChange && this.offTitleChange()\r\n\r\n    root.removeEventListener('click', this.onRootClick)\r\n    window.removeEventListener('click', this.onWindowClick)\r\n    window.removeEventListener('keydown', this.onKeyDown)\r\n    document.removeEventListener(\r\n      'pointerlockchange',\r\n      this.onPointerLockChange,\r\n      false\r\n    )\r\n\r\n    root.removeEventListener('mouseover', this.onMouseEnter)\r\n    root.removeEventListener('mousemove', this.onMouseMove)\r\n    root.removeEventListener('mouseout', this.onMouseLeave)\r\n    root.removeEventListener('contextmenu', this.onContextMenu)\r\n  }\r\n\r\n  onPointerLockChange = () => {\r\n    if (document.pointerLockElement === this.props.root) {\r\n      this.props.game.pointerLocked = true\r\n    } else {\r\n      this.props.game.pointerLocked = false\r\n    }\r\n  }\r\n\r\n  onContextMenu = (e: Event) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  onWindowClick = () => {\r\n    this.setState({ isActive: false })\r\n  }\r\n\r\n  onRootClick = (e: Event) => {\r\n    e.stopPropagation()\r\n    this.setState({ isActive: true })\r\n    this.fadeReset()\r\n  }\r\n\r\n  onKeyDown = (e: KeyboardEvent) => {\r\n    if (!this.state.isActive) {\r\n      return\r\n    }\r\n\r\n    const game = this.props.game\r\n\r\n    switch (e.which) {\r\n      case 70: {\r\n        // F\r\n        if (Fullscreen.isInFullscreen()) {\r\n          Fullscreen.exit()\r\n        } else {\r\n          Fullscreen.enter(this.props.root)\r\n        }\r\n        this.fadeReset()\r\n        break\r\n      }\r\n\r\n      case 77: {\r\n        // M\r\n        game.soundSystem.toggleMute()\r\n        this.fadeReset()\r\n        break\r\n      }\r\n\r\n      case 38: {\r\n        // arrow up\r\n        game.soundSystem.setVolume(game.soundSystem.getVolume() + 0.05)\r\n        this.fadeReset()\r\n        break\r\n      }\r\n      case 40: {\r\n        // arrow down\r\n        game.soundSystem.setVolume(game.soundSystem.getVolume() - 0.05)\r\n        this.fadeReset()\r\n        break\r\n      }\r\n\r\n      case 74: // J\r\n      case 37: {\r\n        // arrow left\r\n        game.player.seek(game.player.currentTime - 5)\r\n        this.fadeReset()\r\n        break\r\n      }\r\n      case 76: // L\r\n      case 39: {\r\n        // arrow right\r\n        game.player.seek(game.player.currentTime + 5)\r\n        this.fadeReset()\r\n        break\r\n      }\r\n\r\n      case 75: // K\r\n      case 32: {\r\n        // space\r\n        if (this.props.game.mode !== PlayerMode.REPLAY) {\r\n          return\r\n        }\r\n\r\n        if (!game.player.isPlaying || game.player.isPaused) {\r\n          game.player.play()\r\n        } else {\r\n          game.player.pause()\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  onModeChange = () => {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  onLoadStart = () => {\r\n    this.setState({ isLoading: true })\r\n  }\r\n\r\n  onLoadEnd = () => {\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  onTitleChange = (title: string) => {\r\n    this.setState({ title })\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({ isMouseOver: true })\r\n    this.fadeReset()\r\n  }\r\n\r\n  onMouseMove = () => {\r\n    if (this.state.isMouseOver && !Fullscreen.isInFullscreen()) {\r\n      this.fadeReset()\r\n    }\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({\r\n      isMouseOver: false,\r\n      isVisible: false\r\n    })\r\n\r\n    clearTimeout(this.fadeOut)\r\n    this.fadeOut = 0\r\n  }\r\n\r\n  fadeReset = () => {\r\n    if (!this.state.isVisible) {\r\n      this.setState({ isVisible: true })\r\n    }\r\n\r\n    clearTimeout(this.fadeOut)\r\n    this.fadeOut = setTimeout(() => {\r\n      this.setState({ isVisible: false })\r\n      this.fadeOut = 0\r\n    }, 5000)\r\n  }\r\n\r\n  onScreenClick = () => {\r\n    switch (this.props.game.mode) {\r\n      case PlayerMode.REPLAY: {\r\n        const player = this.props.game.player\r\n        if (!player.isPlaying || player.isPaused) {\r\n          player.play()\r\n        } else {\r\n          player.pause()\r\n        }\r\n        break\r\n      }\r\n\r\n      case PlayerMode.FREE: {\r\n        this.props.root.requestPointerLock()\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  onScreenDblClick = () => {\r\n    if (Fullscreen.isInFullscreen()) {\r\n      Fullscreen.exit()\r\n    } else {\r\n      Fullscreen.enter(this.props.root)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const game = this.props.game\r\n    const isVisible = this.state.isVisible\r\n\r\n    return (\r\n      <div class={isVisible ? s.rootVisible : s.root}>\r\n        <div class={isVisible ? s.titleVisible : s.title}>\r\n          {this.state.title}\r\n        </div>\r\n\r\n        <Loading game={game} visible={this.state.isLoading} />\r\n\r\n        <div\r\n          class={s.screen}\r\n          ref={node => (this.node = node)}\r\n          onClick={this.onScreenClick}\r\n          onDblClick={this.onScreenDblClick}\r\n        />\r\n\r\n        {game.mode === PlayerMode.FREE ? (\r\n          <FreeMode\r\n            class={isVisible ? s.controlsVisible : s.controls}\r\n            game={game}\r\n            root={this.props.root}\r\n          />\r\n        ) : (\r\n          <ReplayMode\r\n            class={isVisible ? s.controlsVisible : s.controls}\r\n            game={game}\r\n            root={this.props.root}\r\n            visible={this.state.isMouseOver}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { Game } from '../../Game'\r\nimport { LoadItem } from '../../Loader'\r\nimport { LoadingStyle as s } from './style'\r\n\r\ninterface LoadingProps {\r\n  game: Game\r\n  visible: boolean\r\n}\r\n\r\ninterface LoadingState {\r\n  items: {\r\n    [name: string]: {\r\n      name: string\r\n      progress: number\r\n    }[]\r\n  }\r\n}\r\n\r\nconst itemTypeGroupName: { [name: string]: string } = {\r\n  replay: 'Replay',\r\n  bsp: 'Map',\r\n  sound: 'Sounds',\r\n  sky: 'Skybox',\r\n  sprite: 'Sprites',\r\n  wad: 'Wads'\r\n}\r\n\r\nexport class Loading extends Component<LoadingProps, LoadingState> {\r\n  private offLoadStart?: Unsubscribe\r\n  private offProgress?: Unsubscribe\r\n\r\n  state: LoadingState = {\r\n    items: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const loaderEvents = this.props.game.loader.events\r\n    this.offLoadStart = loaderEvents.on('loadstart', this.onItemLoad)\r\n    this.offProgress = loaderEvents.on('progress', this.onItemProgress)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.offLoadStart && this.offLoadStart()\r\n    this.offProgress && this.offProgress()\r\n  }\r\n\r\n  onItemLoad = (item: LoadItem) => {\r\n    const items = this.state.items[item.type] ? this.state.items[item.type] : []\r\n\r\n    for (let i = 0; i < items.length; ++i) {\r\n      if (items[i] === item) {\r\n        return\r\n      }\r\n    }\r\n\r\n    items.push({\r\n      name: item.name,\r\n      progress: 0\r\n    })\r\n\r\n    this.setState({\r\n      items: {\r\n        ...this.state.items,\r\n        [item.type]: items\r\n      }\r\n    })\r\n  }\r\n\r\n  onItemProgress = (item: any) => {\r\n    if (!this.state.items[item.type]) {\r\n      return\r\n    }\r\n\r\n    const items = this.state.items[item.type]\r\n\r\n    for (let i = 0; i < items.length; ++i) {\r\n      if (items[i].name === item.name) {\r\n        items[i].progress = item.progress\r\n        break\r\n      }\r\n    }\r\n\r\n    this.forceUpdate()\r\n  }\r\n\r\n  formatItem(name: string, progress: number) {\r\n    name = itemTypeGroupName[name]\r\n    const status = Math.round(progress * 100) + '%'\r\n\r\n    let length = 29 - name.length - status.length\r\n    if (length < 2) {\r\n      length = 9 - status.length\r\n    }\r\n\r\n    const dots = Array(length).join('.')\r\n\r\n    return `${name}${dots}${status}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class={this.props.visible ? s.loading : s.loadingHidden}>\r\n        <div class={s.spinner}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            width=\"80px\"\r\n            height=\"80px\"\r\n            viewBox=\"0 0 80 80\"\r\n            xmlSpace=\"preserve\"\r\n          >\r\n            <path\r\n              fill=\"#ffffff\"\r\n              width=\"10px\"\r\n              d=\"M40,72C22.4,72,8,57.6,8,40C8,22.4,22.4,8,40,8c17.6,0,32,14.4,32,32c0,1.1-0.9,2-2,2s-2-0.9-2-2c0-15.4-12.6-28-28-28S12,24.6,12,40s12.6,28,28,28c1.1,0,2,0.9,2,2S41.1,72,40,72z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        <ul class={s.log}>\r\n          {Object.entries(this.state.items).map(([name, items]) => (\r\n            <li key={name} class={s.logItem}>\r\n              {this.formatItem(\r\n                name,\r\n                items.reduce((prev, cur) => prev + cur.progress, 0) /\r\n                  items.length\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { stylesheet, keyframes } from 'typestyle'\r\n\r\nconst loadingStyle = () => ({\r\n  position: 'relative' as 'relative',\r\n  width: '100%',\r\n  height: '100%',\r\n  opacity: 1,\r\n  transition: 'opacity 2s ease, z-index 1s linear',\r\n  zIndex: 30\r\n})\r\n\r\nexport const LoadingStyle = stylesheet({\r\n  loading: {\r\n    ...loadingStyle()\r\n  },\r\n  loadingHidden: {\r\n    ...loadingStyle(),\r\n    opacity: 0,\r\n    userSelect: 'none',\r\n    zIndex: 0\r\n  },\r\n  spinner: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    marginLeft: '-40px',\r\n    marginTop: '-40px',\r\n    animation: 'rotate 1s linear 0s infinite',\r\n    height: '80px',\r\n    width: '80px',\r\n    animationName: keyframes({\r\n      from: { transform: 'rotate(0deg)' },\r\n      to: { transform: 'rotate(360deg)' }\r\n    })\r\n  },\r\n  log: {\r\n    position: 'absolute',\r\n    background: 'rgba(0,0,0,0.4)',\r\n    padding: '10px',\r\n    fontFamily: 'monospace',\r\n    margin: '0',\r\n    top: '16px',\r\n    right: 0,\r\n    paddingLeft: '16px',\r\n    listStyle: 'none'\r\n  },\r\n  logItem: {\r\n    display: 'block'\r\n  }\r\n})\r\n","import { h } from 'preact'\r\nimport { classes } from 'typestyle'\r\nimport { Game } from '../../Game'\r\nimport { FreeModeStyle as s } from './style'\r\nimport { ControlsStyle as cs } from '../Controls.style'\r\nimport { SettingsButton } from '../Buttons/SettingsButton'\r\nimport { FullscreenButton } from '../Buttons/FullscreenButton'\r\n\r\nexport function FreeMode(props: { class: string; game: Game; root: Element }) {\r\n  return (\r\n    <div class={classes(props.class, s.controls)}>\r\n      <div class={cs.buttons}>\r\n        <div class={cs.left} />\r\n        <div class={cs.right}>\r\n          <SettingsButton game={props.game} />\r\n          <FullscreenButton active={false} root={props.root} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const FreeModeStyle = stylesheet({\r\n  controls: {\r\n    height: '44px'\r\n  }\r\n})\r\n","import { stylesheet } from 'typestyle'\r\n\r\nconst menuStyle = () => ({\r\n  display: 'none',\r\n  position: 'absolute' as 'absolute',\r\n  left: '-38px',\r\n  bottom: '48px',\r\n  padding: '2px 6px',\r\n  fontSize: '14px',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  flexFlow: 'column',\r\n  minWidth: '100px'\r\n})\r\n\r\nconst menuItemStyle = () => ({\r\n  cursor: 'pointer',\r\n  margin: '4px 0',\r\n  padding: '4px',\r\n  $nest: {\r\n    '&:last-child': {\r\n      marginTop: 0\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n    }\r\n  }\r\n})\r\n\r\nexport const SettingsButtonStyle = stylesheet({\r\n  settings: {\r\n    position: 'relative'\r\n  },\r\n  menu: {\r\n    ...menuStyle()\r\n  },\r\n  menuOpen: {\r\n    ...menuStyle(),\r\n    display: 'flex'\r\n  },\r\n  menuItemTitle: {\r\n    padding: '6px 4px',\r\n    borderBottom: '1px solid white',\r\n    fontWeight: 'bold'\r\n  },\r\n  menuItem: {\r\n    ...menuItemStyle()\r\n  },\r\n  menuItemSelected: {\r\n    ...menuItemStyle(),\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2) !important'\r\n  },\r\n  button: {\r\n    width: '32px',\r\n    height: '32px',\r\n    padding: '5px'\r\n  }\r\n})\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const FullscreenButtonStyle = stylesheet({\r\n  button: {\r\n    width: '30px',\r\n    minWidth: '30px',\r\n    height: '30px',\r\n    padding: '5px'\r\n  }\r\n})\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { Time } from '../Time'\r\nimport { Game } from '../../Game'\r\nimport { TimeLine } from '../TimeLine'\r\nimport { VolumeControl } from '../VolumeControl'\r\nimport { PlayButton } from '../Buttons/PlayButton'\r\nimport { PauseButton } from '../Buttons/PauseButton'\r\nimport { VolumeButton } from '../Buttons/VolumeButton'\r\nimport { SpeedUpButton } from '../Buttons/SpeedUpButton'\r\nimport { SpeedDownButton } from '../Buttons/SpeedDownButton'\r\nimport { SettingsButton } from '../Buttons/SettingsButton'\r\nimport { FullscreenButton } from '../Buttons/FullscreenButton'\r\nimport { ControlsStyle as cs } from '../Controls.style'\r\n\r\ninterface ReplayModeProps {\r\n  class: string\r\n  game: Game\r\n  root: Element\r\n  visible: boolean\r\n}\r\n\r\nexport class ReplayMode extends Component<ReplayModeProps> {\r\n  private offPlay?: Unsubscribe\r\n  private offPause?: Unsubscribe\r\n  private offStop?: Unsubscribe\r\n\r\n  componentDidMount() {\r\n    this.offPlay = this.props.game.player.events.on('play', this.onPlayStateChange)\r\n    this.offPause = this.props.game.player.events.on('pause', this.onPlayStateChange)\r\n    this.offStop = this.props.game.player.events.on('stop', this.onPlayStateChange)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.offPlay && this.offPlay()\r\n    this.offPause && this.offPause()\r\n    this.offStop && this.offStop()\r\n  }\r\n\r\n  onPlayClick = () => {\r\n    this.props.game.player.play()\r\n  }\r\n\r\n  onPauseClick = () => {\r\n    this.props.game.player.pause()\r\n  }\r\n\r\n  onSpeedDown = () => {\r\n    this.props.game.player.speedDown()\r\n  }\r\n\r\n  onSpeedUp = () => {\r\n    this.props.game.player.speedUp()\r\n  }\r\n\r\n  onVolumeClick = () => {\r\n    this.props.game.soundSystem.toggleMute()\r\n  }\r\n\r\n  onPlayStateChange = () => {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  render() {\r\n    const game = this.props.game\r\n    const player = game.player\r\n    const playing = player.isPlaying\r\n    const paused = player.isPaused\r\n\r\n    return (\r\n      <div class={this.props.class}>\r\n        <TimeLine game={game} />\r\n\r\n        <div class={cs.buttons}>\r\n          <div class={cs.left}>\r\n            <SpeedDownButton onClick={this.onSpeedDown} />\r\n            {paused || !playing ? (\r\n              <PlayButton onClick={this.onPlayClick} />\r\n            ) : (\r\n              <PauseButton onClick={this.onPauseClick} />\r\n            )}\r\n            <SpeedUpButton onClick={this.onSpeedUp} />\r\n            <VolumeButton onClick={this.onVolumeClick} />\r\n            <VolumeControl game={game} />\r\n            <Time player={player} />\r\n          </div>\r\n\r\n          <div class={cs.right}>\r\n            <SettingsButton game={game} />\r\n            <FullscreenButton active={true} root={this.props.root} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { formatTime } from '../../Time'\r\nimport { ReplayPlayer } from '../../ReplayPlayer'\r\nimport { Time as s } from './style'\r\n\r\ninterface TimeProps {\r\n  player: ReplayPlayer\r\n}\r\n\r\ninterface TimeState {\r\n  isPlaying: boolean\r\n}\r\n\r\nexport class Time extends Component<TimeProps, TimeState> {\r\n  private offPlay?: Unsubscribe\r\n  private offPause?: Unsubscribe\r\n  private offStop?: Unsubscribe\r\n\r\n  componentDidMount() {\r\n    this.offPlay = this.props.player.events.on('play', this.onPlay)\r\n    this.offPause = this.props.player.events.on('pause', this.onPauseOrStop)\r\n    this.offStop = this.props.player.events.on('stop', this.onPauseOrStop)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.offPlay && this.offPlay()\r\n    this.offPause && this.offPause()\r\n    this.offStop && this.offStop()\r\n  }\r\n\r\n  onPlay = () => {\r\n    this.setState(\r\n      {\r\n        isPlaying: true\r\n      },\r\n      this.update\r\n    )\r\n  }\r\n\r\n  onPauseOrStop = () => {\r\n    this.setState({\r\n      isPlaying: false\r\n    })\r\n  }\r\n\r\n  update = () => {\r\n    if (!this.state.isPlaying) {\r\n      return\r\n    }\r\n\r\n    this.forceUpdate()\r\n    setTimeout(this.update, 100)\r\n  }\r\n\r\n  render() {\r\n    const current = formatTime(this.props.player.currentTime)\r\n    const total = formatTime(this.props.player.replay.length)\r\n\r\n    return (\r\n      <div class={s.time}>\r\n        {current} / {total}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const Time = stylesheet({\r\n  time: {\r\n    fontFamily: `'Roboto', Arial, Helvetica, sans-serif`,\r\n    fontSize: '10pt'\r\n  }\r\n})\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { Game } from '../../Game'\r\nimport { TimeLine as s } from './style'\r\n\r\ninterface TimeLineProps {\r\n  game: Game\r\n}\r\n\r\ninterface TimeLineState {\r\n  progress: number\r\n  ghostKnobActive: boolean\r\n  ghostKnobPos: string\r\n  onPostUpdate: (() => void) | null\r\n}\r\n\r\nexport class TimeLine extends Component<TimeLineProps, TimeLineState> {\r\n  private offPostUpdate?: Unsubscribe\r\n\r\n  constructor(props: TimeLineProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      progress: 0,\r\n      ghostKnobActive: false,\r\n      ghostKnobPos: '0%',\r\n      onPostUpdate: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.offPostUpdate = this.props.game.events.on('postupdate', this.onPostUpdate)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.offPostUpdate) {\r\n      this.offPostUpdate()\r\n    }\r\n  }\r\n\r\n  onPostUpdate = () => {\r\n    const player = this.props.game.player\r\n    this.setState({\r\n      progress: player.currentTime / player.replay.length\r\n    })\r\n  }\r\n\r\n  onClick = (e: any) => {\r\n    const rects = e.currentTarget.getClientRects()[0]\r\n    const progress = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\r\n    this.props.game.player.seekByPercent(progress * 100)\r\n    this.props.game.player.pause()\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({\r\n      ghostKnobActive: true\r\n    })\r\n  }\r\n\r\n  onMouseMove = (e: any) => {\r\n    if (!this.state.ghostKnobActive) {\r\n      return\r\n    }\r\n\r\n    const rects = e.currentTarget.getClientRects()[0]\r\n    const progressPos = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\r\n    const pos = progressPos * 100 + '%'\r\n    this.setState({\r\n      ghostKnobPos: pos\r\n    })\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({\r\n      ghostKnobActive: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const timePos = this.state.progress * 100\r\n    const knobOff = timePos + '%'\r\n    const lineOff = 100 - timePos + '%'\r\n\r\n    return (\r\n      <div\r\n        class={s.timeline}\r\n        onClick={this.onClick}\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseMove={this.onMouseMove}\r\n        onMouseLeave={this.onMouseLeave}\r\n      >\r\n        <div class={s.ghostLine} />\r\n        <div class={s.line} style={{ right: lineOff }} />\r\n        <div class={s.knob} style={{ left: knobOff }} />\r\n        <div class={s.ghostKnob} style={{ left: this.state.ghostKnobPos }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const TimeLine = stylesheet({\r\n  timeline: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    height: '26px',\r\n    cursor: 'pointer'\r\n  },\r\n  line: {\r\n    height: '4px',\r\n    backgroundColor: '#fff',\r\n    position: 'absolute',\r\n    left: '0',\r\n    right: '0',\r\n    borderRadius: '2px'\r\n  },\r\n  ghostLine: {\r\n    height: '4px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    position: 'absolute',\r\n    left: '0',\r\n    right: '0',\r\n    borderRadius: '2px'\r\n  },\r\n  knob: {\r\n    position: 'absolute',\r\n    width: '12px',\r\n    height: '12px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '6px',\r\n    left: '100%',\r\n    marginLeft: '-6px'\r\n  },\r\n  ghostKnob: {\r\n    position: 'absolute',\r\n    width: '8px',\r\n    height: '8px',\r\n    backgroundColor: '#fff',\r\n    boxSizing: 'border-box',\r\n    borderRadius: '8px',\r\n    left: '0',\r\n    marginLeft: '-4px',\r\n    display: 'none',\r\n    $nest: {\r\n      '&:hover': {\r\n        display: 'block'\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { h, Component } from 'preact'\r\nimport { Unsubscribe } from 'nanoevents'\r\nimport { Game } from '../../Game'\r\nimport { VolumeControl as s } from './style'\r\n\r\ninterface VolumeControlProps {\r\n  game: Game\r\n}\r\n\r\ninterface VolumeControlState {\r\n  volume: number\r\n  ghostKnobActive: boolean\r\n  ghostKnobPos: string\r\n}\r\n\r\nexport class VolumeControl extends Component<\r\n  VolumeControlProps,\r\n  VolumeControlState\r\n> {\r\n  private offVolumeChange?: Unsubscribe\r\n\r\n  constructor(props: VolumeControlProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      volume: props.game.soundSystem.getVolume(),\r\n      ghostKnobActive: false,\r\n      ghostKnobPos: '5%'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.offVolumeChange = this.props.game.soundSystem.events.on('volumeChange', this.onVolumeChange)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.offVolumeChange && this.offVolumeChange()\r\n  }\r\n\r\n  onVolumeChange = () => {\r\n    this.setState({\r\n      volume: this.props.game.soundSystem.getVolume()\r\n    })\r\n  }\r\n\r\n  onClick = (e: any) => {\r\n    const rects = e.currentTarget.getClientRects()[0]\r\n    const volume = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\r\n    this.props.game.soundSystem.setVolume(volume)\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({\r\n      ghostKnobActive: true\r\n    })\r\n  }\r\n\r\n  onMouseMove = (e: any) => {\r\n    if (!this.state.ghostKnobActive) {\r\n      return\r\n    }\r\n\r\n    const rects = e.currentTarget.getClientRects()[0]\r\n    const volumePos = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\r\n    const pos = Math.min(95, Math.max(5, volumePos * 100)) + '%'\r\n    this.setState({\r\n      ghostKnobPos: pos\r\n    })\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({\r\n      ghostKnobActive: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const volumePos = this.state.volume * 100\r\n    const knobOff = Math.min(95, Math.max(5, volumePos)) + '%'\r\n    const lineOff = Math.min(95, Math.max(5, 100 - volumePos)) + '%'\r\n\r\n    return (\r\n      <div\r\n        class={s.control}\r\n        onClick={this.onClick}\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseMove={this.onMouseMove}\r\n        onMouseLeave={this.onMouseLeave}\r\n      >\r\n        <div class={s.ghostLine} />\r\n        <div class={s.line} style={{ right: lineOff }} />\r\n        <div class={s.knob} style={{ left: knobOff }} />\r\n        <div class={s.ghostKnob} style={{ left: this.state.ghostKnobPos }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const VolumeControl = stylesheet({\r\n  control: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    width: '80px',\r\n    height: '26px',\r\n    marginLeft: '6px',\r\n    marginRight: '14px',\r\n    cursor: 'pointer'\r\n  },\r\n  line: {\r\n    height: '4px',\r\n    backgroundColor: '#fff',\r\n    position: 'absolute',\r\n    left: '0',\r\n    right: '0',\r\n    borderRadius: '2px'\r\n  },\r\n  ghostLine: {\r\n    height: '4px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    position: 'absolute',\r\n    left: '0',\r\n    right: '0',\r\n    borderRadius: '2px'\r\n  },\r\n  knob: {\r\n    position: 'absolute',\r\n    width: '12px',\r\n    height: '12px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '6px',\r\n    left: '100%',\r\n    marginLeft: '-6px'\r\n  },\r\n  ghostKnob: {\r\n    position: 'absolute',\r\n    width: '8px',\r\n    height: '8px',\r\n    backgroundColor: '#fff',\r\n    boxSizing: 'border-box',\r\n    borderRadius: '8px',\r\n    left: '0',\r\n    marginLeft: '-4px',\r\n    display: 'none',\r\n    $nest: {\r\n      '&:hover': {\r\n        display: 'block'\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { h } from 'preact'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\nexport function PlayButton(props: { onClick?: (e: any) => void }) {\r\n  return (\r\n    <div class={cs.button} onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 64 64\"\r\n        fill=\"currentcolor\"\r\n      >\r\n        <path d=\"M0 0 L0 64 L64 32 Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { h } from 'preact'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\nexport function PauseButton(props: { onClick?: (e: any) => void }) {\r\n  return (\r\n    <div class={cs.button} onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 64 64\"\r\n        fill=\"currentcolor\"\r\n      >\r\n        <path d=\"M0 0 L0 64 L20 64 L20 0 M44 0 L64 0 L64 64 L44 64 Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { h } from 'preact'\r\nimport { classes } from 'typestyle'\r\nimport { VolumeButton as s } from './style'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\nexport function VolumeButton(props: { onClick?: (e: any) => void }) {\r\n  return (\r\n    <div class={classes(cs.button, s.button)} onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 48 48\"\r\n        fill=\"currentcolor\"\r\n      >\r\n        <path d=\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const VolumeButton = stylesheet({\r\n  button: {\r\n    width: '28px',\r\n    height: '28px',\r\n    padding: '2px',\r\n    marginRight: '5px'\r\n  }\r\n})\r\n","import { h } from 'preact'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\nexport function SpeedUpButton(props: { onClick?: (e: any) => void }) {\r\n  return (\r\n    <div class={cs.button} onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 64 64\"\r\n        fill=\"currentcolor\"\r\n      >\r\n        <path d=\"M0 0 L0 64 L32 32 L32 64 L64 32 L32 0 L32 32 Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { h } from 'preact'\r\nimport { classes } from 'typestyle'\r\nimport { SpeedDownButtonStyle as s } from './style'\r\nimport { ControlsStyle as cs } from '../../Controls.style'\r\n\r\nexport function SpeedDownButton(props: { onClick?: (e: any) => void }) {\r\n  return (\r\n    <div class={classes(cs.button, s.button)} onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 64 64\"\r\n        fill=\"currentcolor\"\r\n      >\r\n        <path d=\"M0 0 L0 64 L32 32 L32 64 L64 32 L32 0 L32 32 Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { stylesheet } from 'typestyle'\r\n\r\nexport const SpeedDownButtonStyle = stylesheet({\r\n  button: {\r\n    transform: 'rotate(180deg)'\r\n  }\r\n})\r\n","import { stylesheet } from 'typestyle'\r\n\r\nconst rootStyle = () => ({\r\n  position: 'relative' as 'relative',\r\n  color: 'white',\r\n  width: '100%',\r\n  height: '100%',\r\n  cursor: 'none',\r\n  userSelect: 'none' as 'none'\r\n})\r\n\r\nconst titleStyle = () => ({\r\n  position: 'absolute' as 'absolute',\r\n  top: '20px',\r\n  left: '0',\r\n  zIndex: 20,\r\n  padding: '10px 10px 10px 20px',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  fontSize: '13pt',\r\n  fontFamily: `'Roboto', Arial, Helvetica, sans-serif`,\r\n  opacity: 0,\r\n  transition: 'opacity 0.2s'\r\n})\r\n\r\nconst controlsStyle = () => ({\r\n  zIndex: 30,\r\n  position: 'absolute' as 'absolute',\r\n  width: '100%',\r\n  bottom: 0,\r\n  padding: '0 16px',\r\n  boxSizing: 'border-box' as 'border-box',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  userSelect: 'none' as 'none',\r\n  opacity: 0,\r\n  transition: 'opacity 0.2s'\r\n})\r\n\r\nexport const RootStyle = stylesheet({\r\n  root: {\r\n    ...rootStyle()\r\n  },\r\n  rootVisible: {\r\n    ...rootStyle(),\r\n    cursor: 'default'\r\n  },\r\n\r\n  title: {\r\n    ...titleStyle()\r\n  },\r\n  titleVisible: {\r\n    ...titleStyle(),\r\n    opacity: 1\r\n  },\r\n\r\n  controls: {\r\n    ...controlsStyle()\r\n  },\r\n  controlsVisible: {\r\n    ...controlsStyle(),\r\n    opacity: 1\r\n  },\r\n\r\n  screen: {\r\n    position: 'absolute' as 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 10\r\n  }\r\n})\r\n"],"sourceRoot":""}